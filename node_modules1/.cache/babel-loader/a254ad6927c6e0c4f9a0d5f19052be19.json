{"remainingRequest":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\babel-loader\\lib\\index.js!E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\OneDrive\\bae\\ht\\02_ADMIN\\src\\components\\operatingFunc\\vehicleEntryExitLive.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\src\\components\\operatingFunc\\vehicleEntryExitLive.vue","mtime":1609202817110},{"path":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\ht\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJFOlxcT25lRHJpdmVcXGJhZVxcaHRcXDAyX0FETUlOXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNvbmZpZyBmcm9tICIuLi8uLi9jb25maWcuanMiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFMaXN0OiBbewogICAgICAgIGdldF90aW1lOiAiIiwKICAgICAgICBnZXRfbG9jYXRpb246ICIiLAogICAgICAgIGdldF9kaXJlY3Rpb246ICIiLAogICAgICAgIGdldF9scDogIiIsCiAgICAgICAgZ2V0X2ZlZTogMCwKICAgICAgICBnZXRfcGFpZF9mZWU6IDAsCiAgICAgICAgZ2V0X3JlZ2lzdGVyZWQ6ICIiLAogICAgICAgIGdldF9jb250ZW50czogIiIKICAgICAgfV0sCiAgICAgIGNhcm1lcmFfbGlzdDogW3sKICAgICAgICBraW5kX2Jhcl9zdGF0dXM6ICJiYXJyaWVyX3N0YXR1cyIsCiAgICAgICAga2luZF9iYXJfcG9saWN5OiAiYmFyX3Bsb2ljeSIsCiAgICAgICAgc3RhdHVzOiAiZG93biIsCiAgICAgICAgbG9jYXRpb246ICLsoJXrrLjsnoXqtawiLAogICAgICAgIGRpcmVjdGlvbjogImluIiwKICAgICAgICBscDogIjEyM+qwgDQ1NjciLAogICAgICAgIGltYWdlX2Rpc3BsYXk6IGZhbHNlLAogICAgICAgIGJhcnJpZXJfY29udHJvbF9kaXNwbGF5OiB0cnVlLAogICAgICAgIGJhcnJpZXJfcG9saWN5X25hbWU6ICJiYXJyaWVyX3BvbGljeTEiLAogICAgICAgIGltYWdlX25hbWU6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9jYXJfdGVzdDEuanBnIiksCiAgICAgICAgY2hlY2tlZE5hbWVzOiAiYWxsX3ZlaGljbGUiCiAgICAgIH0sIHsKICAgICAgICBraW5kOiAiYmFycmllcl9zdGF0dXMiLAogICAgICAgIHN0YXR1czogImRvd24iLAogICAgICAgIGxvY2F0aW9uOiAi7KCV66y47Lac6rWsIiwKICAgICAgICBkaXJlY3Rpb246ICJvdXQiLAogICAgICAgIGxwOiAiNTQ26rCAMTUxNyIsCiAgICAgICAgaW1hZ2VfZGlzcGxheTogZmFsc2UsCiAgICAgICAgYmFycmllcl9jb250cm9sX2Rpc3BsYXk6IHRydWUsCiAgICAgICAgYmFycmllcl9wb2xpY3lfbmFtZTogImJhcnJpZXJfcG9saWN5MiIsCiAgICAgICAgaW1hZ2VfbmFtZTogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2Nhcl90ZXN0Mi5qcGciKSwKICAgICAgICBjaGVja2VkTmFtZXM6ICJyZWdpc3RlcmVkX3ZlaGljbGUiCiAgICAgIH1dLAogICAgICBzdGFydF90aW1lOiBuZXcgRGF0ZSgpLAogICAgICBlbmRfdGltZTogbmV3IERhdGUoKSwKICAgICAgdG90YWxfcGFya2luZ19mZWU6IDAsCiAgICAgIHRvdGFsX2Rpc2NvdW50ZWRfZmVlOiAwLAogICAgICB0b3RhbF9wYWlkX2ZlZTogMCwKICAgICAgdG9nZ2xlOiBmYWxzZSwKICAgICAgb3BlbmZpeDogZmFsc2UsCiAgICAgIG5vc2lnbmFsOiBmYWxzZSwKICAgICAgbGlzdF9pdGVtczogewogICAgICAgIHRpbWU6ICLtmITsnqzsi5zqsIQiLAogICAgICAgIGxvb3BfZXZlbnRfdGltZTogInBj7Iuc6rCEIiwKICAgICAgICBsb2NhdGlvbjogIjHqtazsl60iLAogICAgICAgIGRpcmVjdGlvbjogIkluIiwKICAgICAgICBscDogIjEyM+qwgDQ1NjciLAogICAgICAgIHJlc2lzdGVyZWQ6ICLrk7HroZ3ssKjrn4kiLAogICAgICAgIGRvbmdfaG86ICIxMDHrj5kiLAogICAgICAgIGltYWdlX2Rpc3BsYXk6IGZhbHNlLAogICAgICAgIGltYWdlX25hbWU6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9jYXJfdGVzdDQuanBnIikKICAgICAgfSwKICAgICAgY2hlY2tlZDogW10sCiAgICAgIGJ1dHRvbl92YWx1ZTogW3sKICAgICAgICBuYW1lOiAi6rCc67CpIiwKICAgICAgICBjaGVja2VkOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi7ZKA66a8IiwKICAgICAgICBjaGVja2VkOiBmYWxzZQogICAgICB9XQogICAgfTsKICB9LAogIGZpbHRlcnM6IHsKICAgIGN1cnJlbmN5OiBmdW5jdGlvbiBjdXJyZW5jeSh2YWx1ZSkgewogICAgICB2YXIgbnVtID0gbmV3IE51bWJlcih2YWx1ZSk7CiAgICAgIHJldHVybiBudW0udG9GaXhlZCgwKS5yZXBsYWNlKC8oXGQpKD89KFxkezN9KSsoPzpcLlxkKyk/JCkvZywgIiQxLCIpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsibWFpblRpdGxlIl0pLCB7CiAgICBjb3VudF9pbjogZnVuY3Rpb24gY291bnRfaW4oKSB7CiAgICAgIHZhciBjb3VudCA9IDA7CiAgICAgIHRoaXMuZGF0YUxpc3QuZm9yRWFjaChmdW5jdGlvbiAoY290KSB7CiAgICAgICAgaWYgKGNvdC5nZXRfZGlyZWN0aW9uID09PSAiaW4iKSBjb3VudCsrOwogICAgICB9KTsKICAgICAgcmV0dXJuIGNvdW50OwogICAgfSwKICAgIGNvdW50X291dDogZnVuY3Rpb24gY291bnRfb3V0KCkgewogICAgICB2YXIgY291bnQgPSAwOwogICAgICB0aGlzLmRhdGFMaXN0LmZvckVhY2goZnVuY3Rpb24gKGNvdCkgewogICAgICAgIGlmIChjb3QuZ2V0X2RpcmVjdGlvbiA9PT0gIm91dCIpIGNvdW50Kys7CiAgICAgIH0pOwogICAgICByZXR1cm4gY291bnQ7CiAgICB9CiAgfSksCiAgYmVmb3JlUm91dGVFbnRlcjogZnVuY3Rpb24gYmVmb3JlUm91dGVFbnRlcih0bywgZnJvbSwgbmV4dCkgewogICAgY29uZmlnLnBhcmtpbmdMb3QudHlwZSA9PT0gInBhaWQiID8gbmV4dCgpIDogbmV4dCh7CiAgICAgIG5hbWU6ICd2ZWhpY2xlRW50cnlFeGl0TGl2ZTEnCiAgICB9KTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJHNvY2tldC5vbigibWVzc2FnZV9mcm9tX3NlcnZlciIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLmxwcl9wcm9jZXNzKGRhdGEpOwogICAgfSksIHRoaXMuYmFycmllcl9uYW1lX2NoZWNrKCksIC8vIHRoaXMuYmFycmllcl9wb2xpY3lfcXVlcnkoKSwKICAgIC8vdGhpcy5iYXJfc3RhdHVzX3F1ZXJ5KCksCiAgICB0aGlzLmxvZ2luQ2hlY2soKSwgdGhpcy5zdGFydCgpLCB0aGlzLnZlaGljbGVfb2JqX2xpc3RfZmluZCgpOwogICAgdGhpcy5jaGFuZ2VUaXRsZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlVGl0bGU6IGZ1bmN0aW9uIGNoYW5nZVRpdGxlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMubWFpblRpdGxlLmZvckVhY2goZnVuY3Rpb24gKHRpdGxlKSB7CiAgICAgICAgdGl0bGUuc3ViTWVudS5mb3JFYWNoKGZ1bmN0aW9uIChhZGQpIHsKICAgICAgICAgIGlmIChhZGQuYWRkID09PSAndmVoaWNsZUVudHJ5RXhpdExpdmUnKSBfdGhpczIudGl0bGVzID0gYWRkLnRpdGxlOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBsb2dpbkNoZWNrOiBmdW5jdGlvbiBsb2dpbkNoZWNrKCkgewogICAgICB2YXIgc3RhdHVzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInN0YXR1cyIpOwoKICAgICAgaWYgKHN0YXR1cyAhPT0gIm9rIiB8fCBzdGF0dXMgIT09ICJPSyIpIHsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpblN1Y2Nlc3MgPSBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpblN1Y2Nlc3MgPSB0cnVlOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZygic3RhdHVzICIsIHN0YXR1cyk7CiAgICB9LAogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShldmVudCkgewogICAgICB2YXIgZnJtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpOwogICAgICBmcm0uc2V0QXR0cmlidXRlKCdpZCcsICdpbWcnKTsKICAgICAgZnJtLnNldEF0dHJpYnV0ZSgnYWN0aW9uJywgZXZlbnQuaW1hZ2VfbmFtZSk7CiAgICAgIGZybS5zZXRBdHRyaWJ1dGUoJ21ldGhvZCcsICdnZXQnKTsKICAgICAgZnJtLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ2ltZycpOwogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZybSk7CiAgICAgIHdpbmRvdy5vcGVuKCdhYm91dDpibGFuaycsICdpbWcnLCAnd2lkdGg9JyArIHBhcnNlSW50KHdpbmRvdy5pbm5lcldpZHRoKSAqIDEgKyAnLGhlaWdodD0nICsgcGFyc2VJbnQod2luZG93LmlubmVySGVpZ2h0KSAqIDEgKyAnLHRvb2xiYXI9MCxtZW51YmFyPTAsbG9jYXRpb249MCxzdGF0dXM9MCxzY3JvbGxiYXJzPTEscmVzaXphYmxlPTAsbGVmdD0wLHRvcD0wJyk7CiAgICAgIGZybS5zdWJtaXQoKTsKICAgIH0sCiAgICBscHJfcHJvY2VzczogZnVuY3Rpb24gbHByX3Byb2Nlc3MoZGF0YTEpIHsKICAgICAgaWYgKGRhdGExLmtpbmQgPT09ICJiYXJyaWVyX3N0YXR1cyIpIHsKICAgICAgICBjb25zb2xlLmxvZygiYmFycmllcl9zdGF0dXMiLCBkYXRhMSk7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmIChkYXRhMS5sb2NhdGlvbiA9PSB0aGlzLmNhcm1lcmFfbGlzdFtpXS5sb2NhdGlvbikgewogICAgICAgICAgICBpZiAoZGF0YTEuc3RhdHVzID09PSAiZG93biIgfHwgZGF0YTEuc3RhdHVzID09PSAiRE9XTiIpIHsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtpXS5pbWFnZV9kaXNwbGF5ID0gZmFsc2U7CiAgICAgICAgICAgICAgdmFyIHRlbXAgPSB7fTsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5wdXNoKHRlbXApOwogICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnNwbGljZSh0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGggLSAxLCAxKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtpXS5pbWFnZV9kaXNwbGF5ID0gdHJ1ZTsKICAgICAgICAgICAgICB2YXIgX3RlbXAgPSB7fTsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5wdXNoKF90ZW1wKTsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5zcGxpY2UodGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoIC0gMSwgMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoZGF0YTEua2luZCA9PT0gImJhcl9tb2RlIikgewogICAgICAgIGNvbnNvbGUubG9nKCJiYXJfbW9kZSIsIGRhdGExKTsKCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBkYXRhMS5kb2NzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICB2YXIgYmFyX21vZGUgPSBkYXRhMS5kb2NzW2pdOwoKICAgICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCB0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgICAgaWYgKGJhcl9tb2RlLmxvY2F0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaV0ubG9jYXRpb24gJiYgYmFyX21vZGUuZGlyZWN0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaV0uZGlyZWN0aW9uKSB7CiAgICAgICAgICAgICAgaWYgKGJhcl9tb2RlLm1vZGUgPT09ICJsb2NrIikgewogICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3RbX2ldLm9wZW5maXggPSB0cnVlOwogICAgICAgICAgICAgICAgdmFyIF90ZW1wMiA9IHt9OwogICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3QucHVzaChfdGVtcDIpOwogICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3Quc3BsaWNlKHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aCAtIDEsIDEpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtfaV0ub3BlbmZpeCA9IGZhbHNlOwogICAgICAgICAgICAgICAgdmFyIF90ZW1wMyA9IHt9OwogICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3QucHVzaChfdGVtcDMpOwogICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3Quc3BsaWNlKHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aCAtIDEsIDEpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoZGF0YTEua2luZCA9PT0gImJhcl9zdGF0dXMiKSB7CiAgICAgICAgY29uc29sZS5sb2coImJhcl9zdGF0dXMiLCBkYXRhMSk7CgogICAgICAgIGZvciAodmFyIF9qID0gMDsgX2ogPCBkYXRhMS5kb2NzLmxlbmd0aDsgX2orKykgewogICAgICAgICAgdmFyIGJhcl9zdGF0dXMgPSBkYXRhMS5kb2NzW19qXTsKCiAgICAgICAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCB0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGg7IF9pMisrKSB7CiAgICAgICAgICAgIGlmIChiYXJfc3RhdHVzLmxvY2F0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaTJdLmxvY2F0aW9uICYmIGJhcl9zdGF0dXMuZGlyZWN0aW9uID09IHRoaXMuY2FybWVyYV9saXN0W19pMl0uZGlyZWN0aW9uKSB7CiAgICAgICAgICAgICAgaWYgKGRhdGExLnN0YXR1cyA9PT0gImRvd24iIHx8IGRhdGExLnN0YXR1cyA9PT0gIkRPV04iKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtfaTJdLmltYWdlX2Rpc3BsYXkgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHZhciBfdGVtcDQgPSB7fTsKICAgICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnB1c2goX3RlbXA0KTsKICAgICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnNwbGljZSh0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGggLSAxLCAxKTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGExLnN0YXR1cyA9PT0gInVwIiB8fCBkYXRhMS5zdGF0dXMgPT09ICJVUCIpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0W19pMl0uaW1hZ2VfZGlzcGxheSA9IHRydWU7CiAgICAgICAgICAgICAgICB2YXIgX3RlbXA1ID0ge307CiAgICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5wdXNoKF90ZW1wNSk7CiAgICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5zcGxpY2UodGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoIC0gMSwgMSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChkYXRhMS5raW5kID09PSAic29ja2V0X2Vycm9yIikgewogICAgICAgIC8vICBjb25zb2xlLmxvZygic29ja2V0IGVycm9yIDogIiwgZGF0YTEpCiAgICAgICAgZm9yICh2YXIgX2kzID0gMDsgX2kzIDwgdGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoOyBfaTMrKykgewogICAgICAgICAgaWYgKGRhdGExLmxvY2F0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaTNdLmxvY2F0aW9uICYmIGRhdGExLmRpcmVjdGlvbiA9PT0gdGhpcy5jYXJtZXJhX2xpc3RbX2kzXS5kaXJlY3Rpb24pIHsKICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3RbX2kzXS5ub3NpZ25hbCA9IHRydWU7CiAgICAgICAgICAgIHZhciBfdGVtcDYgPSB7fTsKICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3QucHVzaChfdGVtcDYpOwogICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5zcGxpY2UodGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoIC0gMSwgMSk7IC8vY29uc29sZS5sb2coIuuztOuCvOqwkiIsIHRoaXMuY2FybWVyYV9saXN0WzBdLnN0YXR1cykKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoZGF0YTEua2luZCA9PT0gIndlZWtseV9iYXJyaWVyX3BvbGljeSIpIHsKICAgICAgICBmb3IgKHZhciBfaTQgPSAwOyBfaTQgPCB0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGg7IF9pNCsrKSB7CiAgICAgICAgICBpZiAoZGF0YTEubG9jYXRpb24gPT09IHRoaXMuY2FybWVyYV9saXN0W19pNF0ubG9jYXRpb24gJiYgZGF0YTEuZGlyZWN0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaTRdLmRpcmVjdGlvbikgewogICAgICAgICAgICBpZiAoZGF0YTEuYmFycmllcl9wb2xpY3kgPT09ICLqsJzrsKkiKSB7CiAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3RbX2k0XS5jaGVja2VkTmFtZXMgPSAiYWxsX3ZlaGljbGUiOwogICAgICAgICAgICAgIHZhciBfdGVtcDcgPSB7fTsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5wdXNoKF90ZW1wNyk7CiAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3Quc3BsaWNlKHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aCAtIDEsIDEpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGZvciAodmFyIF9qMiA9IDA7IF9qMiA8IGNvbmZpZy5iYXJyaWVyX2Rpc3BsYXlfbGlzdC5sZW5ndGg7IF9qMisrKSB7CiAgICAgICAgICAgICAgICBpZiAoZGF0YTEubG9jYXRpb24gPT09IGNvbmZpZy5iYXJyaWVyX2Rpc3BsYXlfbGlzdFtfajJdLmxvY2F0aW9uICYmIGRhdGExLmRpcmVjdGlvbiA9PT0gY29uZmlnLmJhcnJpZXJfZGlzcGxheV9saXN0W19qMl0uZGlyZWN0aW9uKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0W19pNF0uY2hlY2tlZE5hbWVzID0gY29uZmlnLmJhcnJpZXJfZGlzcGxheV9saXN0W19qMl0uY2hlY2tlZE5hbWVzOwogICAgICAgICAgICAgICAgICB2YXIgX3RlbXA4ID0ge307CiAgICAgICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnB1c2goX3RlbXA4KTsKICAgICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3Quc3BsaWNlKHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aCAtIDEsIDEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChkYXRhMS5raW5kID09PSAic29ja2V0X25vcm1hbCIpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZygic29ja2V0IG5vcm1hbCA6ICIsIGRhdGExKQogICAgICAgIGZvciAodmFyIF9pNSA9IDA7IF9pNSA8IHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aDsgX2k1KyspIHsKICAgICAgICAgIGlmIChkYXRhMS5sb2NhdGlvbiA9PT0gdGhpcy5jYXJtZXJhX2xpc3RbX2k1XS5sb2NhdGlvbiAmJiBkYXRhMS5kaXJlY3Rpb24gPT09IHRoaXMuY2FybWVyYV9saXN0W19pNV0uZGlyZWN0aW9uKSB7CiAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0W19pNV0ubm9zaWduYWwgPSBmYWxzZTsKICAgICAgICAgICAgdmFyIF90ZW1wOSA9IHt9OwogICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5wdXNoKF90ZW1wOSk7CiAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnNwbGljZSh0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGggLSAxLCAxKTsgLy9jb25zb2xlLmxvZygi67O064K86rCSIiwgdGhpcy5jYXJtZXJhX2xpc3RbMF0uc3RhdHVzKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChkYXRhMS5raW5kID09ICJscHIiKSB7CiAgICAgICAgY29uc29sZS5sb2coZGF0YTEua2luZCwgZGF0YTEpOyAvL3ZhciBpbWFnZV9uYW1lID0gImxvY2FsaG9zdDo3MjAwL2ltYWdlcy8iK2RhdGExLmZvbGRlcl9uYW1lKyIvIitkYXRhMS5maWxlbmFtZQoKICAgICAgICB2YXIgaW1hZ2VfbmFtZSA9IGNvbmZpZy5pbWFnZV9zcmMgKyBkYXRhMS5mb2xkZXJfbmFtZSArICIvIiArIGRhdGExLmZpbGVuYW1lOyAvLyBjb25zb2xlLmxvZygiaW1hZ2VfbmFtZSA6ICIsIGltYWdlX25hbWUpCiAgICAgICAgLy8JY29uc29sZS5sb2coImRhdGFMaXN0IDogIiwgdGhpcy5kYXRhTGlzdCk7CgogICAgICAgIGlmIChkYXRhMS5kaXJlY3Rpb24gPT09ICJpbiIpIHsKICAgICAgICAgIGRhdGExLmRpcmVjdGlvbjEgPSAiaW4iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkYXRhMS5kaXJlY3Rpb24xID0gIm91dCI7CiAgICAgICAgfQoKICAgICAgICB2YXIgZmxhZyA9IGZhbHNlOwoKICAgICAgICBmb3IgKHZhciBfaTYgPSAwOyBfaTYgPCB0aGlzLmRhdGFMaXN0Lmxlbmd0aDsgX2k2KyspIHsKICAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy5kYXRhTGlzdFtpXS5nZXRfbG9vcF9ldmVudF90aW1lLCB0aGlzLmRhdGFMaXN0W2ldLmdldF9scCk7CiAgICAgICAgICBpZiAodGhpcy5kYXRhTGlzdFtfaTZdLmdldF9sb29wX2V2ZW50X3RpbWUgPT09IGRhdGExLmxvb3BfZXZlbnRfdGltZSkgewogICAgICAgICAgICBpZiAoZGF0YTEubHAgIT0gIuuvuOyduOyLnSIpIHsKICAgICAgICAgICAgICAvLyDrk6TslrTsmKgg7LCo65+J7J20IOuvuOyduOyLneydtCDslYTri4jrqbQKICAgICAgICAgICAgICBpZiAodGhpcy5kYXRhTGlzdFtfaTZdLmdldF9scCA9PT0gIuuvuOyduOyLnSIpIHsKICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2k2XS5nZXRfbHAgPSBkYXRhMS5scDsKICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2k2XS5nZXRfcmVnaXN0ZXJlZCA9IGRhdGExLnJlZ2lzdGVyZWQ7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pNl0uZ2V0X2RpcmVjdGlvbiA9IGRhdGExLmRpcmVjdGlvbjE7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pNl0uZ2V0X2NvbnRlbnRzID0gZGF0YTEuY29udGVudHM7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pNl0uZ2V0X2ltYWdlX25hbWUgPSB0cnVlOwogICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTZdLmdldF9pbWFnZV9uYW1lID0gaW1hZ2VfbmFtZTsKCiAgICAgICAgICAgICAgICBpZiAoZGF0YTEuZGlyZWN0aW9uID09PSAiaW4iKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2k2XS5nZXRfZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pNl0uZ2V0X3BhaWRfZmVlID0gMDsKICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTZdLmdldF9mZWUgPSAwOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhMS5kaXNjb3VudGVkX2ZlZSkgewogICAgICAgICAgICAgICAgICAgIGRhdGExLmRpc2NvdW50ZWRfZmVlID0gMDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhMS5mZWUgfHwgZGF0YTEuZmVlID09PSA5OTk4IHx8IGRhdGExLmZlZSA9PT0gOTk5OSkgewogICAgICAgICAgICAgICAgICAgIGRhdGExLmZlZSA9IDA7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGlmICghZGF0YTEuZmVlIHx8IGRhdGExLmZlZSA9PT0gOTk5OCB8fCBkYXRhMS5mZWUgPT09IDk5OTkpIHsKICAgICAgICAgICAgICAgICAgICBkYXRhMS5wYWlkX2ZlZSA9IDA7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJmbGFnID09PSB0cnVlIDoiLCBkYXRhMSk7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2k2XS5nZXRfZGlzY291bnRlZF9mZWUgPSBwYXJzZUludChkYXRhMS5kaXNjb3VudGVkX2ZlZSwgMTApOwogICAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pNl0uZ2V0X3BhaWRfZmVlID0gcGFyc2VJbnQoZGF0YTEucGFpZF9mZWUsIDEwKTsKICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTZdLmdldF9mZWUgPSBwYXJzZUludChkYXRhMS5mZWUsIDEwKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBmb3IgKHZhciBfaTcgPSAwOyBfaTcgPCB0aGlzLmNhcm1lcmFfbGlzdC5sZW5ndGg7IF9pNysrKSB7CiAgICAgICAgICAgICAgICAgIC8vCWNvbnNvbGUubG9nKGRhdGExLmxwLCB0aGlzLmNhcm1lcmFfbGlzdFtpXS5sb2NhdGlvbiwgZGF0YTEubG9jYXRpb24pOwogICAgICAgICAgICAgICAgICBpZiAoZGF0YTEubG9jYXRpb24gPT09IHRoaXMuY2FybWVyYV9saXN0W19pN10ubG9jYXRpb24gJiYgZGF0YTEuZGlyZWN0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaTddLmRpcmVjdGlvbikgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0W19pN10ubHAgPSBkYXRhMS5scDsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtfaTddLmltYWdlX25hbWUgPSBpbWFnZV9uYW1lOwogICAgICAgICAgICAgICAgICAgIHZhciBfdGVtcDEwID0ge307CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3QucHVzaChfdGVtcDEwKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5zcGxpY2UodGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoIC0gMSwgMSk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZsYWcgPSB0cnVlOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChmbGFnID09IGZhbHNlKSB7CiAgICAgICAgICB2YXIgX3RlbXAxMSA9IHt9OwogICAgICAgICAgX3RlbXAxMS5nZXRfdGltZSA9IGZvcm1hdF90aW1lKG5ldyBEYXRlKGRhdGExLmxvb3BfZXZlbnRfdGltZSkpOwogICAgICAgICAgX3RlbXAxMS5nZXRfbG9vcF9ldmVudF90aW1lID0gZGF0YTEubG9vcF9ldmVudF90aW1lOwogICAgICAgICAgX3RlbXAxMS5nZXRfbG9jYXRpb24gPSBkYXRhMS5sb2NhdGlvbjsKICAgICAgICAgIF90ZW1wMTEuZ2V0X2xwID0gZGF0YTEubHA7CiAgICAgICAgICBfdGVtcDExLmdldF9yZWdpc3RlcmVkID0gZGF0YTEucmVnaXN0ZXJlZDsKICAgICAgICAgIF90ZW1wMTEuZ2V0X2RpcmVjdGlvbiA9IGRhdGExLmRpcmVjdGlvbjE7CiAgICAgICAgICBfdGVtcDExLmdldF9jb250ZW50cyA9IGRhdGExLmNvbnRlbnRzOwogICAgICAgICAgX3RlbXAxMS5nZXRfaW1hZ2VfZGlzcGxheSA9IHRydWU7CiAgICAgICAgICBfdGVtcDExLmdldF9pbWFnZV9uYW1lID0gaW1hZ2VfbmFtZTsKCiAgICAgICAgICBpZiAoZGF0YTEuZGlyZWN0aW9uID09PSAiaW4iKSB7CiAgICAgICAgICAgIF90ZW1wMTEuZ2V0X2Rpc2NvdW50ZWRfZmVlID0gMDsKICAgICAgICAgICAgX3RlbXAxMS5nZXRfcGFpZF9mZWUgPSAwOwogICAgICAgICAgICBfdGVtcDExLmdldF9mZWUgPSAwOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKCFkYXRhMS5kaXNjb3VudGVkX2ZlZSkgewogICAgICAgICAgICAgIGRhdGExLmRpc2NvdW50ZWRfZmVlID0gMDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFkYXRhMS5mZWUpIHsKICAgICAgICAgICAgICBkYXRhMS5mZWUgPSAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIWRhdGExLnBhaWRfZmVlKSB7CiAgICAgICAgICAgICAgZGF0YTEucGFpZF9mZWUgPSAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfdGVtcDExLmdldF9kaXNjb3VudGVkX2ZlZSA9IHBhcnNlSW50KGRhdGExLmRpc2NvdW50ZWRfZmVlLCAxMCk7CiAgICAgICAgICAgIF90ZW1wMTEuZ2V0X3BhaWRfZmVlID0gcGFyc2VJbnQoZGF0YTEucGFpZF9mZWUsIDEwKTsKICAgICAgICAgICAgX3RlbXAxMS5nZXRfZmVlID0gcGFyc2VJbnQoZGF0YTEuZmVlLCAxMCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJmbGFnID09PSBmYWxzZSA6ICIsIGRhdGExKTsKICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLmRhdGFMaXN0LnVuc2hpZnQoX3RlbXAxMSk7CgogICAgICAgICAgZm9yICh2YXIgX2k4ID0gMDsgX2k4IDwgdGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoOyBfaTgrKykgewogICAgICAgICAgICAvLwljb25zb2xlLmxvZyhkYXRhMS5scCwgdGhpcy5jYXJtZXJhX2xpc3RbaV0ubG9jYXRpb24sIGRhdGExLmxvY2F0aW9uKTsKICAgICAgICAgICAgaWYgKGRhdGExLmxvY2F0aW9uID09PSB0aGlzLmNhcm1lcmFfbGlzdFtfaThdLmxvY2F0aW9uICYmIGRhdGExLmRpcmVjdGlvbiA9PT0gdGhpcy5jYXJtZXJhX2xpc3RbX2k4XS5kaXJlY3Rpb24pIHsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtfaThdLmxwID0gZGF0YTEubHA7CiAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3RbX2k4XS5pbWFnZV9uYW1lID0gaW1hZ2VfbmFtZTsKICAgICAgICAgICAgICB2YXIgX3RlbXAxMiA9IHt9OwogICAgICAgICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnB1c2goX3RlbXAxMik7CiAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3Quc3BsaWNlKHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aCAtIDEsIDEpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB2YXIgdG90YWxfcGFya2luZ19mZWUgPSAwOwogICAgICAgIHZhciB0b3RhbF9kaXNjb3VudGVkX2ZlZSA9IDA7CiAgICAgICAgdmFyIHRvdGFsX3BhaWRfZmVlID0gMDsKCiAgICAgICAgZm9yICh2YXIgX2k5ID0gMDsgX2k5IDwgdGhpcy5kYXRhTGlzdC5sZW5ndGg7IF9pOSsrKSB7CiAgICAgICAgICB0b3RhbF9wYXJraW5nX2ZlZSArPSBwYXJzZUludCh0aGlzLmRhdGFMaXN0W19pOV0uZ2V0X2ZlZSwgMTApOwogICAgICAgICAgdG90YWxfZGlzY291bnRlZF9mZWUgKz0gcGFyc2VJbnQodGhpcy5kYXRhTGlzdFtfaTldLmdldF9kaXNjb3VudGVkX2ZlZSwgMTApOwogICAgICAgICAgdG90YWxfcGFpZF9mZWUgKz0gcGFyc2VJbnQodGhpcy5kYXRhTGlzdFtfaTldLmdldF9wYWlkX2ZlZSwgMTApOwogICAgICAgIH0KCiAgICAgICAgdGhpcy50b3RhbF9wYXJraW5nX2ZlZSA9IHRvdGFsX3BhcmtpbmdfZmVlOwogICAgICAgIHRoaXMudG90YWxfZGlzY291bnRlZF9mZWUgPSB0b3RhbF9kaXNjb3VudGVkX2ZlZTsKICAgICAgICB0aGlzLnRvdGFsX3BhaWRfZmVlID0gdG90YWxfcGFpZF9mZWU7IC8vCWNvbnNvbGUubG9nKHRoaXMuY2FybWVyYV9saXN0Lmxlbmd0aCk7CiAgICAgIH0gZWxzZSBpZiAoZGF0YTEua2luZCA9PSAiZmVlX2NhbGN1bGF0aW9uX3Jlc3VsdCIpIHsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhMS5raW5kLCBkYXRhMSk7IC8vdmFyIGltYWdlX25hbWUgPSAibG9jYWxob3N0OjcyMDAvaW1hZ2VzLyIrZGF0YTEuZm9sZGVyX25hbWUrIi8iK2RhdGExLmZpbGVuYW1lCgogICAgICAgIHZhciBfaW1hZ2VfbmFtZSA9IGNvbmZpZy5pbWFnZV9zcmMgKyBkYXRhMS5mb2xkZXJfbmFtZSArICIvIiArIGRhdGExLmZpbGVuYW1lOyAvLyBjb25zb2xlLmxvZygiaW1hZ2VfbmFtZSA6ICIsIGltYWdlX25hbWUpCiAgICAgICAgLy8JY29uc29sZS5sb2coImRhdGFMaXN0IDogIiwgdGhpcy5kYXRhTGlzdCk7CgoKICAgICAgICBpZiAoZGF0YTEuZGlyZWN0aW9uID09PSAiaW4iKSB7CiAgICAgICAgICBkYXRhMS5kaXJlY3Rpb24xID0gIuyeheywqCI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGRhdGExLmRpcmVjdGlvbjEgPSAi7Lac7LCoIjsKICAgICAgICB9CgogICAgICAgIHZhciBfZmxhZyA9IGZhbHNlOwoKICAgICAgICBmb3IgKHZhciBfaTEwID0gMDsgX2kxMCA8IHRoaXMuZGF0YUxpc3QubGVuZ3RoOyBfaTEwKyspIHsKICAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy5kYXRhTGlzdFtpXS5nZXRfbG9vcF9ldmVudF90aW1lLCB0aGlzLmRhdGFMaXN0W2ldLmdldF9scCk7CiAgICAgICAgICBpZiAodGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfbG9vcF9ldmVudF90aW1lID09PSBkYXRhMS5sb29wX2V2ZW50X3RpbWUpIHsKICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfbHAgPSBkYXRhMS5scDsKICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfcmVnaXN0ZXJlZCA9IGRhdGExLnJlZ2lzdGVyZWQ7CiAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxMF0uZ2V0X2RpcmVjdGlvbiA9IGRhdGExLmRpcmVjdGlvbjsKICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfY29udGVudHMgPSBkYXRhMS5jb250ZW50czsKICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfaW1hZ2VfbmFtZSA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxMF0uZ2V0X2ltYWdlX25hbWUgPSBfaW1hZ2VfbmFtZTsKCiAgICAgICAgICAgIGlmIChkYXRhMS5kaXJlY3Rpb24gPT09ICJpbiIpIHsKICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTBdLmdldF9kaXNjb3VudGVkX2ZlZSA9IDA7CiAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfcGFpZF9mZWUgPSAwOwogICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxMF0uZ2V0X2ZlZSA9IDA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgaWYgKCFkYXRhMS5kaXNjb3VudGVkX2ZlZSkgewogICAgICAgICAgICAgICAgZGF0YTEuZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKCFkYXRhMS5mZWUgfHwgZGF0YTEuZmVlID09PSA5OTk4IHx8IGRhdGExLmZlZSA9PT0gOTk5OSkgewogICAgICAgICAgICAgICAgZGF0YTEuZmVlID0gMDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmICghZGF0YTEucGFpZF9mZWUpIHsKICAgICAgICAgICAgICAgIGRhdGExLnBhaWRfZmVlID0gMDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxMF0uZ2V0X2Rpc2NvdW50ZWRfZmVlID0gcGFyc2VJbnQoZGF0YTEuZGlzY291bnRlZF9mZWUsIDEwKTsKICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTBdLmdldF9wYWlkX2ZlZSA9IHBhcnNlSW50KGRhdGExLnBhaWRfZmVlLCAxMCk7CiAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEwXS5nZXRfZmVlID0gcGFyc2VJbnQoZGF0YTEuZmVlLCAxMCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9mbGFnID0gdHJ1ZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoX2ZsYWcgPT0gZmFsc2UpIHsKICAgICAgICAgIHZhciBfdGVtcDEzID0ge307CiAgICAgICAgICBfdGVtcDEzLmdldF90aW1lID0gZm9ybWF0X3RpbWUobmV3IERhdGUoZGF0YTEubG9vcF9ldmVudF90aW1lKSk7CiAgICAgICAgICBfdGVtcDEzLmdldF9sb29wX2V2ZW50X3RpbWUgPSBkYXRhMS5sb29wX2V2ZW50X3RpbWU7CiAgICAgICAgICBfdGVtcDEzLmdldF9sb2NhdGlvbiA9IGRhdGExLmxvY2F0aW9uOwogICAgICAgICAgX3RlbXAxMy5nZXRfbHAgPSBkYXRhMS5scDsKICAgICAgICAgIF90ZW1wMTMuZ2V0X3JlZ2lzdGVyZWQgPSBkYXRhMS5yZWdpc3RlcmVkOwogICAgICAgICAgX3RlbXAxMy5nZXRfZGlyZWN0aW9uID0gZGF0YTEuZGlyZWN0aW9uOwogICAgICAgICAgX3RlbXAxMy5nZXRfY29udGVudHMgPSBkYXRhMS5jb250ZW50czsKICAgICAgICAgIF90ZW1wMTMuZ2V0X2ltYWdlX2Rpc3BsYXkgPSB0cnVlOwogICAgICAgICAgX3RlbXAxMy5nZXRfaW1hZ2VfbmFtZSA9IF9pbWFnZV9uYW1lOwoKICAgICAgICAgIGlmIChkYXRhMS5kaXJlY3Rpb24gPT09ICJpbiIpIHsKICAgICAgICAgICAgX3RlbXAxMy5nZXRfZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICBfdGVtcDEzLmdldF9wYWlkX2ZlZSA9IDA7CiAgICAgICAgICAgIF90ZW1wMTMuZ2V0X2ZlZSA9IDA7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoIWRhdGExLmRpc2NvdW50ZWRfZmVlKSB7CiAgICAgICAgICAgICAgZGF0YTEuZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIWRhdGExLmZlZSB8fCBkYXRhMS5mZWUgPT09IDk5OTggfHwgZGF0YTEuZmVlID09PSA5OTk5KSB7CiAgICAgICAgICAgICAgZGF0YTEuZmVlID0gMDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFkYXRhMS5wYWlkX2ZlZSkgewogICAgICAgICAgICAgIGRhdGExLnBhaWRfZmVlID0gMDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX3RlbXAxMy5nZXRfZGlzY291bnRlZF9mZWUgPSBkYXRhMS5kaXNjb3VudGVkX2ZlZTsKICAgICAgICAgICAgX3RlbXAxMy5nZXRfcGFpZF9mZWUgPSBkYXRhMS5wYWlkX2ZlZTsKICAgICAgICAgICAgX3RlbXAxMy5nZXRfZmVlID0gZGF0YTEuZmVlOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuZGF0YUxpc3QudW5zaGlmdChfdGVtcDEzKTsKICAgICAgICB9CgogICAgICAgIHZhciBfdG90YWxfcGFya2luZ19mZWUgPSAwOwogICAgICAgIHZhciBfdG90YWxfZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgIHZhciBfdG90YWxfcGFpZF9mZWUgPSAwOwoKICAgICAgICBmb3IgKHZhciBfaTExID0gMDsgX2kxMSA8IHRoaXMuZGF0YUxpc3QubGVuZ3RoOyBfaTExKyspIHsKICAgICAgICAgIF90b3RhbF9wYXJraW5nX2ZlZSArPSBwYXJzZUludCh0aGlzLmRhdGFMaXN0W19pMTFdLmdldF9mZWUsIDEwKTsKICAgICAgICAgIF90b3RhbF9kaXNjb3VudGVkX2ZlZSArPSBwYXJzZUludCh0aGlzLmRhdGFMaXN0W19pMTFdLmdldF9kaXNjb3VudGVkX2ZlZSwgMTApOwogICAgICAgICAgX3RvdGFsX3BhaWRfZmVlICs9IHBhcnNlSW50KHRoaXMuZGF0YUxpc3RbX2kxMV0uZ2V0X3BhaWRfZmVlLCAxMCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnRvdGFsX3BhcmtpbmdfZmVlID0gX3RvdGFsX3BhcmtpbmdfZmVlOwogICAgICAgIHRoaXMudG90YWxfZGlzY291bnRlZF9mZWUgPSBfdG90YWxfZGlzY291bnRlZF9mZWU7CiAgICAgICAgdGhpcy50b3RhbF9wYWlkX2ZlZSA9IF90b3RhbF9wYWlkX2ZlZTsgLy8JY29uc29sZS5sb2codGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoKTsKICAgICAgfSBlbHNlIGlmIChkYXRhMS5raW5kID09ICJscHJfcGF5bWVudCIpIHsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhMS5raW5kLCBkYXRhMSk7IC8vdmFyIGltYWdlX25hbWUgPSAibG9jYWxob3N0OjcyMDAvaW1hZ2VzLyIrZGF0YTEuZm9sZGVyX25hbWUrIi8iK2RhdGExLmZpbGVuYW1lCgogICAgICAgIHZhciBfaW1hZ2VfbmFtZTIgPSBjb25maWcuaW1hZ2Vfc3JjICsgZGF0YTEuZm9sZGVyX25hbWUgKyAiLyIgKyBkYXRhMS5maWxlbmFtZTsgLy8gIGNvbnNvbGUubG9nKCJpbWFnZV9uYW1lIDogIiwgaW1hZ2VfbmFtZSkKICAgICAgICAvLwljb25zb2xlLmxvZygiZGF0YUxpc3QgOiAiLCB0aGlzLmRhdGFMaXN0KTsKCgogICAgICAgIGlmIChkYXRhMS5kaXJlY3Rpb24gPT09ICJpbiIpIHsKICAgICAgICAgIGRhdGExLmRpcmVjdGlvbjEgPSAiaW4iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkYXRhMS5kaXJlY3Rpb24xID0gIm91dCI7CiAgICAgICAgfQoKICAgICAgICB2YXIgX2ZsYWcyID0gZmFsc2U7CgogICAgICAgIGZvciAodmFyIF9pMTIgPSAwOyBfaTEyIDwgdGhpcy5kYXRhTGlzdC5sZW5ndGg7IF9pMTIrKykgewogICAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmRhdGFMaXN0W2ldLmdldF9sb29wX2V2ZW50X3RpbWUsIHRoaXMuZGF0YUxpc3RbaV0uZ2V0X2xwKTsKICAgICAgICAgIGlmICh0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9sb29wX2V2ZW50X3RpbWUgPT09IGRhdGExLmxvb3BfZXZlbnRfdGltZSkgewogICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9scCA9IGRhdGExLmxwOwogICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9yZWdpc3RlcmVkID0gZGF0YTEucmVnaXN0ZXJlZDsKICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEyXS5nZXRfZGlyZWN0aW9uID0gZGF0YTEuZGlyZWN0aW9uOwogICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9jb250ZW50cyA9IGRhdGExLmNvbnRlbnRzOwogICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9pbWFnZV9uYW1lID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEyXS5nZXRfaW1hZ2VfbmFtZSA9IF9pbWFnZV9uYW1lMjsKCiAgICAgICAgICAgIGlmIChkYXRhMS5kaXJlY3Rpb24gPT09ICJpbiIpIHsKICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9kaXNjb3VudGVkX2ZlZSA9IDA7CiAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEyXS5nZXRfcGFpZF9mZWUgPSAwOwogICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxMl0uZ2V0X2ZlZSA9IDA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgaWYgKCFkYXRhMS5kaXNjb3VudGVkX2ZlZSkgewogICAgICAgICAgICAgICAgZGF0YTEuZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKCFkYXRhMS5mZWUgfHwgZGF0YTEuZmVlID09PSA5OTk4IHx8IGRhdGExLmZlZSA9PT0gOTk5OSkgewogICAgICAgICAgICAgICAgZGF0YTEuZmVlID0gMDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmICghZGF0YTEucGFpZF9mZWUpIHsKICAgICAgICAgICAgICAgIGRhdGExLnBhaWRfZmVlID0gMDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxMl0uZ2V0X2Rpc2NvdW50ZWRfZmVlID0gZGF0YTEuZGlzY291bnRlZF9mZWU7CiAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTEyXS5nZXRfcGFpZF9mZWUgPSBkYXRhMS5wYWlkX2ZlZTsKICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTJdLmdldF9mZWUgPSBkYXRhMS5mZWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9mbGFnMiA9IHRydWU7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKF9mbGFnMiA9PSBmYWxzZSkgewogICAgICAgICAgdmFyIF90ZW1wMTQgPSB7fTsKICAgICAgICAgIF90ZW1wMTQuZ2V0X3RpbWUgPSBmb3JtYXRfdGltZShuZXcgRGF0ZShkYXRhMS5sb29wX2V2ZW50X3RpbWUpKTsKICAgICAgICAgIF90ZW1wMTQuZ2V0X2xvb3BfZXZlbnRfdGltZSA9IGRhdGExLmxvb3BfZXZlbnRfdGltZTsKICAgICAgICAgIF90ZW1wMTQuZ2V0X2xvY2F0aW9uID0gZGF0YTEubG9jYXRpb247CiAgICAgICAgICBfdGVtcDE0LmdldF9scCA9IGRhdGExLmxwOwogICAgICAgICAgX3RlbXAxNC5nZXRfcmVnaXN0ZXJlZCA9IGRhdGExLnJlZ2lzdGVyZWQ7CiAgICAgICAgICBfdGVtcDE0LmdldF9kaXJlY3Rpb24gPSBkYXRhMS5kaXJlY3Rpb247CiAgICAgICAgICBfdGVtcDE0LmdldF9jb250ZW50cyA9IGRhdGExLmNvbnRlbnRzOwogICAgICAgICAgX3RlbXAxNC5nZXRfaW1hZ2VfZGlzcGxheSA9IHRydWU7CiAgICAgICAgICBfdGVtcDE0LmdldF9pbWFnZV9uYW1lID0gX2ltYWdlX25hbWUyOwoKICAgICAgICAgIGlmIChkYXRhMS5kaXJlY3Rpb24gPT09ICJpbiIpIHsKICAgICAgICAgICAgX3RlbXAxNC5nZXRfZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICBfdGVtcDE0LmdldF9wYWlkX2ZlZSA9IDA7CiAgICAgICAgICAgIF90ZW1wMTQuZ2V0X2ZlZSA9IDA7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoIWRhdGExLmRpc2NvdW50ZWRfZmVlKSB7CiAgICAgICAgICAgICAgZGF0YTEuZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIWRhdGExLmZlZSB8fCBkYXRhMS5mZWUgPT09IDk5OTggfHwgZGF0YTEuZmVlID09PSA5OTk5KSB7CiAgICAgICAgICAgICAgZGF0YTEuZmVlID0gMDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFkYXRhMS5wYWlkX2ZlZSkgewogICAgICAgICAgICAgIGRhdGExLnBhaWRfZmVlID0gMDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX3RlbXAxNC5nZXRfZGlzY291bnRlZF9mZWUgPSBkYXRhMS5kaXNjb3VudGVkX2ZlZTsKICAgICAgICAgICAgX3RlbXAxNC5nZXRfcGFpZF9mZWUgPSBkYXRhMS5wYWlkX2ZlZTsKICAgICAgICAgICAgX3RlbXAxNC5nZXRfZmVlID0gZGF0YTEuZmVlOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuZGF0YUxpc3QudW5zaGlmdChfdGVtcDE0KTsKICAgICAgICB9CgogICAgICAgIHZhciBfdG90YWxfcGFya2luZ19mZWUyID0gMDsKICAgICAgICB2YXIgX3RvdGFsX2Rpc2NvdW50ZWRfZmVlMiA9IDA7CiAgICAgICAgdmFyIF90b3RhbF9wYWlkX2ZlZTIgPSAwOwoKICAgICAgICBmb3IgKHZhciBfaTEzID0gMDsgX2kxMyA8IHRoaXMuZGF0YUxpc3QubGVuZ3RoOyBfaTEzKyspIHsKICAgICAgICAgIF90b3RhbF9wYXJraW5nX2ZlZTIgKz0gcGFyc2VJbnQodGhpcy5kYXRhTGlzdFtfaTEzXS5nZXRfZmVlLCAxMCk7CiAgICAgICAgICBfdG90YWxfZGlzY291bnRlZF9mZWUyICs9IHBhcnNlSW50KHRoaXMuZGF0YUxpc3RbX2kxM10uZ2V0X2Rpc2NvdW50ZWRfZmVlLCAxMCk7CiAgICAgICAgICBfdG90YWxfcGFpZF9mZWUyICs9IHBhcnNlSW50KHRoaXMuZGF0YUxpc3RbX2kxM10uZ2V0X3BhaWRfZmVlLCAxMCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnRvdGFsX3BhcmtpbmdfZmVlID0gX3RvdGFsX3BhcmtpbmdfZmVlMjsKICAgICAgICB0aGlzLnRvdGFsX2Rpc2NvdW50ZWRfZmVlID0gX3RvdGFsX2Rpc2NvdW50ZWRfZmVlMjsKICAgICAgICB0aGlzLnRvdGFsX3BhaWRfZmVlID0gX3RvdGFsX3BhaWRfZmVlMjsgLy8JY29uc29sZS5sb2codGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoKTsgICAgICAKICAgICAgfSBlbHNlIGlmIChkYXRhMS5raW5kID09PSAiZ2V0X3ZlaGljbGVfb2JqX2xpc3QiKSB7CiAgICAgICAgLy8gICBjb25zb2xlLmxvZygiZ2V0X3ZlaGljbGVfb2JqX2xpc3QgOiAiLCBkYXRhMSkKICAgICAgICBmb3IgKHZhciBfaTE0ID0gMDsgX2kxNCA8IGRhdGExLmRvY3MubGVuZ3RoOyBfaTE0KyspIHsKICAgICAgICAgIHZhciBvYmogPSBkYXRhMS5kb2NzW19pMTRdOwoKICAgICAgICAgIHZhciBfaW1hZ2VfbmFtZTMgPSBjb25maWcuaW1hZ2Vfc3JjICsgb2JqLmZvbGRlcl9uYW1lICsgIi8iICsgb2JqLmZpbGVuYW1lOyAvLyAgY29uc29sZS5sb2coImltYWdlX25hbWUgOiAiLCBpbWFnZV9uYW1lKQogICAgICAgICAgLy8JY29uc29sZS5sb2coImRhdGFMaXN0IDogIiwgdGhpcy5kYXRhTGlzdCk7CgoKICAgICAgICAgIGlmIChvYmouZGlyZWN0aW9uID09PSAiaW4iKSB7CiAgICAgICAgICAgIG9iai5kaXJlY3Rpb24xID0gIuyeheywqCI7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBvYmouZGlyZWN0aW9uMSA9ICLstpzssKgiOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBfZmxhZzMgPSBmYWxzZTsKICAgICAgICAgIHZhciBfdG90YWxfcGFya2luZ19mZWUzID0gMDsKICAgICAgICAgIHZhciBfdG90YWxfZGlzY291bnRlZF9mZWUzID0gMDsKICAgICAgICAgIHZhciBfdG90YWxfcGFpZF9mZWUzID0gMDsKCiAgICAgICAgICBmb3IgKHZhciBfaTE1ID0gMDsgX2kxNSA8IHRoaXMuZGF0YUxpc3QubGVuZ3RoOyBfaTE1KyspIHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmRhdGFMaXN0W2ldLmdldF9sb29wX2V2ZW50X3RpbWUsIHRoaXMuZGF0YUxpc3RbaV0uZ2V0X2xwKTsKICAgICAgICAgICAgaWYgKHRoaXMuZGF0YUxpc3RbX2kxNV0uZ2V0X2xvb3BfZXZlbnRfdGltZSA9PT0gb2JqLmxvb3BfZXZlbnRfdGltZSkgewogICAgICAgICAgICAgIGlmIChvYmoubHAgIT0gIuuvuOyduOyLnSIgJiYgb2JqLmxwLmluZGV4T2YoIlgiKSA8IDAgJiYgb2JqLmxwLmxlbmd0aCA+PSA3KSB7CiAgICAgICAgICAgICAgICAvLyDrk6TslrTsmKgg7LCo65+J7J20IOuvuOyduOyLneydtCDslYTri4jrqbQKICAgICAgICAgICAgICAgIGlmICh0aGlzLmRhdGFMaXN0W19pMTVdLmdldF9scCA9PSAi66+47J247IudIiB8fCB0aGlzLmRhdGFMaXN0W19pMTVdLmdldF9scC5pbmRleE9mKCJYIikgPj0gMCB8fCB0aGlzLmRhdGFMaXN0W19pMTVdLmdldF9scC5sZW5ndGggPCA3KSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxNV0uZ2V0X2xwID0gb2JqLmxwOwogICAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTVdLmdldF9yZWdpc3RlcmVkID0gb2JqLnJlZ2lzdGVyZWQ7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxNV0uZ2V0X2RpcmVjdGlvbiA9IG9iai5kaXJlY3Rpb247CiAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxNV0uZ2V0X2NvbnRlbnRzID0gb2JqLmNvbnRlbnRzOwogICAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTVdLmdldF9pbWFnZV9uYW1lID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTE1XS5nZXRfaW1hZ2VfbmFtZSA9IF9pbWFnZV9uYW1lMzsKCiAgICAgICAgICAgICAgICAgIGlmIChvYmouZGlyZWN0aW9uID09PSAiaW4iKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTE1XS5nZXRfZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxpc3RbX2kxNV0uZ2V0X3BhaWRfZmVlID0gMDsKICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0W19pMTVdLmdldF9mZWUgPSAwOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGlmICghb2JqLmRpc2NvdW50ZWRfZmVlKSB7CiAgICAgICAgICAgICAgICAgICAgICBvYmouZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhMS5mZWUgfHwgb2JqLmZlZSA9PT0gOTk5OCB8fCBvYmouZmVlID09PSA5OTk5KSB7CiAgICAgICAgICAgICAgICAgICAgICBvYmouZmVlID0gMDsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmICghb2JqLnBhaWRfZmVlKSB7CiAgICAgICAgICAgICAgICAgICAgICBvYmoucGFpZF9mZWUgPSAwOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTE1XS5nZXRfZGlzY291bnRlZF9mZWUgPSBvYmouZGlzY291bnRlZF9mZWU7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTE1XS5nZXRfcGFpZF9mZWUgPSBvYmoucGFpZF9mZWU7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTGlzdFtfaTE1XS5nZXRfZmVlID0gb2JqLmZlZTsKICAgICAgICAgICAgICAgICAgICBfdG90YWxfcGFya2luZ19mZWUzICs9IHBhcnNlSW50KG9iai5mZWUsIDEwKTsKICAgICAgICAgICAgICAgICAgICBfdG90YWxfZGlzY291bnRlZF9mZWUzICs9IHBhcnNlSW50KG9iai5kaXNjb3VudGVkX2ZlZSwgMTApOwogICAgICAgICAgICAgICAgICAgIF90b3RhbF9wYWlkX2ZlZTMgKz0gcGFyc2VJbnQob2JqLnBhaWRfZmVlLCAxMCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9mbGFnMyA9IHRydWU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoX2ZsYWczID09IGZhbHNlKSB7CiAgICAgICAgICAgIHZhciBfdGVtcDE1ID0ge307CiAgICAgICAgICAgIF90ZW1wMTUuZ2V0X3RpbWUgPSBmb3JtYXRfdGltZShuZXcgRGF0ZShvYmoubG9vcF9ldmVudF90aW1lKSk7CiAgICAgICAgICAgIF90ZW1wMTUuZ2V0X2xvb3BfZXZlbnRfdGltZSA9IG9iai5sb29wX2V2ZW50X3RpbWU7CiAgICAgICAgICAgIF90ZW1wMTUuZ2V0X2xvY2F0aW9uID0gb2JqLmxvY2F0aW9uOwogICAgICAgICAgICBfdGVtcDE1LmdldF9scCA9IG9iai5scDsKICAgICAgICAgICAgX3RlbXAxNS5nZXRfcmVnaXN0ZXJlZCA9IG9iai5yZWdpc3RlcmVkOwogICAgICAgICAgICBfdGVtcDE1LmdldF9kaXJlY3Rpb24gPSBvYmouZGlyZWN0aW9uOwogICAgICAgICAgICBfdGVtcDE1LmdldF9jb250ZW50cyA9IG9iai5jb250ZW50czsKICAgICAgICAgICAgX3RlbXAxNS5nZXRfaW1hZ2VfZGlzcGxheSA9IHRydWU7CiAgICAgICAgICAgIF90ZW1wMTUuZ2V0X2ltYWdlX25hbWUgPSBfaW1hZ2VfbmFtZTM7CgogICAgICAgICAgICBpZiAoZGF0YTEuZGlyZWN0aW9uID09PSAiaW4iKSB7CiAgICAgICAgICAgICAgX3RlbXAxNS5nZXRfZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgIF90ZW1wMTUuZ2V0X3BhaWRfZmVlID0gMDsKICAgICAgICAgICAgICBfdGVtcDE1LmdldF9mZWUgPSAwOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGlmICghb2JqLmRpc2NvdW50ZWRfZmVlKSB7CiAgICAgICAgICAgICAgICBvYmouZGlzY291bnRlZF9mZWUgPSAwOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKCFvYmouZmVlIHx8IG9iai5mZWUgPT09IDk5OTggfHwgb2JqLmZlZSA9PT0gOTk5OSkgewogICAgICAgICAgICAgICAgb2JqLmZlZSA9IDA7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoIW9iai5wYWlkX2ZlZSkgewogICAgICAgICAgICAgICAgb2JqLnBhaWRfZmVlID0gMDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF90ZW1wMTUuZ2V0X2Rpc2NvdW50ZWRfZmVlID0gb2JqLmRpc2NvdW50ZWRfZmVlOwogICAgICAgICAgICAgIF90ZW1wMTUuZ2V0X3BhaWRfZmVlID0gb2JqLnBhaWRfZmVlOwogICAgICAgICAgICAgIF90ZW1wMTUuZ2V0X2ZlZSA9IG9iai5mZWU7CiAgICAgICAgICAgICAgX3RvdGFsX3BhcmtpbmdfZmVlMyArPSBwYXJzZUludChvYmouZmVlLCAxMCk7CiAgICAgICAgICAgICAgX3RvdGFsX2Rpc2NvdW50ZWRfZmVlMyArPSBwYXJzZUludChvYmouZGlzY291bnRlZF9mZWUsIDEwKTsKICAgICAgICAgICAgICBfdG90YWxfcGFpZF9mZWUzICs9IHBhcnNlSW50KG9iai5wYWlkX2ZlZSwgMTApOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLmRhdGFMaXN0LnVuc2hpZnQoX3RlbXAxNSk7CiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy50b3RhbF9wYXJraW5nX2ZlZSArPSBfdG90YWxfcGFya2luZ19mZWUzOwogICAgICAgICAgdGhpcy50b3RhbF9kaXNjb3VudGVkX2ZlZSArPSBfdG90YWxfZGlzY291bnRlZF9mZWUzOwogICAgICAgICAgdGhpcy50b3RhbF9wYWlkX2ZlZSArPSBfdG90YWxfcGFpZF9mZWUzOyAvLyBjb25zb2xlLmxvZygKICAgICAgICAgIC8vICAgInRvdGFsX3BhcmtpbmdfZmVlIDoiLAogICAgICAgICAgLy8gICB0b3RhbF9wYXJraW5nX2ZlZSwKICAgICAgICAgIC8vICAgInRvdGFsX2Rpc2NvdW50ZWRfZmVlIDoiLAogICAgICAgICAgLy8gICB0b3RhbF9kaXNjb3VudGVkX2ZlZSwKICAgICAgICAgIC8vICAgInRvdGFsX3BhaWRfZmVlOiAiLAogICAgICAgICAgLy8gICB0b3RhbF9wYWlkX2ZlZQogICAgICAgICAgLy8gKQoKICAgICAgICAgIGZvciAodmFyIF9pMTYgPSAwOyBfaTE2IDwgdGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoOyBfaTE2KyspIHsKICAgICAgICAgICAgLy8JY29uc29sZS5sb2coZGF0YTEubHAsIHRoaXMuY2FybWVyYV9saXN0W2ldLmxvY2F0aW9uLCBkYXRhMS5sb2NhdGlvbik7CiAgICAgICAgICAgIGlmIChvYmoubG9jYXRpb24gPT0gdGhpcy5jYXJtZXJhX2xpc3RbX2kxNl0ubG9jYXRpb24gJiYgb2JqLmRpcmVjdGlvbiA9PSB0aGlzLmNhcm1lcmFfbGlzdFtfaTE2XS5kaXJlY3Rpb24pIHsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtfaTE2XS5scCA9IG9iai5scDsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdFtfaTE2XS5pbWFnZV9uYW1lID0gX2ltYWdlX25hbWUzOwogICAgICAgICAgICAgIHZhciBfdGVtcDE2ID0ge307CiAgICAgICAgICAgICAgdGhpcy5jYXJtZXJhX2xpc3QucHVzaChfdGVtcDE2KTsKICAgICAgICAgICAgICB0aGlzLmNhcm1lcmFfbGlzdC5zcGxpY2UodGhpcy5jYXJtZXJhX2xpc3QubGVuZ3RoIC0gMSwgMSk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBjb250ZW50c19jaGFuZ2U6IGZ1bmN0aW9uIGNvbnRlbnRzX2NoYW5nZShpbmRleCkgewogICAgICAvLyBjb25zb2xlLmxvZygi64K07Jqp67OA6rK9IDoiLCB0aGlzLmRhdGFMaXN0W2luZGV4XSkKICAgICAgdmFyIG9iaiA9IHt9OyAvLyBvYmoua2luZCA9ICJ1cGRhdGVfdmVoaWNsZV9vYmpfYXRfdmVoaWNsZV9vYmpfbGlzdCIKCiAgICAgIG9iai5raW5kMSA9ICJ1cGRhdGVfdmVoaWNsZV9vYmpfYXRfdmVoaWNsZV9vYmpfbGlzdCI7CiAgICAgIG9iai5scCA9IHRoaXMuZGF0YUxpc3RbaW5kZXhdLmdldF9scDsKICAgICAgb2JqLmxvb3BfZXZlbnRfdGltZSA9IHRoaXMuZGF0YUxpc3RbaW5kZXhdLmdldF9sb29wX2V2ZW50X3RpbWU7CiAgICAgIG9iai5jb250ZW50cyA9IHRoaXMuZGF0YUxpc3RbaW5kZXhdLmdldF9jb250ZW50czsKICAgICAgb2JqLm51bWJlciA9IG9iai5scC5yZXBsYWNlKC9b6rCALe2enV0vZ2ksICIiKTsKICAgICAgdGhpcy5zZW5kTWVzc2FnZShvYmopOwogICAgfSwKICAgIHZlaGljbGVfb2JqX2xpc3RfZmluZDogZnVuY3Rpb24gdmVoaWNsZV9vYmpfbGlzdF9maW5kKCkgewogICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7IC8vbGV0IGQxID0gZCAtICgyNCo2MCo2MCoxMDAwKTsKICAgICAgLy9jb25zb2xlLmxvZygiZCA6ICIsIGQsICIgZDEgOiAiLCBkMSk7CgogICAgICB2YXIgc3RyX3N0YXJ0ID0gZC5nZXRGdWxsWWVhcigpICsgIi0iICsgaXRvU3RyKGQuZ2V0TW9udGgoKSArIDEpICsgIi0iICsgaXRvU3RyKGQuZ2V0RGF0ZSgpKSArICJUMDA6MDAiOwogICAgICB2YXIgc3RyX2VuZCA9IGQuZ2V0RnVsbFllYXIoKSArICItIiArIGl0b1N0cihkLmdldE1vbnRoKCkgKyAxKSArICItIiArIGl0b1N0cihkLmdldERhdGUoKSkgKyAiVDIzOjU5IjsKICAgICAgdGhpcy5zdGFydF90aW1lID0gc3RyX3N0YXJ0OwogICAgICB0aGlzLmVuZF90aW1lID0gc3RyX2VuZDsKICAgICAgdmFyIG9iaiA9IHt9OwogICAgICBvYmoubHAgPSAiIjsKICAgICAgb2JqLmxvYyA9ICIiOwogICAgICBvYmouZGlyID0gIiI7CiAgICAgIG9iai5zdGFydF90aW1lID0gZ2V0X3N0YXJ0X3RpbWUodGhpcy5zdGFydF90aW1lKTsKICAgICAgb2JqLmVuZF90aW1lID0gZ2V0X2VuZF90aW1lKHRoaXMuZW5kX3RpbWUpOwogICAgICBvYmoua2luZCA9ICJnZXRfdmVoaWNsZV9vYmpfbGlzdCI7CiAgICAgIG9iai5pZCA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiaWQiKTsKICAgICAgY29uc29sZS5sb2coImxwX3NlYXJjaCgpIDogIiwgb2JqKTsKICAgICAgdGhpcy5zZW5kTWVzc2FnZShvYmopOwogICAgfSwKICAgIHNpZ25hbDogZnVuY3Rpb24gc2lnbmFsKGMpIHsKICAgICAgYy5pbWFnZV9kaXNwbGF5ID0gIWMuaW1hZ2VfZGlzcGxheTsKICAgIH0sCiAgICB0b2dnbGVzOiBmdW5jdGlvbiB0b2dnbGVzKCkgewogICAgICB0aGlzLnRvZ2dsZSA9ICF0aGlzLnRvZ2dsZTsgLy8gIGNvbnNvbGUubG9nKHRoaXMudG9nZ2xlKQogICAgfSwKICAgIG9wZW5fcGljdHVyZTogZnVuY3Rpb24gb3Blbl9waWN0dXJlKGQpIHsKICAgICAgLy8gZC5nZXRfaW1hZ2VfZGlzcGxheSA9IGZhbHNlCiAgICAgIGQuZ2V0X2ltYWdlX2Rpc3BsYXkgPSAhZC5nZXRfaW1hZ2VfZGlzcGxheTsKICAgIH0sCiAgICBjbG9zZV9waWN0dXJlOiBmdW5jdGlvbiBjbG9zZV9waWN0dXJlKGQpIHsKICAgICAgLy8gIGNvbnNvbGUubG9nKCJjbG9zZV9waWN0dXJlIDogIiwgZC5nZXRfaW1hZ2VfZGlzcGxheSkKICAgICAgLy90aGlzLiRuZXh0VGljayhmdW5jdGlvbigpewogICAgICByZXR1cm4gZC5nZXRfaW1hZ2VfZGlzcGxheSA9IHRydWU7IC8vfSkKICAgIH0sCiAgICBiYXJfY29udHJvbDogZnVuY3Rpb24gYmFyX2NvbnRyb2woYykgewogICAgICB2YXIgb2JqID0ge307CiAgICAgIG9iai5raW5kID0gImNvbnRyb2wiOwogICAgICBvYmouZGlyZWN0aW9uID0gInVwIjsKICAgICAgb2JqLmxvY2F0aW9uID0gYy5sb2NhdGlvbjsgLy9pbmRleCA9IGMuaW5kZXgKICAgICAgLy9hZG1pbl9pZDogImFkbWluMDAxIgoKICAgICAgdGhpcy5zZW5kTWVzc2FnZShvYmopOwogICAgfSwKICAgIGJhcl9jb250cm9sX2Nsb3NlOiBmdW5jdGlvbiBiYXJfY29udHJvbF9jbG9zZShjKSB7CiAgICAgIHZhciBvYmogPSB7fTsKICAgICAgb2JqLmtpbmQgPSAiIjsKICAgICAgb2JqLmRpcmVjdGlvbiA9ICIiOwogICAgICBvYmoubG9jYXRpb24gPSBjLmxvY2F0aW9uOyAvL2luZGV4ID0gYy5pbmRleAogICAgICAvL2FkbWluX2lkOiAiYWRtaW4wMDEiCgogICAgICB0aGlzLnNlbmRNZXNzYWdlKG9iaik7CiAgICB9LAogICAgYmFyX21vZGVfbG9jazogZnVuY3Rpb24gYmFyX21vZGVfbG9jayhjKSB7CiAgICAgIHZhciBvYmogPSB7fTsKICAgICAgb2JqLmtpbmQgPSAibW9kZSI7CiAgICAgIG9iai5tb2RlID0gImxvY2siOwogICAgICBvYmoubG9jYXRpb24gPSBjLmxvY2F0aW9uOyAvL2luZGV4ID0gYy5pbmRleAogICAgICAvL2FkbWluX2lkOiAiYWRtaW4wMDEiCgogICAgICB0aGlzLnNlbmRNZXNzYWdlKG9iaik7CiAgICB9LAogICAgYmFyX21vZGVfdW5sb2NrOiBmdW5jdGlvbiBiYXJfbW9kZV91bmxvY2soYykgewogICAgICB2YXIgb2JqID0ge307CiAgICAgIG9iai5raW5kID0gIm1vZGUiOwogICAgICBvYmoubW9kZSA9ICJ1bmxvY2siOwogICAgICBvYmoubG9jYXRpb24gPSBjLmxvY2F0aW9uOyAvL2luZGV4ID0gYy5pbmRleAogICAgICAvL2FkbWluX2lkOiAiYWRtaW4wMDEiCgogICAgICB0aGlzLnNlbmRNZXNzYWdlKG9iaik7CiAgICB9LAogICAgYmFycmllcl9uYW1lX2NoZWNrOiBmdW5jdGlvbiBiYXJyaWVyX25hbWVfY2hlY2soKSB7CiAgICAgIHRoaXMuY2FybWVyYV9saXN0ID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbmZpZy5iYXJyaWVyX2Rpc3BsYXlfbGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMuY2FybWVyYV9saXN0LnB1c2goY29uZmlnLmJhcnJpZXJfZGlzcGxheV9saXN0W2ldKTsKICAgICAgfSAvLyB0aGlzLmJhcl9wb2xpY3lfZnVuX2FsbCgpCgogICAgfSwKICAgIHNlbmRNZXNzYWdlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShjKSB7CiAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCJtZXNzYWdlX2Zyb21fd2ViX2NsaWVudCIsIGMpOwogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiBzdGFydCgpIHsKICAgICAgLy9jb25zb2xlLmxvZygic3RhcnQg7ZWo7IiYIOyLnOyekSAiKTsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgZmxhZyA9IGZhbHNlOwogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGRhdGUgPSBEYXRlLm5vdygpOwogICAgICAgIHZhciB0ZW1wX2RhdGUgPSBmb3JtYXRfdGltZV9kYXRlKG5ldyBEYXRlKGRhdGUpKS5zcGxpdCgiOiIpOwogICAgICAgIHZhciB0ZW1wX2hoID0gcGFyc2VJbnQodGVtcF9kYXRlWzBdLCAxMCk7CiAgICAgICAgdmFyIHRlbXBfbW0gPSBwYXJzZUludCh0ZW1wX2RhdGVbMV0sIDEwKTsKCiAgICAgICAgaWYgKGZsYWcgPT09IGZhbHNlICYmIHRlbXBfaGggPT09IDAgJiYgdGVtcF9tbSA9PT0gMCkgewogICAgICAgICAgdGhhdC5kYXRhTGlzdCA9IFtdOwogICAgICAgICAgZmxhZyA9IHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGZsYWcgPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGF0LmRhdGFMaXN0Lmxlbmd0aCA+IDEwMCkgewogICAgICAgICAgdGhhdC5kYXRhTGlzdC5zcGxpY2UoMTAwLCB0aGF0LmRhdGFMaXN0Lmxlbmd0aCAtIDEwMCk7CiAgICAgICAgfQogICAgICB9LCAyMCAqIDEwMDApOwogICAgICB0aGlzLmJhcl9zdGF0dXNfcXVlcnkoKTsKICAgIH0sCiAgICBiYXJfc3RhdHVzX3F1ZXJ5OiBmdW5jdGlvbiBiYXJfc3RhdHVzX3F1ZXJ5KCkgewogICAgICB2YXIgb2JqID0ge307CiAgICAgIG9iai5raW5kID0gImJhcl9zdGF0dXMiOwogICAgICBvYmouY29udHJvbF9pZCA9ICJhZG1pbjAwMSI7CiAgICAgIGNvbnNvbGUubG9nKCJiYXJfc3RhdHVzX3F1ZXJ5Iik7CiAgICAgIHRoaXMuc2VuZE1lc3NhZ2Uob2JqKTsKICAgIH0KICB9Cn07CgpmdW5jdGlvbiBnZXRfc3RhcnRfdGltZShzdHIpIHsKICB2YXIgcmVzID0gc3RyLnNwbGl0KC9bLVQuOlxzXSsvKTsKICB2YXIgZCA9IG5ldyBEYXRlKHBhcnNlSW50KHJlc1swXSksIHBhcnNlSW50KHJlc1sxXSkgLSAxLCBwYXJzZUludChyZXNbMl0pLCBwYXJzZUludChyZXNbM10pLCBwYXJzZUludChyZXNbNF0pLCAwLCAwKTsKICByZXR1cm4gZC5nZXRUaW1lKCk7Cn0KCmZ1bmN0aW9uIGdldF9lbmRfdGltZShzdHIpIHsKICB2YXIgcmVzID0gc3RyLnNwbGl0KC9bLVQuOlxzXSsvKTsKICB2YXIgZCA9IG5ldyBEYXRlKHBhcnNlSW50KHJlc1swXSksIHBhcnNlSW50KHJlc1sxXSkgLSAxLCBwYXJzZUludChyZXNbMl0pLCBwYXJzZUludChyZXNbM10pLCBwYXJzZUludChyZXNbNF0pLCA1OSwgOTk5KTsKICByZXR1cm4gZC5nZXRUaW1lKCk7Cn0gLy8gZnVuY3Rpb24gZm9ybWF0X3RpbWVfZGF0ZShkYXQpIHsKLy8gICB2YXIgc3RyID0gIiIKLy8gICBzdHIgKz0gbnVtX3RvX3N0cihkYXQuZ2V0SG91cnMoKSkKLy8gICBzdHIgKz0gIjoiICsgbnVtX3RvX3N0cihkYXQuZ2V0TWludXRlcygpKQovLyAgIHN0ciArPSAiOiIgKyBudW1fdG9fc3RyKGRhdC5nZXRTZWNvbmRzKCkpCi8vICAgcmV0dXJuIHN0cgovLyB9CgoKZnVuY3Rpb24gbnVtX3RvX3N0cigkbnVtKSB7CiAgJG51bSA8IDEwID8gJG51bSA9ICIwIiArICRudW0gOiAkbnVtOwogIHJldHVybiAkbnVtLnRvU3RyaW5nKCk7Cn0KCmZ1bmN0aW9uIGZvcm1hdF90aW1lX2RhdGUoZGF0KSB7CiAgdmFyIHN0ciA9ICIiOwogIHN0ciArPSBudW1fdG9fc3RyKGRhdC5nZXRIb3VycygpKTsKICBzdHIgKz0gIjoiICsgbnVtX3RvX3N0cihkYXQuZ2V0TWludXRlcygpKTsKICBzdHIgKz0gIjoiICsgbnVtX3RvX3N0cihkYXQuZ2V0U2Vjb25kcygpKTsKICByZXR1cm4gc3RyOwp9CgpmdW5jdGlvbiBpdG9TdHIoJG51bSkgewogICRudW0gPCAxMCA/ICRudW0gPSAiMCIgKyAkbnVtIDogJG51bTsKICByZXR1cm4gJG51bS50b1N0cmluZygpOwp9CgpmdW5jdGlvbiBmb3JtYXRfdGltZShkYXQpIHsKICB2YXIgc3RyID0gIiI7CiAgc3RyICs9IGRhdC5nZXRGdWxsWWVhcigpOwogIHN0ciArPSAiLiIgKyBudW1fdG9fc3RyKGRhdC5nZXRNb250aCgpICsgMSk7CiAgc3RyICs9ICIuIiArIG51bV90b19zdHIoZGF0LmdldERhdGUoKSk7CiAgc3RyICs9ICIuICIgKyBudW1fdG9fc3RyKGRhdC5nZXRIb3VycygpKTsKICBzdHIgKz0gIjoiICsgbnVtX3RvX3N0cihkYXQuZ2V0TWludXRlcygpKTsKICBzdHIgKz0gIjoiICsgbnVtX3RvX3N0cihkYXQuZ2V0U2Vjb25kcygpKTsKICByZXR1cm4gc3RyOwp9"},{"version":3,"sources":["vehicleEntryExitLive.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n <div class=\"vehicle_wrap report_wrap\">\n   <div class=\"title\">\n      <h2>{{titles}}</h2>\n    </div>\n   <div class=\"present_condition_view\">      \n      <ul>\n        <li\n          v-for=\"(c, index) in carmera_list\"\n          :key=\"index\"\n          :class=\"{ active: c.image_display, cut: c.nosignal }\"\n          class=\"carmera_lists\"\n        >\n          <div class=\"strapline\">\n            <dl>\n              <dt><input type=\"text\" :value=\"c.location\" /></dt>\n              <dd v-if=\"c.nosignal === true\">\n                <font-awesome-icon icon=\"exclamation-triangle\" />\n              </dd>\n              <dd><input type=\"text\" :value=\"c.direction\" /></dd>\n            </dl>\n          </div>\n          <div class=\"state_body_wrp\">\n            <ul class=\"state_body\">\n              <li :class=\"{ active: toggle, openfix:c.openfix }\" @click=\"toggles()\">\n                <div class=\"img_record\">                  \n                  <img :src=\"c.image_name\" alt=\"\"  @click=\"submitForm(c)\" />                 \n                  <span class=\"open\">열림</span>\n                  <span class=\"fixing\"\n                    ><font-awesome-icon icon=\"lock\" />고정</span\n                  >\n                </div>\n                <p>차량번호 : {{ c.lp }}</p>\n              </li>\n            </ul>\n            <div class=\"bt_control_wrap\">\n            <div class=\"bar_control\" v-if=\"c.barrier_control_display\">\n              <button class=\"button_open\" @click=\"bar_control(c)\">열림</button>\n              <button class=\"button_close\" @click=\"bar_control_close(c)\">닫힘</button>\n              <form>\n                <label>\n                  <input type=\"radio\" @click=\"bar_mode_lock(c)\" name=\"lock\" />\n                  <span><font-awesome-icon icon=\"lock\" />개방</span>\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    @click=\"bar_mode_unlock(c)\"\n                    name=\"lock\"\n                    checked\n                  /><span> <font-awesome-icon icon=\"lock-open\" />해제</span>\n                </label>\n              </form>\n            </div>\n            <div class=\"bar_control\" v-else></div>         \n            </div>\n          </div>        \n        </li>\n      </ul>\n    </div>\n    <div class=\"record_wrap\">\n      <div class=\"menu_title\">\n        <div class=\"counting\">\n          <h2>출입한 차량들 목록</h2>\n\n          <span> 주차요금 : {{ total_parking_fee | currency }}원, </span>\n         <!-- <span> 할인금액 : {{ total_discounted_fee | currency }}원, </span> -->\n          <span> 정산금액 : {{ total_paid_fee | currency }}원 </span>\n          <span\n            ><font-awesome-icon icon=\"sign-out-alt\" />출차수:{{\n              count_out\n            }}건</span\n          >\n          <span\n            ><font-awesome-icon icon=\"sign-in-alt\" />입차수:{{\n              count_in\n            }}건</span\n          >\n        </div>\n      </div>\n      <div class=\"list_data\">\n        <table class=\"list_data_table\">\n          <thead>\n            <tr class=\"tableTitle\" colspan=\"11\">\n              <th class=\"number\">번호</th>\n              <th>차량번호</th>\n              <th>차량출입시각</th>\n              <th>장소</th>\n              <th>방향</th>\n              <th>주차요금</th>\n              <th>정산금액</th>\n              <th>구분</th>\n              <th>메모</th>\n              <th :class=\"{add:Object.keys(this.dataList).length > 8}\">사진</th>\n            </tr>\n          </thead>\n          <tbody class=\"scrolltBody \">\n            <tr v-for=\"(d, index) in dataList\" :key=\"index\">\n              <td colspan=\"11\">\n                <table>\n                  <!-- <tr @click.prevent=\"open_picture(d)\"> -->\n                  <tr>\n                    <td class=\"number\">{{ index + 1 }}</td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        v-model=\"d.get_lp\"\n                        v-on:change=\"contents_change(index)\"\n                      />\n                    </td>\n                    <td>{{ d.get_time }}</td>\n                    <td>{{ d.get_location }}</td>\n                    <td>{{ d.get_direction }}</td>\n                    <td>{{ d.get_fee }}</td>\n                    <td>{{ d.get_paid_fee }}</td>\n                    <td>{{ d.get_registered }}</td>                    \n                   <td>\n                      <input\n                        type=\"text\"\n                        v-model=\"d.get_contents\"\n                        v-on:change=\"contents_change(index)\"\n                      />\n                    </td>\n\n                    <td>\n                      <button\n                        v-if=\"d.get_image_display\"\n                        @click.prevent=\"open_picture(d)\"\n                      >\n                        <!-- <font-awesome-icon icon=\"eye\" /> -->\n                        <font-awesome-icon\n                          icon=\"camera-retro\"\n                          style=\"color:#fff\"\n                        />\n                        <!-- 보기<font-awesome-icon icon=\"angle-down\" /> -->\n                      </button>\n                      <button v-else @click=\"close_picture(d)\">\n                        <font-awesome-icon\n                          icon=\"camera-retro\"\n                          style=\"color:#26a95e\"\n                        />\n                        <!-- 닫기<font-awesome-icon icon=\"angle-up\" /> -->\n                      </button>\n                    </td>\n                  <tr v-if=\"d.get_image_display === false\" @click=\"close_picture(d)\">\n                    <td colspan=\"11\" class=\"tdImg\">\n                      <div>\n                        <img :src=\"d.get_image_name\" alt=\"\" />\n                        <span>\n                          {{ d.get_location }}-{{ d.get_direction }}방향</span\n                        >\n                      </div>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n </div>\n</template>\n<script>\nimport config from \"../../config.js\"\nimport { mapState } from \"vuex\"\nexport default {\n  data: function() {\n    return {\n      \n      dataList: [{get_time:\"\",get_location:\"\",get_direction:\"\",get_lp:\"\",get_fee:0,get_paid_fee:0,get_registered:\"\",get_contents:\"\"}],\n      carmera_list: [   {\n      kind_bar_status: \"barrier_status\",\n      kind_bar_policy: \"bar_ploicy\",\n      status: \"down\",\n      location: \"정문입구\",\n      direction: \"in\",\n      lp: \"123가4567\",\n      image_display: false,\n      barrier_control_display: true,\n      barrier_policy_name: \"barrier_policy1\",\n      image_name: require(\"../../assets/car_test1.jpg\"),\n      checkedNames: \"all_vehicle\"\n    },\n    {\n      kind: \"barrier_status\",\n      status: \"down\",\n      location: \"정문출구\",\n      direction: \"out\",\n      lp: \"546가1517\",\n      image_display: false,\n      barrier_control_display: true,\n      barrier_policy_name: \"barrier_policy2\",\n      image_name: require(\"../../assets/car_test2.jpg\"),\n      checkedNames: \"registered_vehicle\"     \n    }],\n      start_time: new Date(),\n      end_time: new Date(),\n      total_parking_fee: 0,\n      total_discounted_fee: 0,\n      total_paid_fee: 0,\n      toggle: false,\n      openfix: false,\n      nosignal: false,\n      list_items: {\n        time: \"현재시간\",\n        loop_event_time: \"pc시간\",\n        location: \"1구역\",\n        direction: \"In\",\n        lp: \"123가4567\",\n        resistered: \"등록차량\",\n        dong_ho: \"101동\",\n        image_display: false,\n        image_name: require(\"../../assets/car_test4.jpg\")\n      },\n      checked: [],\n      button_value: [\n        { name: \"개방\", checked: true },\n        { name: \"풀림\", checked: false }\n      ]\n    }\n  },\n  filters: {\n    currency: function(value) {\n      var num = new Number(value)\n      return num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\n    }\n  },\n  computed: {\n     ...mapState([\"mainTitle\"]),\n    count_in() {\n      let count = 0\n      this.dataList.forEach(cot => {\n        if (cot.get_direction === \"in\") count++\n      })\n      return count\n    },\n    count_out() {\n      let count = 0\n      this.dataList.forEach(cot => {\n        if (cot.get_direction === \"out\") count++\n      })\n      return count\n    }\n  },\n   beforeRouteEnter (to, from, next) {\n    config.parkingLot.type ===\"paid\" ? next() : next({name:'vehicleEntryExitLive1'})        \n    },\n  created() {\n    this.$socket.on(\"message_from_server\", data => {           \n      this.lpr_process(data)\n    }),\n      this.barrier_name_check(),\n      // this.barrier_policy_query(),\n      //this.bar_status_query(),\n      this.loginCheck(),\n      this.start(),\n      this.vehicle_obj_list_find()\n      this.changeTitle () \n  },\n  methods: {\n    changeTitle(){      \n      this.mainTitle.forEach(title =>{\n       title.subMenu.forEach( add=> {\n         if(add.add==='vehicleEntryExitLive') this.titles = add.title\n       })\n      })\n    },\n    loginCheck(){\n      let status = localStorage.getItem(\"status\")\n      if(status !== \"ok\" || status !== \"OK\" ){\n        this.$store.state.loginSuccess = false\n      }\n      else{\n        this.$store.state.loginSuccess = true\n      }\n      console.log(\"status \", status )\n    },\n    submitForm(event) {\n      const frm = document.createElement('form')\n      frm.setAttribute('id', 'img')\n      frm.setAttribute('action', event.image_name)\n      frm.setAttribute('method', 'get')\n      frm.setAttribute('target', 'img')\n      document.body.appendChild(frm)\n      window.open(\n        'about:blank',\n        'img',\n        'width=' +\n    parseInt(window.innerWidth) * 1 +\n    ',height=' +\n    parseInt(window.innerHeight) * 1 +\n    ',toolbar=0,menubar=0,location=0,status=0,scrollbars=1,resizable=0,left=0,top=0'\n      )\n      \n      frm.submit()\n    },\n    lpr_process(data1) {\n      if (data1.kind === \"barrier_status\") {\n        console.log(\"barrier_status\", data1)\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (data1.location == this.carmera_list[i].location) {\n            if (data1.status === \"down\" || data1.status === \"DOWN\") {\n              this.carmera_list[i].image_display = false\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            } else {\n              this.carmera_list[i].image_display = true\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            }\n          }\n        }\n      } else if (data1.kind === \"bar_mode\") {\n        console.log(\"bar_mode\", data1)\n        for (let j = 0; j < data1.docs.length; j++) {\n          let bar_mode = data1.docs[j]\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            if (\n              bar_mode.location === this.carmera_list[i].location &&  bar_mode.direction === this.carmera_list[i].direction\n            ) {\n              \n              if (bar_mode.mode === \"lock\") {\n                this.carmera_list[i].openfix = true\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              } else {\n                this.carmera_list[i].openfix = false\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              }\n              break\n            }\n          }\n        }\n      } else if (data1.kind === \"bar_status\") {\n        console.log(\"bar_status\", data1)\n        for (let j = 0; j < data1.docs.length; j++) {\n          let bar_status = data1.docs[j]\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            if (\n              bar_status.location === this.carmera_list[i].location &&\n              bar_status.direction == this.carmera_list[i].direction\n            ) {\n              if (data1.status === \"down\" || data1.status === \"DOWN\") {\n                this.carmera_list[i].image_display = false\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              } else if (data1.status === \"up\" || data1.status === \"UP\"){\n                this.carmera_list[i].image_display = true\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              }\n              break\n            }\n          }\n        }\n      } else if (data1.kind === \"socket_error\") {\n        //  console.log(\"socket error : \", data1)\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (\n            data1.location === this.carmera_list[i].location &&\n            data1.direction === this.carmera_list[i].direction\n          ) {\n            this.carmera_list[i].nosignal = true\n            let temp = {}\n            this.carmera_list.push(temp)\n            this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            //console.log(\"보낼값\", this.carmera_list[0].status)\n          }\n        }\n      } else if (data1.kind === \"weekly_barrier_policy\") {\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (\n            data1.location === this.carmera_list[i].location &&\n            data1.direction === this.carmera_list[i].direction\n          ) {\n            if (data1.barrier_policy === \"개방\") {\n              this.carmera_list[i].checkedNames = \"all_vehicle\"\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            } else {\n              for (let j = 0; j < config.barrier_display_list.length; j++) {\n                if (\n                  data1.location === config.barrier_display_list[j].location &&\n                  data1.direction === config.barrier_display_list[j].direction\n                ) {\n                  this.carmera_list[i].checkedNames =\n                    config.barrier_display_list[j].checkedNames\n                  let temp = {}\n                  this.carmera_list.push(temp)\n                  this.carmera_list.splice(this.carmera_list.length - 1, 1)\n                }\n              }\n            }\n          }\n        }\n      } else if (data1.kind === \"socket_normal\") {\n        // console.log(\"socket normal : \", data1)\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (\n            data1.location === this.carmera_list[i].location &&\n            data1.direction === this.carmera_list[i].direction\n          ) {\n            this.carmera_list[i].nosignal = false\n            let temp = {}\n            this.carmera_list.push(temp)\n            this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            //console.log(\"보낼값\", this.carmera_list[0].status)\n          }\n        }\n      } else if (data1.kind == \"lpr\") {\n        console.log(data1.kind, data1)\n        //var image_name = \"localhost:7200/images/\"+data1.folder_name+\"/\"+data1.filename\n        let image_name =\n          config.image_src + data1.folder_name + \"/\" + data1.filename\n        // console.log(\"image_name : \", image_name)\n        //\tconsole.log(\"dataList : \", this.dataList);\n        if (data1.direction === \"in\") {\n          data1.direction1 = \"in\"\n        } else {\n          data1.direction1 = \"out\"\n        }\n        let flag = false\n        for (let i = 0; i < this.dataList.length; i++) {\n          //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n          if (this.dataList[i].get_loop_event_time === data1.loop_event_time) {\n            if (data1.lp != \"미인식\") {\n              // 들어온 차량이 미인식이 아니면\n              if (this.dataList[i].get_lp === \"미인식\") {\n                this.dataList[i].get_lp = data1.lp\n                this.dataList[i].get_registered = data1.registered\n                this.dataList[i].get_direction = data1.direction1\n                this.dataList[i].get_contents = data1.contents\n                this.dataList[i].get_image_name = true\n                this.dataList[i].get_image_name = image_name\n                if (data1.direction === \"in\") {\n                  this.dataList[i].get_discounted_fee = 0\n                  this.dataList[i].get_paid_fee = 0\n                  this.dataList[i].get_fee = 0\n                } else {\n                  if (!data1.discounted_fee) {\n                    data1.discounted_fee = 0\n                  }\n                  if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                    data1.fee = 0\n                  }\n                  if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                    data1.paid_fee = 0\n                  }\n                  console.log(\"flag === true :\", data1)\n                  this.dataList[i].get_discounted_fee = parseInt(\n                    data1.discounted_fee,\n                    10\n                  )\n                  this.dataList[i].get_paid_fee = parseInt(data1.paid_fee, 10)\n                  this.dataList[i].get_fee = parseInt(data1.fee, 10)\n                }\n                for (let i = 0; i < this.carmera_list.length; i++) {\n                  //\tconsole.log(data1.lp, this.carmera_list[i].location, data1.location);\n                  if (data1.location === this.carmera_list[i].location && data1.direction === this.carmera_list[i].direction) {\n                    this.carmera_list[i].lp = data1.lp\n                    this.carmera_list[i].image_name = image_name\n                    let temp = {}\n                    this.carmera_list.push(temp)\n                    this.carmera_list.splice(this.carmera_list.length - 1, 1)\n                    break\n                  }\n                }\n              }\n            }\n            flag = true\n            break\n          }\n        }\n        if (flag == false) {\n          let temp = {}\n          temp.get_time = format_time(new Date(data1.loop_event_time))\n          temp.get_loop_event_time = data1.loop_event_time\n          temp.get_location = data1.location\n          temp.get_lp = data1.lp\n          temp.get_registered = data1.registered\n          temp.get_direction = data1.direction1\n          temp.get_contents = data1.contents\n          temp.get_image_display = true\n          temp.get_image_name = image_name\n          if (data1.direction === \"in\") {\n            temp.get_discounted_fee = 0\n            temp.get_paid_fee = 0\n            temp.get_fee = 0\n          } else {\n            if (!data1.discounted_fee) {\n              data1.discounted_fee = 0\n            }\n            if (!data1.fee) {\n              data1.fee = 0\n            }\n            if (!data1.paid_fee) {\n              data1.paid_fee = 0\n            }\n            temp.get_discounted_fee = parseInt(data1.discounted_fee, 10)\n            temp.get_paid_fee = parseInt(data1.paid_fee, 10)\n            temp.get_fee = parseInt(data1.fee, 10)\n            console.log(\"flag === false : \", data1)\n          }\n          this.dataList.unshift(temp)\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            //\tconsole.log(data1.lp, this.carmera_list[i].location, data1.location);\n            if (data1.location === this.carmera_list[i].location && data1.direction === this.carmera_list[i].direction) {\n              this.carmera_list[i].lp = data1.lp\n              this.carmera_list[i].image_name = image_name\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              break\n            }\n          }\n        }\n        let total_parking_fee = 0\n        let total_discounted_fee = 0\n        let total_paid_fee = 0\n        for (let i = 0; i < this.dataList.length; i++) {\n          total_parking_fee += parseInt(this.dataList[i].get_fee, 10)\n          total_discounted_fee += parseInt(\n            this.dataList[i].get_discounted_fee,\n            10\n          )\n          total_paid_fee += parseInt(this.dataList[i].get_paid_fee, 10)\n        }\n        this.total_parking_fee = total_parking_fee\n        this.total_discounted_fee = total_discounted_fee\n        this.total_paid_fee = total_paid_fee\n        //\tconsole.log(this.carmera_list.length);\n      } else if (data1.kind == \"fee_calculation_result\") {\n        console.log(data1.kind, data1)\n        //var image_name = \"localhost:7200/images/\"+data1.folder_name+\"/\"+data1.filename\n        let image_name =\n          config.image_src + data1.folder_name + \"/\" + data1.filename\n        // console.log(\"image_name : \", image_name)\n        //\tconsole.log(\"dataList : \", this.dataList);\n        if (data1.direction === \"in\") {\n          data1.direction1 = \"입차\"\n        } else {\n          data1.direction1 = \"출차\"\n        }\n        let flag = false\n        for (let i = 0; i < this.dataList.length; i++) {\n          //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n          if (this.dataList[i].get_loop_event_time === data1.loop_event_time) {\n            this.dataList[i].get_lp = data1.lp\n            this.dataList[i].get_registered = data1.registered\n            this.dataList[i].get_direction = data1.direction\n            this.dataList[i].get_contents = data1.contents\n            this.dataList[i].get_image_name = true\n            this.dataList[i].get_image_name = image_name\n            if (data1.direction === \"in\") {\n              this.dataList[i].get_discounted_fee = 0\n              this.dataList[i].get_paid_fee = 0\n              this.dataList[i].get_fee = 0\n            } else {\n              if (!data1.discounted_fee) {\n                data1.discounted_fee = 0\n              }\n              if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                data1.fee = 0\n              }\n              if (!data1.paid_fee) {\n                data1.paid_fee = 0\n              }\n              this.dataList[i].get_discounted_fee = parseInt(\n                data1.discounted_fee,\n                10\n              )\n              this.dataList[i].get_paid_fee = parseInt(data1.paid_fee, 10)\n              this.dataList[i].get_fee = parseInt(data1.fee, 10)\n            }\n            flag = true\n            break\n          }\n        }\n        if (flag == false) {\n          let temp = {}\n          temp.get_time = format_time(new Date(data1.loop_event_time))\n          temp.get_loop_event_time = data1.loop_event_time\n          temp.get_location = data1.location\n          temp.get_lp = data1.lp\n          temp.get_registered = data1.registered\n          temp.get_direction = data1.direction\n          temp.get_contents = data1.contents\n          temp.get_image_display = true\n          temp.get_image_name = image_name\n          if (data1.direction === \"in\") {\n            temp.get_discounted_fee = 0\n            temp.get_paid_fee = 0\n            temp.get_fee = 0\n          } else {\n            if (!data1.discounted_fee) {\n              data1.discounted_fee = 0\n            }\n            if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n              data1.fee = 0\n            }\n            if (!data1.paid_fee) {\n              data1.paid_fee = 0\n            }\n            temp.get_discounted_fee = data1.discounted_fee\n            temp.get_paid_fee = data1.paid_fee\n            temp.get_fee = data1.fee\n          }\n          this.dataList.unshift(temp)\n        }\n        let total_parking_fee = 0\n        let total_discounted_fee = 0\n        let total_paid_fee = 0\n        for (let i = 0; i < this.dataList.length; i++) {\n          total_parking_fee += parseInt(this.dataList[i].get_fee, 10)\n          total_discounted_fee += parseInt(\n            this.dataList[i].get_discounted_fee,\n            10\n          )\n          total_paid_fee += parseInt(this.dataList[i].get_paid_fee, 10)\n        }\n        this.total_parking_fee = total_parking_fee\n        this.total_discounted_fee = total_discounted_fee\n        this.total_paid_fee = total_paid_fee\n        //\tconsole.log(this.carmera_list.length);\n      } else if (data1.kind == \"lpr_payment\") {\n          console.log(data1.kind, data1)\n        //var image_name = \"localhost:7200/images/\"+data1.folder_name+\"/\"+data1.filename\n        let image_name =\n          config.image_src + data1.folder_name + \"/\" + data1.filename\n        //  console.log(\"image_name : \", image_name)\n        //\tconsole.log(\"dataList : \", this.dataList);\n        if (data1.direction === \"in\") {\n          data1.direction1 = \"in\"\n        } else {\n          data1.direction1 = \"out\"\n        }\n        let flag = false\n        for (let i = 0; i < this.dataList.length; i++) {\n          //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n          if (this.dataList[i].get_loop_event_time === data1.loop_event_time) {\n            this.dataList[i].get_lp = data1.lp\n            this.dataList[i].get_registered = data1.registered\n            this.dataList[i].get_direction = data1.direction\n            this.dataList[i].get_contents = data1.contents\n            this.dataList[i].get_image_name = true\n            this.dataList[i].get_image_name = image_name\n            if (data1.direction === \"in\") {\n              this.dataList[i].get_discounted_fee = 0\n              this.dataList[i].get_paid_fee = 0\n              this.dataList[i].get_fee = 0\n            } else {\n              if (!data1.discounted_fee) {\n                data1.discounted_fee = 0\n              }\n              if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                data1.fee = 0\n              }\n              if (!data1.paid_fee) {\n                data1.paid_fee = 0\n              }\n              this.dataList[i].get_discounted_fee = data1.discounted_fee\n              this.dataList[i].get_paid_fee = data1.paid_fee\n              this.dataList[i].get_fee = data1.fee\n            }\n            flag = true\n            break\n          }\n        }\n        if (flag == false) {\n          let temp = {}\n          temp.get_time = format_time(new Date(data1.loop_event_time))\n          temp.get_loop_event_time = data1.loop_event_time\n          temp.get_location = data1.location\n          temp.get_lp = data1.lp\n          temp.get_registered = data1.registered\n          temp.get_direction = data1.direction\n          temp.get_contents = data1.contents\n          temp.get_image_display = true\n          temp.get_image_name = image_name\n          if (data1.direction === \"in\") {\n            temp.get_discounted_fee = 0\n            temp.get_paid_fee = 0\n            temp.get_fee = 0\n          } else {\n            if (!data1.discounted_fee) {\n              data1.discounted_fee = 0\n            }\n            if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n              data1.fee = 0\n            }\n            if (!data1.paid_fee) {\n              data1.paid_fee = 0\n            }\n            temp.get_discounted_fee = data1.discounted_fee\n            temp.get_paid_fee = data1.paid_fee\n            temp.get_fee = data1.fee\n          }\n          this.dataList.unshift(temp)\n        }\n        let total_parking_fee = 0\n        let total_discounted_fee = 0\n        let total_paid_fee = 0\n        for (let i = 0; i < this.dataList.length; i++) {\n          total_parking_fee += parseInt(this.dataList[i].get_fee, 10)\n          total_discounted_fee += parseInt(\n            this.dataList[i].get_discounted_fee,\n            10\n          )\n          total_paid_fee += parseInt(this.dataList[i].get_paid_fee, 10)\n        }\n        this.total_parking_fee = total_parking_fee\n        this.total_discounted_fee = total_discounted_fee\n        this.total_paid_fee = total_paid_fee\n        //\tconsole.log(this.carmera_list.length);      \n      } else if (data1.kind === \"get_vehicle_obj_list\") {\n        //   console.log(\"get_vehicle_obj_list : \", data1)\n        for (let i = 0; i < data1.docs.length; i++) {\n          let obj = data1.docs[i]\n          let image_name =\n            config.image_src + obj.folder_name + \"/\" + obj.filename\n          //  console.log(\"image_name : \", image_name)\n          //\tconsole.log(\"dataList : \", this.dataList);\n          if (obj.direction === \"in\") {\n            obj.direction1 = \"입차\"\n          } else {\n            obj.direction1 = \"출차\"\n          }\n          let flag = false\n          let total_parking_fee = 0\n          let total_discounted_fee = 0\n          let total_paid_fee = 0\n          for (let i = 0; i < this.dataList.length; i++) {\n            //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n            if (this.dataList[i].get_loop_event_time === obj.loop_event_time) {\n              if (\n                obj.lp != \"미인식\" &&\n                obj.lp.indexOf(\"X\") < 0 &&\n                obj.lp.length >= 7\n              ) {\n                // 들어온 차량이 미인식이 아니면\n                if (\n                  this.dataList[i].get_lp == \"미인식\" ||\n                  this.dataList[i].get_lp.indexOf(\"X\") >= 0 ||\n                  this.dataList[i].get_lp.length < 7\n                ) {\n                  this.dataList[i].get_lp = obj.lp\n                  this.dataList[i].get_registered = obj.registered\n                  this.dataList[i].get_direction = obj.direction\n                  this.dataList[i].get_contents = obj.contents\n                  this.dataList[i].get_image_name = true\n                  this.dataList[i].get_image_name = image_name\n                  if (obj.direction === \"in\") {\n                    this.dataList[i].get_discounted_fee = 0\n                    this.dataList[i].get_paid_fee = 0\n                    this.dataList[i].get_fee = 0\n                  } else {\n                    if (!obj.discounted_fee) {\n                      obj.discounted_fee = 0\n                    }\n                    if (!data1.fee || obj.fee === 9998 || obj.fee === 9999) {\n                      obj.fee = 0\n                    }\n                    if (!obj.paid_fee) {\n                      obj.paid_fee = 0\n                    }\n                    this.dataList[i].get_discounted_fee = obj.discounted_fee\n                    this.dataList[i].get_paid_fee = obj.paid_fee\n                    this.dataList[i].get_fee = obj.fee\n                    total_parking_fee += parseInt(obj.fee, 10)\n                    total_discounted_fee += parseInt(obj.discounted_fee, 10)\n                    total_paid_fee += parseInt(obj.paid_fee, 10)\n                  }\n                }\n              }\n              flag = true\n              break\n            }\n          }\n          if (flag == false) {\n            let temp = {}\n            temp.get_time = format_time(new Date(obj.loop_event_time))\n            temp.get_loop_event_time = obj.loop_event_time\n            temp.get_location = obj.location\n            temp.get_lp = obj.lp\n            temp.get_registered = obj.registered\n            temp.get_direction = obj.direction\n            temp.get_contents = obj.contents\n            temp.get_image_display = true\n            temp.get_image_name = image_name\n            if (data1.direction === \"in\") {\n              temp.get_discounted_fee = 0\n              temp.get_paid_fee = 0\n              temp.get_fee = 0\n            } else {\n              if (!obj.discounted_fee) {\n                obj.discounted_fee = 0\n              }\n              if (!obj.fee || obj.fee === 9998 || obj.fee === 9999) {\n                obj.fee = 0\n              }\n              if (!obj.paid_fee) {\n                obj.paid_fee = 0\n              }\n              temp.get_discounted_fee = obj.discounted_fee\n              temp.get_paid_fee = obj.paid_fee\n              temp.get_fee = obj.fee\n              total_parking_fee += parseInt(obj.fee, 10)\n              total_discounted_fee += parseInt(obj.discounted_fee, 10)\n              total_paid_fee += parseInt(obj.paid_fee, 10)\n            }\n            this.dataList.unshift(temp)\n          }\n          this.total_parking_fee += total_parking_fee\n          this.total_discounted_fee += total_discounted_fee\n          this.total_paid_fee += total_paid_fee\n          // console.log(\n          //   \"total_parking_fee :\",\n          //   total_parking_fee,\n          //   \"total_discounted_fee :\",\n          //   total_discounted_fee,\n          //   \"total_paid_fee: \",\n          //   total_paid_fee\n          // )\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            //\tconsole.log(data1.lp, this.carmera_list[i].location, data1.location);\n            if (\n              obj.location == this.carmera_list[i].location &&\n              obj.direction == this.carmera_list[i].direction\n            ) {\n              this.carmera_list[i].lp = obj.lp\n              this.carmera_list[i].image_name = image_name\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              break\n            }\n          }\n        }\n      }\n    },\n    contents_change(index) {\n      // console.log(\"내용변경 :\", this.dataList[index])\n      var obj = {}\n      // obj.kind = \"update_vehicle_obj_at_vehicle_obj_list\"\n      obj.kind1 = \"update_vehicle_obj_at_vehicle_obj_list\"\n      obj.lp = this.dataList[index].get_lp\n      obj.loop_event_time = this.dataList[index].get_loop_event_time\n      obj.contents = this.dataList[index].get_contents\n      obj.number = obj.lp.replace(/[가-힝]/gi, \"\")\n      this.sendMessage(obj)\n    },\n    vehicle_obj_list_find() {\n      let d = new Date()\n      //let d1 = d - (24*60*60*1000);\n      //console.log(\"d : \", d, \" d1 : \", d1);\n      let str_start =\n        d.getFullYear() +\n        \"-\" +\n        itoStr(d.getMonth() + 1) +\n        \"-\" +\n        itoStr(d.getDate()) +\n        \"T00:00\"\n      let str_end =\n        d.getFullYear() +\n        \"-\" +\n        itoStr(d.getMonth() + 1) +\n        \"-\" +\n        itoStr(d.getDate()) +\n        \"T23:59\"\n      this.start_time = str_start\n      this.end_time = str_end\n      let obj = {}\n      obj.lp =\"\"\n      obj.loc = \"\"\n      obj.dir = \"\"\n      obj.start_time = get_start_time(this.start_time)\n      obj.end_time = get_end_time(this.end_time)\n      obj.kind = \"get_vehicle_obj_list\"\n      obj.id = window.localStorage.getItem(\"id\")\n      console.log(\"lp_search() : \", obj)\n      this.sendMessage(obj)\n    },\n    signal(c) {\n      c.image_display = !c.image_display\n    },\n    toggles() {\n      this.toggle = !this.toggle\n      //  console.log(this.toggle)\n    },\n    open_picture(d) {      \n      // d.get_image_display = false\n      d.get_image_display = !d.get_image_display\n     \n    },\n    close_picture(d) {\n      //  console.log(\"close_picture : \", d.get_image_display)\n      //this.$nextTick(function(){\n      return (d.get_image_display = true)\n      //})\n    },\n    bar_control(c) {\n      let obj = {}\n      obj.kind = \"control\"\n      obj.direction = \"up\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    bar_control_close(c) {\n      let obj = {}\n      obj.kind = \"\"\n      obj.direction = \"\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    bar_mode_lock(c) {\n      let obj = {}\n      obj.kind = \"mode\"\n      obj.mode = \"lock\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    bar_mode_unlock(c) {\n      let obj = {}\n      obj.kind = \"mode\"\n      obj.mode = \"unlock\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    barrier_name_check() {\n      this.carmera_list = []\n      for (let i = 0; i < config.barrier_display_list.length; i++) {\n        this.carmera_list.push(config.barrier_display_list[i])\n      }\n      // this.bar_policy_fun_all()\n    },\n    sendMessage(c) {\n      this.$socket.emit(\"message_from_web_client\", c)\n    },\n    start() {\n      //console.log(\"start 함수 시작 \");\n      let that = this\n      let flag = false\n      setInterval(() => {\n        let date = Date.now()\n        let temp_date = format_time_date(new Date(date)).split(\":\")\n        let temp_hh = parseInt(temp_date[0], 10)\n        let temp_mm = parseInt(temp_date[1], 10)\n        if (flag === false && temp_hh === 0 && temp_mm === 0) {\n          that.dataList = []\n          flag = true\n        } else {\n          flag = false\n        }\n        if(that.dataList.length > 100){\n          that.dataList.splice(100, that.dataList.length-100)\n        }\n      },20 * 1000)\n      this.bar_status_query()\n    },\n    bar_status_query() {\n      var obj = {}\n      obj.kind = \"bar_status\"\n      obj.control_id = \"admin001\"\n      console.log(\"bar_status_query\")\n      this.sendMessage(obj)\n    }   \n  }\n}\nfunction get_start_time(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    parseInt(res[3]),\n    parseInt(res[4]),\n    0,\n    0\n  )\n  return d.getTime()\n}\n\nfunction get_end_time(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    parseInt(res[3]),\n    parseInt(res[4]),\n    59,\n    999\n  )\n  return d.getTime()\n}\n// function format_time_date(dat) {\n//   var str = \"\"\n//   str += num_to_str(dat.getHours())\n//   str += \":\" + num_to_str(dat.getMinutes())\n//   str += \":\" + num_to_str(dat.getSeconds())\n//   return str\n// }\n\nfunction num_to_str($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\nfunction format_time_date(dat) {\n  var str = \"\"\n  str += num_to_str(dat.getHours())\n  str += \":\" + num_to_str(dat.getMinutes())\n  str += \":\" + num_to_str(dat.getSeconds())\n  return str\n}\nfunction itoStr($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\nfunction format_time(dat) {\n  var str = \"\"\n  str += dat.getFullYear()\n  str += \".\" + num_to_str(dat.getMonth() + 1)\n  str += \".\" + num_to_str(dat.getDate())\n  str += \". \" + num_to_str(dat.getHours())\n  str += \":\" + num_to_str(dat.getMinutes())\n  str += \":\" + num_to_str(dat.getSeconds())\n  return str\n}\n</script>\n<style scoped>\n/* @import \"../../assets/css/table.css\"; */\n/* @import \"../../assets/css/vehicleEntryExitLive.css\"; */\n\n</style>\n"],"sourceRoot":"src/components/operatingFunc"}]}