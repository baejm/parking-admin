{"remainingRequest":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\babel-loader\\lib\\index.js!F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\src\\components\\operatingFunc\\vehicleEntryExitLive1.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\src\\components\\operatingFunc\\vehicleEntryExitLive1.vue","mtime":1608603931832},{"path":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SynologyDrive\\work\\bae\\ht\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vehicleEntryExitLive1.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n <div class=\"vehicle_wrap report_wrap\">\n   <div class=\"title\">\n      <h2>{{titles}}</h2>\n    </div>\n   <div class=\"present_condition_view\">      \n      <ul>\n        <li\n          v-for=\"(c, index) in carmera_list\"\n          :key=\"index\"\n          :class=\"{ active: c.image_display, cut: c.nosignal }\"\n          class=\"carmera_lists\"\n        >\n          <div class=\"strapline\">\n            <dl>\n              <dt><input type=\"text\" :value=\"c.location\" /></dt>\n              <dd v-if=\"c.nosignal === true\">\n                <font-awesome-icon icon=\"exclamation-triangle\" />\n              </dd>\n              <dd><input type=\"text\" :value=\"c.direction\" /></dd>\n            </dl>\n          </div>\n          <div class=\"state_body_wrp\">\n            <ul class=\"state_body\">\n              <li :class=\"{ active: toggle, openfix:c.openfix }\" @click=\"toggles()\">\n                <div class=\"img_record\">                  \n                  <img :src=\"c.image_name\" alt=\"\"  @click=\"submitForm(c)\" />                 \n                  <span class=\"open\">열림</span>\n                  <span class=\"fixing\"\n                    ><font-awesome-icon icon=\"lock\" />고정</span\n                  >\n                </div>\n                <p>차량번호 : {{ c.lp }}</p>\n              </li>\n            </ul>\n            <div class=\"bt_control_wrap\">\n            <div class=\"bar_control\" v-if=\"c.barrier_control_display\">\n              <button class=\"button_open\" @click=\"bar_control(c)\">열림</button>\n              <button class=\"button_close\" @click=\"bar_control_close(c)\">닫힘</button>\n              <form>\n                <label>\n                  <input type=\"radio\" @click=\"bar_mode_lock(c)\" name=\"lock\" />\n                  <span><font-awesome-icon icon=\"lock\" />개방</span>\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    @click=\"bar_mode_unlock(c)\"\n                    name=\"lock\"\n                    checked\n                  /><span> <font-awesome-icon icon=\"lock-open\" />해제</span>\n                </label>\n              </form>\n            </div>\n            <div class=\"bar_control\" v-else></div>         \n            </div>\n          </div>        \n        </li>\n      </ul>\n    </div>\n    <div class=\"record_wrap\">\n      <div class=\"menu_title\">\n        <div class=\"counting\">\n          <h2>출입한 차량들 목록</h2>       \n\n          <span\n            ><font-awesome-icon icon=\"sign-out-alt\" />출차수:{{\n              count_out\n            }}건</span\n          >\n          <span\n            ><font-awesome-icon icon=\"sign-in-alt\" />입차수:{{\n              count_in\n            }}건</span\n          >\n        </div>\n      </div>\n      <div class=\"list_data\">\n        <table class=\"list_data_table\">\n          <thead>\n            <tr class=\"tableTitle\" colspan=\"11\">\n              <th class=\"number\">번호</th>\n              <th>차량번호</th>\n              <th>차량출입시각</th>\n              <th>장소</th>\n              <th>방향</th>\n              <th>구분</th>\n              <th>메모</th>\n              <th :class=\"{add:Object.keys(this.dataList).length > 8}\">사진</th>\n            </tr>\n          </thead>\n          <tbody class=\"scrolltBody \">\n            <tr v-for=\"(d, index) in dataList\" :key=\"index\">\n              <td colspan=\"11\">\n                <table>\n                  <!-- <tr @click.prevent=\"open_picture(d)\"> -->\n                  <tr>\n                    <td class=\"number\">{{ index + 1 }}</td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        v-model=\"d.get_lp\"\n                        v-on:change=\"contents_change(index)\"\n                      />\n                    </td>\n                    <td>{{ d.get_time }}</td>\n                    <td>{{ d.get_location }}</td>\n                    <td>{{ d.get_direction }}</td>\n                    <td>{{ d.get_registered }}</td>                    \n                   <td>\n                      <input\n                        type=\"text\"\n                        v-model=\"d.get_contents\"\n                        v-on:change=\"contents_change(index)\"\n                      />\n                    </td>\n\n                    <td>\n                      <button\n                        v-if=\"d.get_image_display\"\n                        @click.prevent=\"open_picture(d)\"\n                      >\n                        <!-- <font-awesome-icon icon=\"eye\" /> -->\n                        <font-awesome-icon\n                          icon=\"camera-retro\"\n                          style=\"color:#fff\"\n                        />\n                        <!-- 보기<font-awesome-icon icon=\"angle-down\" /> -->\n                      </button>\n                      <button v-else @click=\"close_picture(d)\">\n                        <font-awesome-icon\n                          icon=\"camera-retro\"\n                          style=\"color:#26a95e\"\n                        />\n                        <!-- 닫기<font-awesome-icon icon=\"angle-up\" /> -->\n                      </button>\n                    </td>\n                  <tr v-if=\"d.get_image_display === false\" @click=\"close_picture(d)\">\n                    <td colspan=\"11\" class=\"tdImg\">\n                      <div>\n                        <img :src=\"d.get_image_name\" alt=\"\" />\n                        <span>\n                          {{ d.get_location }}-{{ d.get_direction }}방향</span\n                        >\n                      </div>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n </div>\n</template>\n<script>\nimport config from \"../../config.js\"\nimport { mapState } from \"vuex\"\nexport default {\n  data: function() {\n    return {\n      \n      dataList: [{get_time:\"\",get_location:\"\",get_direction:\"\",get_lp:\"\",get_fee:0,get_paid_fee:0,get_registered:\"\",get_contents:\"\"}],\n      carmera_list: [   {\n      kind_bar_status: \"barrier_status\",\n      kind_bar_policy: \"bar_ploicy\",\n      status: \"down\",\n      location: \"정문입구\",\n      direction: \"in\",\n      lp: \"123가4567\",\n      image_display: false,\n      barrier_control_display: true,\n      barrier_policy_name: \"barrier_policy1\",\n      image_name: require(\"../../assets/car_test1.jpg\"),\n      checkedNames: \"all_vehicle\"\n    },\n    {\n      kind: \"barrier_status\",\n      status: \"down\",\n      location: \"정문출구\",\n      direction: \"out\",\n      lp: \"546가1517\",\n      image_display: false,\n      barrier_control_display: true,\n      barrier_policy_name: \"barrier_policy2\",\n      image_name: require(\"../../assets/car_test2.jpg\"),\n      checkedNames: \"registered_vehicle\"     \n    }],\n      start_time: new Date(),\n      end_time: new Date(),\n      total_parking_fee: 0,\n      total_discounted_fee: 0,\n      total_paid_fee: 0,\n      toggle: false,\n      openfix: false,\n      nosignal: false,\n      list_items: {\n        time: \"현재시간\",\n        loop_event_time: \"pc시간\",\n        location: \"1구역\",\n        direction: \"In\",\n        lp: \"123가4567\",\n        resistered: \"등록차량\",\n        dong_ho: \"101동\",\n        image_display: false,\n        image_name: require(\"../../assets/car_test4.jpg\")\n      },\n      checked: [],\n      button_value: [\n        { name: \"개방\", checked: true },\n        { name: \"풀림\", checked: false }\n      ]\n    }\n  },\n  filters: {\n    currency: function(value) {\n      var num = new Number(value)\n      return num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\n    }\n  },\n  computed: {\n     ...mapState([\"mainTitle\"]),\n    count_in() {\n      let count = 0\n      this.dataList.forEach(cot => {\n        if (cot.get_direction === \"in\") count++\n      })\n      return count\n    },\n    count_out() {\n      let count = 0\n      this.dataList.forEach(cot => {\n        if (cot.get_direction === \"out\") count++\n      })\n      return count\n    }\n  },\n   beforeRouteEnter (to, from, next) {\n     config.parkingLot.type ===\"paid\" ? next({name:'vehicleEntryExitLive'}) : next()       \n    },\n  created() {\n    this.$socket.on(\"message_from_server\", data => {           \n      this.lpr_process(data)\n    }),\n      this.barrier_name_check(),\n      // this.barrier_policy_query(),\n      //this.bar_status_query(),\n      this.loginCheck(),\n      this.start(),\n      this.vehicle_obj_list_find()\n      this.changeTitle () \n  },\n  methods: {\n    changeTitle(){      \n      this.mainTitle.forEach(title =>{\n       title.subMenu.forEach( add=> {\n         if(add.add==='vehicleEntryExitLive') this.titles = add.title\n       })\n      })\n    },\n    loginCheck(){\n      let status = localStorage.getItem(\"status\")\n      if(status !== \"ok\" || status !== \"OK\" ){\n        this.$store.state.loginSuccess = false\n      }\n      else{\n        this.$store.state.loginSuccess = true\n      }\n      console.log(\"status \", status )\n    },\n    submitForm(event) {\n      const frm = document.createElement('form')\n      frm.setAttribute('id', 'img')\n      frm.setAttribute('action', event.image_name)\n      frm.setAttribute('method', 'get')\n      frm.setAttribute('target', 'img')\n      document.body.appendChild(frm)\n      window.open(\n        'about:blank',\n        'img',\n        'width=' +\n    parseInt(window.innerWidth) * 1 +\n    ',height=' +\n    parseInt(window.innerHeight) * 1 +\n    ',toolbar=0,menubar=0,location=0,status=0,scrollbars=1,resizable=0,left=0,top=0'\n      )\n      \n      frm.submit()\n    },\n    lpr_process(data1) {\n      if (data1.kind === \"barrier_status\") {\n        console.log(\"barrier_status\", data1)\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (data1.location == this.carmera_list[i].location) {\n            if (data1.status === \"down\" || data1.status === \"DOWN\") {\n              this.carmera_list[i].image_display = false\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            } else {\n              this.carmera_list[i].image_display = true\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            }\n          }\n        }\n      } else if (data1.kind === \"bar_mode\") {\n        console.log(\"bar_mode\", data1)\n        for (let j = 0; j < data1.docs.length; j++) {\n          let bar_mode = data1.docs[j]\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            if (\n              bar_mode.location === this.carmera_list[i].location &&  bar_mode.direction === this.carmera_list[i].direction\n            ) {\n              \n              if (bar_mode.mode === \"lock\") {\n                this.carmera_list[i].openfix = true\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              } else {\n                this.carmera_list[i].openfix = false\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              }\n              break\n            }\n          }\n        }\n      } else if (data1.kind === \"bar_status\") {\n        console.log(\"bar_status\", data1)\n        for (let j = 0; j < data1.docs.length; j++) {\n          let bar_status = data1.docs[j]\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            if (\n              bar_status.location === this.carmera_list[i].location &&\n              bar_status.direction == this.carmera_list[i].direction\n            ) {\n              if (data1.status === \"down\" || data1.status === \"DOWN\") {\n                this.carmera_list[i].image_display = false\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              } else if (data1.status === \"up\" || data1.status === \"UP\"){\n                this.carmera_list[i].image_display = true\n                let temp = {}\n                this.carmera_list.push(temp)\n                this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              }\n              break\n            }\n          }\n        }\n      } else if (data1.kind === \"socket_error\") {\n        //  console.log(\"socket error : \", data1)\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (\n            data1.location === this.carmera_list[i].location &&\n            data1.direction === this.carmera_list[i].direction\n          ) {\n            this.carmera_list[i].nosignal = true\n            let temp = {}\n            this.carmera_list.push(temp)\n            this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            //console.log(\"보낼값\", this.carmera_list[0].status)\n          }\n        }\n      } else if (data1.kind === \"weekly_barrier_policy\") {\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (\n            data1.location === this.carmera_list[i].location &&\n            data1.direction === this.carmera_list[i].direction\n          ) {\n            if (data1.barrier_policy === \"개방\") {\n              this.carmera_list[i].checkedNames = \"all_vehicle\"\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            } else {\n              for (let j = 0; j < config.barrier_display_list.length; j++) {\n                if (\n                  data1.location === config.barrier_display_list[j].location &&\n                  data1.direction === config.barrier_display_list[j].direction\n                ) {\n                  this.carmera_list[i].checkedNames =\n                    config.barrier_display_list[j].checkedNames\n                  let temp = {}\n                  this.carmera_list.push(temp)\n                  this.carmera_list.splice(this.carmera_list.length - 1, 1)\n                }\n              }\n            }\n          }\n        }\n      } else if (data1.kind === \"socket_normal\") {\n        // console.log(\"socket normal : \", data1)\n        for (let i = 0; i < this.carmera_list.length; i++) {\n          if (\n            data1.location === this.carmera_list[i].location &&\n            data1.direction === this.carmera_list[i].direction\n          ) {\n            this.carmera_list[i].nosignal = false\n            let temp = {}\n            this.carmera_list.push(temp)\n            this.carmera_list.splice(this.carmera_list.length - 1, 1)\n            //console.log(\"보낼값\", this.carmera_list[0].status)\n          }\n        }\n      } else if (data1.kind == \"lpr\") {\n        console.log(data1.kind, data1)\n        //var image_name = \"localhost:7200/images/\"+data1.folder_name+\"/\"+data1.filename\n        let image_name =\n          config.image_src + data1.folder_name + \"/\" + data1.filename\n        // console.log(\"image_name : \", image_name)\n        //\tconsole.log(\"dataList : \", this.dataList);\n        if (data1.direction === \"in\") {\n          data1.direction1 = \"in\"\n        } else {\n          data1.direction1 = \"out\"\n        }\n        let flag = false\n        for (let i = 0; i < this.dataList.length; i++) {\n          //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n          if (this.dataList[i].get_loop_event_time === data1.loop_event_time) {\n            if (data1.lp != \"미인식\") {\n              // 들어온 차량이 미인식이 아니면\n              if (this.dataList[i].get_lp === \"미인식\") {\n                this.dataList[i].get_lp = data1.lp\n                this.dataList[i].get_registered = data1.registered\n                this.dataList[i].get_direction = data1.direction1\n                this.dataList[i].get_contents = data1.contents\n                this.dataList[i].get_image_name = true\n                this.dataList[i].get_image_name = image_name\n                if (data1.direction === \"in\") {\n                  this.dataList[i].get_discounted_fee = 0\n                  this.dataList[i].get_paid_fee = 0\n                  this.dataList[i].get_fee = 0\n                } else {\n                  if (!data1.discounted_fee) {\n                    data1.discounted_fee = 0\n                  }\n                  if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                    data1.fee = 0\n                  }\n                  if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                    data1.paid_fee = 0\n                  }\n                  console.log(\"flag === true :\", data1)\n                  this.dataList[i].get_discounted_fee = parseInt(\n                    data1.discounted_fee,\n                    10\n                  )\n                  this.dataList[i].get_paid_fee = parseInt(data1.paid_fee, 10)\n                  this.dataList[i].get_fee = parseInt(data1.fee, 10)\n                }\n                for (let i = 0; i < this.carmera_list.length; i++) {\n                  //\tconsole.log(data1.lp, this.carmera_list[i].location, data1.location);\n                  if (data1.location === this.carmera_list[i].location && data1.direction === this.carmera_list[i].direction) {\n                    this.carmera_list[i].lp = data1.lp\n                    this.carmera_list[i].image_name = image_name\n                    let temp = {}\n                    this.carmera_list.push(temp)\n                    this.carmera_list.splice(this.carmera_list.length - 1, 1)\n                    break\n                  }\n                }\n              }\n            }\n            flag = true\n            break\n          }\n        }\n        if (flag == false) {\n          let temp = {}\n          temp.get_time = format_time(new Date(data1.loop_event_time))\n          temp.get_loop_event_time = data1.loop_event_time\n          temp.get_location = data1.location\n          temp.get_lp = data1.lp\n          temp.get_registered = data1.registered\n          temp.get_direction = data1.direction1\n          temp.get_contents = data1.contents\n          temp.get_image_display = true\n          temp.get_image_name = image_name\n          if (data1.direction === \"in\") {\n            temp.get_discounted_fee = 0\n            temp.get_paid_fee = 0\n            temp.get_fee = 0\n          } else {\n            if (!data1.discounted_fee) {\n              data1.discounted_fee = 0\n            }\n            if (!data1.fee) {\n              data1.fee = 0\n            }\n            if (!data1.paid_fee) {\n              data1.paid_fee = 0\n            }\n            temp.get_discounted_fee = parseInt(data1.discounted_fee, 10)\n            temp.get_paid_fee = parseInt(data1.paid_fee, 10)\n            temp.get_fee = parseInt(data1.fee, 10)\n            console.log(\"flag === false : \", data1)\n          }\n          this.dataList.unshift(temp)\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            //\tconsole.log(data1.lp, this.carmera_list[i].location, data1.location);\n            if (data1.location === this.carmera_list[i].location && data1.direction === this.carmera_list[i].direction) {\n              this.carmera_list[i].lp = data1.lp\n              this.carmera_list[i].image_name = image_name\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              break\n            }\n          }\n        }\n        let total_parking_fee = 0\n        let total_discounted_fee = 0\n        let total_paid_fee = 0\n        for (let i = 0; i < this.dataList.length; i++) {\n          total_parking_fee += parseInt(this.dataList[i].get_fee, 10)\n          total_discounted_fee += parseInt(\n            this.dataList[i].get_discounted_fee,\n            10\n          )\n          total_paid_fee += parseInt(this.dataList[i].get_paid_fee, 10)\n        }\n        this.total_parking_fee = total_parking_fee\n        this.total_discounted_fee = total_discounted_fee\n        this.total_paid_fee = total_paid_fee\n        //\tconsole.log(this.carmera_list.length);\n      } else if (data1.kind == \"fee_calculation_result\") {\n        console.log(data1.kind, data1)\n        //var image_name = \"localhost:7200/images/\"+data1.folder_name+\"/\"+data1.filename\n        let image_name =\n          config.image_src + data1.folder_name + \"/\" + data1.filename\n        // console.log(\"image_name : \", image_name)\n        //\tconsole.log(\"dataList : \", this.dataList);\n        if (data1.direction === \"in\") {\n          data1.direction1 = \"입차\"\n        } else {\n          data1.direction1 = \"출차\"\n        }\n        let flag = false\n        for (let i = 0; i < this.dataList.length; i++) {\n          //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n          if (this.dataList[i].get_loop_event_time === data1.loop_event_time) {\n            this.dataList[i].get_lp = data1.lp\n            this.dataList[i].get_registered = data1.registered\n            this.dataList[i].get_direction = data1.direction\n            this.dataList[i].get_contents = data1.contents\n            this.dataList[i].get_image_name = true\n            this.dataList[i].get_image_name = image_name\n            if (data1.direction === \"in\") {\n              this.dataList[i].get_discounted_fee = 0\n              this.dataList[i].get_paid_fee = 0\n              this.dataList[i].get_fee = 0\n            } else {\n              if (!data1.discounted_fee) {\n                data1.discounted_fee = 0\n              }\n              if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                data1.fee = 0\n              }\n              if (!data1.paid_fee) {\n                data1.paid_fee = 0\n              }\n              this.dataList[i].get_discounted_fee = parseInt(\n                data1.discounted_fee,\n                10\n              )\n              this.dataList[i].get_paid_fee = parseInt(data1.paid_fee, 10)\n              this.dataList[i].get_fee = parseInt(data1.fee, 10)\n            }\n            flag = true\n            break\n          }\n        }\n        if (flag == false) {\n          let temp = {}\n          temp.get_time = format_time(new Date(data1.loop_event_time))\n          temp.get_loop_event_time = data1.loop_event_time\n          temp.get_location = data1.location\n          temp.get_lp = data1.lp\n          temp.get_registered = data1.registered\n          temp.get_direction = data1.direction\n          temp.get_contents = data1.contents\n          temp.get_image_display = true\n          temp.get_image_name = image_name\n          if (data1.direction === \"in\") {\n            temp.get_discounted_fee = 0\n            temp.get_paid_fee = 0\n            temp.get_fee = 0\n          } else {\n            if (!data1.discounted_fee) {\n              data1.discounted_fee = 0\n            }\n            if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n              data1.fee = 0\n            }\n            if (!data1.paid_fee) {\n              data1.paid_fee = 0\n            }\n            temp.get_discounted_fee = data1.discounted_fee\n            temp.get_paid_fee = data1.paid_fee\n            temp.get_fee = data1.fee\n          }\n          this.dataList.unshift(temp)\n        }\n        let total_parking_fee = 0\n        let total_discounted_fee = 0\n        let total_paid_fee = 0\n        for (let i = 0; i < this.dataList.length; i++) {\n          total_parking_fee += parseInt(this.dataList[i].get_fee, 10)\n          total_discounted_fee += parseInt(\n            this.dataList[i].get_discounted_fee,\n            10\n          )\n          total_paid_fee += parseInt(this.dataList[i].get_paid_fee, 10)\n        }\n        this.total_parking_fee = total_parking_fee\n        this.total_discounted_fee = total_discounted_fee\n        this.total_paid_fee = total_paid_fee\n        //\tconsole.log(this.carmera_list.length);\n      } else if (data1.kind == \"lpr_payment\") {\n          console.log(data1.kind, data1)\n        //var image_name = \"localhost:7200/images/\"+data1.folder_name+\"/\"+data1.filename\n        let image_name =\n          config.image_src + data1.folder_name + \"/\" + data1.filename\n        //  console.log(\"image_name : \", image_name)\n        //\tconsole.log(\"dataList : \", this.dataList);\n        if (data1.direction === \"in\") {\n          data1.direction1 = \"in\"\n        } else {\n          data1.direction1 = \"out\"\n        }\n        let flag = false\n        for (let i = 0; i < this.dataList.length; i++) {\n          //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n          if (this.dataList[i].get_loop_event_time === data1.loop_event_time) {\n            this.dataList[i].get_lp = data1.lp\n            this.dataList[i].get_registered = data1.registered\n            this.dataList[i].get_direction = data1.direction\n            this.dataList[i].get_contents = data1.contents\n            this.dataList[i].get_image_name = true\n            this.dataList[i].get_image_name = image_name\n            if (data1.direction === \"in\") {\n              this.dataList[i].get_discounted_fee = 0\n              this.dataList[i].get_paid_fee = 0\n              this.dataList[i].get_fee = 0\n            } else {\n              if (!data1.discounted_fee) {\n                data1.discounted_fee = 0\n              }\n              if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n                data1.fee = 0\n              }\n              if (!data1.paid_fee) {\n                data1.paid_fee = 0\n              }\n              this.dataList[i].get_discounted_fee = data1.discounted_fee\n              this.dataList[i].get_paid_fee = data1.paid_fee\n              this.dataList[i].get_fee = data1.fee\n            }\n            flag = true\n            break\n          }\n        }\n        if (flag == false) {\n          let temp = {}\n          temp.get_time = format_time(new Date(data1.loop_event_time))\n          temp.get_loop_event_time = data1.loop_event_time\n          temp.get_location = data1.location\n          temp.get_lp = data1.lp\n          temp.get_registered = data1.registered\n          temp.get_direction = data1.direction\n          temp.get_contents = data1.contents\n          temp.get_image_display = true\n          temp.get_image_name = image_name\n          if (data1.direction === \"in\") {\n            temp.get_discounted_fee = 0\n            temp.get_paid_fee = 0\n            temp.get_fee = 0\n          } else {\n            if (!data1.discounted_fee) {\n              data1.discounted_fee = 0\n            }\n            if (!data1.fee || data1.fee === 9998 || data1.fee === 9999) {\n              data1.fee = 0\n            }\n            if (!data1.paid_fee) {\n              data1.paid_fee = 0\n            }\n            temp.get_discounted_fee = data1.discounted_fee\n            temp.get_paid_fee = data1.paid_fee\n            temp.get_fee = data1.fee\n          }\n          this.dataList.unshift(temp)\n        }\n        let total_parking_fee = 0\n        let total_discounted_fee = 0\n        let total_paid_fee = 0\n        for (let i = 0; i < this.dataList.length; i++) {\n          total_parking_fee += parseInt(this.dataList[i].get_fee, 10)\n          total_discounted_fee += parseInt(\n            this.dataList[i].get_discounted_fee,\n            10\n          )\n          total_paid_fee += parseInt(this.dataList[i].get_paid_fee, 10)\n        }\n        this.total_parking_fee = total_parking_fee\n        this.total_discounted_fee = total_discounted_fee\n        this.total_paid_fee = total_paid_fee\n        //\tconsole.log(this.carmera_list.length);      \n      } else if (data1.kind === \"get_vehicle_obj_list\") {\n        //   console.log(\"get_vehicle_obj_list : \", data1)\n        for (let i = 0; i < data1.docs.length; i++) {\n          let obj = data1.docs[i]\n          let image_name =\n            config.image_src + obj.folder_name + \"/\" + obj.filename\n          //  console.log(\"image_name : \", image_name)\n          //\tconsole.log(\"dataList : \", this.dataList);\n          if (obj.direction === \"in\") {\n            obj.direction1 = \"입차\"\n          } else {\n            obj.direction1 = \"출차\"\n          }\n          let flag = false\n          let total_parking_fee = 0\n          let total_discounted_fee = 0\n          let total_paid_fee = 0\n          for (let i = 0; i < this.dataList.length; i++) {\n            //console.log(this.dataList[i].get_loop_event_time, this.dataList[i].get_lp);\n            if (this.dataList[i].get_loop_event_time === obj.loop_event_time) {\n              if (\n                obj.lp != \"미인식\" &&\n                obj.lp.indexOf(\"X\") < 0 &&\n                obj.lp.length >= 7\n              ) {\n                // 들어온 차량이 미인식이 아니면\n                if (\n                  this.dataList[i].get_lp == \"미인식\" ||\n                  this.dataList[i].get_lp.indexOf(\"X\") >= 0 ||\n                  this.dataList[i].get_lp.length < 7\n                ) {\n                  this.dataList[i].get_lp = obj.lp\n                  this.dataList[i].get_registered = obj.registered\n                  this.dataList[i].get_direction = obj.direction\n                  this.dataList[i].get_contents = obj.contents\n                  this.dataList[i].get_image_name = true\n                  this.dataList[i].get_image_name = image_name\n                  if (obj.direction === \"in\") {\n                    this.dataList[i].get_discounted_fee = 0\n                    this.dataList[i].get_paid_fee = 0\n                    this.dataList[i].get_fee = 0\n                  } else {\n                    if (!obj.discounted_fee) {\n                      obj.discounted_fee = 0\n                    }\n                    if (!data1.fee || obj.fee === 9998 || obj.fee === 9999) {\n                      obj.fee = 0\n                    }\n                    if (!obj.paid_fee) {\n                      obj.paid_fee = 0\n                    }\n                    this.dataList[i].get_discounted_fee = obj.discounted_fee\n                    this.dataList[i].get_paid_fee = obj.paid_fee\n                    this.dataList[i].get_fee = obj.fee\n                    total_parking_fee += parseInt(obj.fee, 10)\n                    total_discounted_fee += parseInt(obj.discounted_fee, 10)\n                    total_paid_fee += parseInt(obj.paid_fee, 10)\n                  }\n                }\n              }\n              flag = true\n              break\n            }\n          }\n          if (flag == false) {\n            let temp = {}\n            temp.get_time = format_time(new Date(obj.loop_event_time))\n            temp.get_loop_event_time = obj.loop_event_time\n            temp.get_location = obj.location\n            temp.get_lp = obj.lp\n            temp.get_registered = obj.registered\n            temp.get_direction = obj.direction\n            temp.get_contents = obj.contents\n            temp.get_image_display = true\n            temp.get_image_name = image_name\n            if (data1.direction === \"in\") {\n              temp.get_discounted_fee = 0\n              temp.get_paid_fee = 0\n              temp.get_fee = 0\n            } else {\n              if (!obj.discounted_fee) {\n                obj.discounted_fee = 0\n              }\n              if (!obj.fee || obj.fee === 9998 || obj.fee === 9999) {\n                obj.fee = 0\n              }\n              if (!obj.paid_fee) {\n                obj.paid_fee = 0\n              }\n              temp.get_discounted_fee = obj.discounted_fee\n              temp.get_paid_fee = obj.paid_fee\n              temp.get_fee = obj.fee\n              total_parking_fee += parseInt(obj.fee, 10)\n              total_discounted_fee += parseInt(obj.discounted_fee, 10)\n              total_paid_fee += parseInt(obj.paid_fee, 10)\n            }\n            this.dataList.unshift(temp)\n          }\n          this.total_parking_fee += total_parking_fee\n          this.total_discounted_fee += total_discounted_fee\n          this.total_paid_fee += total_paid_fee\n          // console.log(\n          //   \"total_parking_fee :\",\n          //   total_parking_fee,\n          //   \"total_discounted_fee :\",\n          //   total_discounted_fee,\n          //   \"total_paid_fee: \",\n          //   total_paid_fee\n          // )\n          for (let i = 0; i < this.carmera_list.length; i++) {\n            //\tconsole.log(data1.lp, this.carmera_list[i].location, data1.location);\n            if (\n              obj.location == this.carmera_list[i].location &&\n              obj.direction == this.carmera_list[i].direction\n            ) {\n              this.carmera_list[i].lp = obj.lp\n              this.carmera_list[i].image_name = image_name\n              let temp = {}\n              this.carmera_list.push(temp)\n              this.carmera_list.splice(this.carmera_list.length - 1, 1)\n              break\n            }\n          }\n        }\n      }\n    },\n    contents_change(index) {\n      // console.log(\"내용변경 :\", this.dataList[index])\n      var obj = {}\n      // obj.kind = \"update_vehicle_obj_at_vehicle_obj_list\"\n      obj.kind1 = \"update_vehicle_obj_at_vehicle_obj_list\"\n      obj.lp = this.dataList[index].get_lp\n      obj.loop_event_time = this.dataList[index].get_loop_event_time\n      obj.contents = this.dataList[index].get_contents\n      obj.number = obj.lp.replace(/[가-힝]/gi, \"\")\n      this.sendMessage(obj)\n    },\n    vehicle_obj_list_find() {\n      let d = new Date()\n      //let d1 = d - (24*60*60*1000);\n      //console.log(\"d : \", d, \" d1 : \", d1);\n      let str_start =\n        d.getFullYear() +\n        \"-\" +\n        itoStr(d.getMonth() + 1) +\n        \"-\" +\n        itoStr(d.getDate()) +\n        \"T00:00\"\n      let str_end =\n        d.getFullYear() +\n        \"-\" +\n        itoStr(d.getMonth() + 1) +\n        \"-\" +\n        itoStr(d.getDate()) +\n        \"T23:59\"\n      this.start_time = str_start\n      this.end_time = str_end\n      let obj = {}\n      obj.start_time = get_start_time(this.start_time)\n      obj.end_time = get_end_time(this.end_time)\n      obj.kind = \"get_vehicle_obj_list\"\n      obj.id = window.localStorage.getItem(\"id\")\n      console.log(\"lp_search() : \", obj)\n      this.sendMessage(obj)\n    },\n    signal(c) {\n      c.image_display = !c.image_display\n    },\n    toggles() {\n      this.toggle = !this.toggle\n      //  console.log(this.toggle)\n    },\n    open_picture(d) {      \n      // d.get_image_display = false\n      d.get_image_display = !d.get_image_display\n     \n    },\n    close_picture(d) {\n      //  console.log(\"close_picture : \", d.get_image_display)\n      //this.$nextTick(function(){\n      return (d.get_image_display = true)\n      //})\n    },\n    bar_control(c) {\n      let obj = {}\n      obj.kind = \"control\"\n      obj.direction = \"up\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    bar_control_close(c) {\n      let obj = {}\n      obj.kind = \"\"\n      obj.direction = \"\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    bar_mode_lock(c) {\n      let obj = {}\n      obj.kind = \"mode\"\n      obj.mode = \"lock\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    bar_mode_unlock(c) {\n      let obj = {}\n      obj.kind = \"mode\"\n      obj.mode = \"unlock\"\n      obj.location = c.location\n      //index = c.index\n      //admin_id: \"admin001\"\n      this.sendMessage(obj)\n    },\n    barrier_name_check() {\n      this.carmera_list = []\n      for (let i = 0; i < config.barrier_display_list.length; i++) {\n        this.carmera_list.push(config.barrier_display_list[i])\n      }\n      // this.bar_policy_fun_all()\n    },\n    sendMessage(c) {\n      this.$socket.emit(\"message_from_web_client\", c)\n    },\n    start() {\n      //console.log(\"start 함수 시작 \");\n      let that = this\n      let flag = false\n      setInterval(() => {\n        let date = Date.now()\n        let temp_date = format_time_date(new Date(date)).split(\":\")\n        let temp_hh = parseInt(temp_date[0], 10)\n        let temp_mm = parseInt(temp_date[1], 10)\n        if (flag === false && temp_hh === 0 && temp_mm === 0) {\n          that.dataList = []\n          flag = true\n        } else {\n          flag = false\n        }\n        if(that.dataList.length > 1000){\n          that.dataList.splice(100, that.dataList.length-1000)\n        }\n      },20 * 1000)\n      this.bar_status_query()\n    },\n    bar_status_query() {\n      var obj = {}\n      obj.kind = \"bar_status\"\n      obj.control_id = \"admin001\"\n      console.log(\"bar_status_query\")\n      this.sendMessage(obj)\n    }   \n  }\n}\nfunction get_start_time(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    parseInt(res[3]),\n    parseInt(res[4]),\n    0,\n    0\n  )\n  return d.getTime()\n}\n\nfunction get_end_time(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    parseInt(res[3]),\n    parseInt(res[4]),\n    59,\n    999\n  )\n  return d.getTime()\n}\n// function format_time_date(dat) {\n//   var str = \"\"\n//   str += num_to_str(dat.getHours())\n//   str += \":\" + num_to_str(dat.getMinutes())\n//   str += \":\" + num_to_str(dat.getSeconds())\n//   return str\n// }\n\nfunction num_to_str($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\nfunction format_time_date(dat) {\n  var str = \"\"\n  str += num_to_str(dat.getHours())\n  str += \":\" + num_to_str(dat.getMinutes())\n  str += \":\" + num_to_str(dat.getSeconds())\n  return str\n}\nfunction itoStr($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\nfunction format_time(dat) {\n  var str = \"\"\n  str += dat.getFullYear()\n  str += \".\" + num_to_str(dat.getMonth() + 1)\n  str += \".\" + num_to_str(dat.getDate())\n  str += \". \" + num_to_str(dat.getHours())\n  str += \":\" + num_to_str(dat.getMinutes())\n  str += \":\" + num_to_str(dat.getSeconds())\n  return str\n}\n</script>\n<style scoped>\n/* @import \"../../assets/css/table.css\"; */\n/* @import \"../../assets/css/vehicleEntryExitLive.css\"; */\n\n</style>\n"],"sourceRoot":"src/components/operatingFunc"}]}