{"remainingRequest":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\src\\components\\operatingFunc\\noticeCalculationSta.vue?vue&type=style&index=0&id=1486c949&scoped=true&lang=css&","dependencies":[{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\src\\components\\operatingFunc\\noticeCalculationSta.vue","mtime":1605163640237},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiBAaW1wb3J0ICIuLi9hc3NldHMvY3NzL3RhYmxlLmNzcyI7ICovCkBpbXBvcnQgIi4uL2Fzc2V0cy9jc3MvZGl2aWNlLmNzcyI7CkBpbXBvcnQgIi4uL2Fzc2V0cy9jc3Mvc2V0dGluZ19lbGVjdHJvbmljX2Rpc3BsYXkuY3NzIjsKCi5jb250ZW50X3dyYXAgLnBvcHVwID4gZGl2IHsKICB3aWR0aDogODAlOwp9Cg=="},{"version":3,"sources":["noticeCalculationSta.vue"],"names":[],"mappingssjBA;AACA;AACA;;AAEA;AACA;AACA","file":"noticeCalculationSta.vue","sourceRoot":"src/components/operatingFunc","sourcesContent":["<template>\n  <div class=\"report_wrap\">\n    <div class=\"title\">\n      <h2>{{mainTitle[1].subMenu[3].title}}</h2>\n    </div>\n   <div class=\"content_wrap\">\n      <div class=\"menu_title\">\n        <form>\n          <span class=\"small_title\">장소</span>\n          <select v-model=\"searchLocation\">\n            <option disabled value=\"\">선택해 주세요</option>\n            <option v-for=\"(location1, index) in locations\" v-bind:key=\"index\">\n              {{ location1.text }}\n            </option>\n          </select>\n          <span class=\"small_title\">방향</span>\n          <select v-model=\"searchDirection\">\n            <option disabled value=\"\">선택해 주세요</option>\n            <option\n              v-for=\"(direction1, index) in directions\"\n              v-bind:key=\"index\"\n            >\n              {{ direction1.text }}\n            </option>\n          </select>\n          <button @click.prevent=\"search\" class=\"seach_confirm\">검색</button>\n\n          <button @click.prevent=\"registOpen\" class=\"registerbtn\">등록</button>\n        </form>\n      </div>\n\n      <!-- 등록내용 -->\n      <div class=\"display_popup popup\" v-show=\"resistIs\">\n        <div>\n          <h3>공지사항 내용</h3>\n          <button @click=\"registClose\">\n            <font-awesome-icon icon=\"times-circle\" />\n          </button>\n          <ul class=\"wrap_setting\">\n            <li>\n              <h4>적용</h4>\n              <span class=\"index\">\n                <label><input type=\"checkbox\" v-model=\"reg.checked\"/></label>\n              </span>\n            </li>\n            <li>\n              <h4>장소</h4>\n              <select v-model=\"reg.location\">\n                <option disabled value=\"\">선택해 주세요</option>\n                <option\n                  v-for=\"(location1, index) in locations1\"\n                  v-bind:key=\"index\"\n                >\n                  {{ location1.text }}\n                </option>\n              </select>\n            </li>\n\n            <li>\n              <h4>방향</h4>\n              <select v-model=\"reg.direction\">\n                <option disabled value=\"\">선택해 주세요</option>\n                <option\n                  v-for=\"(direction1, index) in directions1\"\n                  v-bind:key=\"index\"\n                >\n                  {{ direction1.text }}\n                </option>\n              </select>\n            </li>\n            <li class=\"screen_typing\">\n              <h4>공지사항 내용</h4>\n              <ul>\n                <li>                \n                  <input\n                    type=\"text\"\n                    placeholder=\"문구를 입력하세요.\"\n                    maxlength=\"50\"\n                    v-model=\"reg.textTop\"\n                  />\n                  <p class=\"tooltip\">\n                    <font-awesome-icon icon=\"exclamation\" /><span\n                      class=\"tooltip-content\"\n                    >                    \n                    </span>\n                  </p>                  \n                </li>               \n              </ul>\n            </li>\n          </ul>\n          <button @click.prevent=\"registNew\" class=\"writebtn\">등록</button>\n        </div>\n      </div>\n      <!-- 수정버튼 -->\n      <div class=\"modify_pop popup\" v-show=\"modifyIs\">\n        <div>\n          <h3>공지사항 내용</h3>\n          <button @click=\"modifyClose\">\n            <font-awesome-icon icon=\"times-circle\" />\n          </button>\n          <ul class=\"wrap_setting\">\n            <li>\n              <h4>적용</h4>\n              <span class=\"index\">\n                <label><input type=\"checkbox\" v-model=\"current.checked\"/></label>\n              </span>\n            </li>\n            <li>\n              <h4>장소</h4>\n              <span>\n                <!-- 임시테스트 -->\n                {{ current.location }}\n              </span>\n            </li>\n            <li>\n              <h4>방향</h4>\n              <span>\n                <!--임시테스트2 -->\n                 {{ current.direction }}\n              </span>\n            </li>\n            <li class=\"screen_typing\">\n              <h4>공지사항 내용</h4>\n              <ul>\n                <li>                  \n                  <input\n                    type=\"text\"\n                    placeholder=\"문구를 입력하세요.\"\n                    maxlength=\"50\"\n                    v-model=\"current.textTop\"\n                  />\n                  <p class=\"tooltip\">\n                    <font-awesome-icon icon=\"exclamation\" /><span\n                      class=\"tooltip-content\"\n                    >                      \n                    </span>\n                  </p>                  \n                </li>               \n              </ul>\n            </li>\n          </ul>\n          <button @click.prevent=\"modifyVehicle\" class=\"modifybtn\">\n            수정\n          </button>\n          <button @click.prevent=\"deleteVehicle\" class=\"deletebtn\">\n            삭제\n          </button>\n        </div>\n      </div>\n      <div class=\"list-items\">\n        <div class=\"list-title\">\n          <li>\n            <span\n              >적용중<button @click.prevent=\"item_date_click\">\n                <font-awesome-icon\n                  icon=\"caret-down\"\n                  v-if=\"sort_item.date\"\n                /></button\n            ></span>\n          </li>\n          <li>\n            <span>위치</span>\n          </li>\n          <li>\n            <span>방향</span>\n          </li>\n          <li>\n            <span>문구</span>\n          </li>\n         \n        </div>\n        <!-- 리스트 출력부분 -->\n        <!-- <spinners v-if=\"isLoading\" /> -->\n        <ul class=\"list-wrap\">\n          <li\n            v-for=\"(c, index) in led_display_adver_list\"\n            :key=\"index\"\n            @click=\"modifyOpen(c)\"\n          >\n            <span class=\"index\">\n              <label><input type=\"checkbox\" v-model=\"c.checked\"/></label>\n            </span>\n            <span class=\"count_vehicles\">\n              {{ c.location }}\n            </span>\n            <span class=\"paid_fee\"> {{ c.direction }}</span>\n            <span class=\"discount_amount\">\n              {{ c.textTop }} <br />\n              {{ c.textBottom }}\n            </span>           \n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from \"underscore\"\nimport XLSX from \"xlsx\"\nimport config from \"../config.js\"\n// import spinners from \"../components/spinners\"\nexport default {\n  data: function() {\n    return {\n      contents: [],\n      reg: {     \n        checked: false,\n        location: \"\",\n        text: \"\",\n        direction: \"\"\n      },\n      admin: {\n        checked: false,\n        location: \"\",\n        text: \"\",\n        direction: \"\"\n      },\n      isLoading: false,\n      searchLocation: \"\",\n      searchDirection: \"\",\n      modifyIs: false,\n      resistIs: false,\n      announce_list: [],\n      current: {\n       \n      },\n      sort_item: {\n       \n      }\n    }\n  },\n  filters: {\n    currency: function(value) {\n      var num = new Number(value)\n      return num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\n    }\n  },\n  created() {\n    // this.isLoading = true\n    this.$socket.on(\"message_from_server\", data => {\n      //   console.log(\"data.kind : \", data.kind)\n      // this.isLoading = false\n      if (data.kind === \"get_announce_list\") {\n        this.led_display_adver_list_query(data)\n      } else if (\n        data.kind === \"create_announce_list\" ||\n        data.kind === \"update_announce_list\" ||\n        data.kind === \"delete_announce_list\"\n      ) {\n        this.search1()\n      }\n    }),\n      this.loc_dir(),\n      this.search1()\n  },\n  components: {\n    // spinners\n  },\n  methods: {\n    registOpen() {\n      this.resistIs = true\n    },\n    registClose() {\n      this.resistIs = false\n    },\n    registNew(e) {\n      this.registClose()\n      e.preventDefault()\n      console.log(\"this.admin : \", this)\n      let obj = {}\n      obj.kind = \"create_announce_list\"\n      obj.text = this.reg.text\n      obj.location = this.reg.location\n      obj.direction = this.reg.direction\n      obj.time = Date.now()\n      obj.checked = this.reg.checked\n      console.log(\"공지사항 등록 : \", obj)\n      this.sendMessage(obj)\n    },\n    modifyVehicle() {\n      this.modifyClose()\n      let obj = {}\n      obj.kind = \"update_announce_list\"\n      obj.text = this.current.text\n      obj.location = this.current.location\n      obj.direction = this.current.direction\n      obj.time = Date.now()\n      obj.checked = this.current.checked\n      console.log(\"공지사항 수정 :\", obj)\n      this.sendMessage(obj)\n    },\n    deleteVehicle() {\n      console.log(\"공지사항 삭제\")\n      this.modifyClose()\n      let obj = {}      \n      obj.text = this.current.text\n      obj.location = this.current.location\n      obj.direction = this.current.direction\n      obj.time = Date.now()\n      obj.checked = this.current.checked\n      obj.kind = \"delete_announce_list\"\n      console.log(\"공지사항 삭제 : \", obj)\n      this.sendMessage(obj)\n    },\n    search1() {\n      let obj1 = {}\n      obj1.kind = \"get_announce_list\"\n      this.sendMessage(obj1)\n    },\n    search() {\n      console.log(\"검색 버튼을 눌렀습니다.\")\n      let obj = {}\n      obj.kind = \"get_announce_list\"\n      this.sendMessage(obj)\n    },\n    loc_dir() {\n      this.locations = []\n      this.directions = []\n      this.locations1 = []\n      this.directions1 = []\n      let location_list = []\n      let direction_list = []\n      location_list = config.location_list\n      direction_list = config.direction_list\n      //  for(let i = 0; i < location_list.length; i++){\n      this.locations = location_list\n      for (let i = 0; i < this.locations.length; i++) {\n        if (this.locations[i].text !== \"전체\") {\n          this.locations1.push(this.locations[i])\n        }\n      }\n      //  }\n      // for(let i = 0; i < direction_list.length; i++){\n      this.directions = direction_list\n      for (let i = 0; i < this.directions.length; i++) {\n        if (this.directions[i].text !== \"전체\") {\n          this.directions1.push(this.directions[i])\n        }\n      }\n      //   }\n      let temp = {}\n      this.locations.push(temp)\n      this.locations.splice(this.locations.length - 1, 1)\n      this.directions.push(temp)\n      this.directions.splice(this.directions.length - 1, 1)\n    },\n    announce_list_query(data) {\n      // this.daily_stat_list = []\n      this.announce_list = []\n      for (let i = 0; i < data.docs.length; i++) {\n        let obj = {}\n        obj.text = data.docs[i].text\n        obj.location = data.docs[i].location\n        obj.direction = data.docs[i].direction\n        obj.time = data.docs[i].time\n        obj.checked = data.docs[i].checked\n        this.announce_list.push(obj)\n        // let obj = data.docs[i].daily_stat_list\n        console.log(obj)\n        // obj.date = format_time2(new Date(obj.day_loop_event_time))\n        // this.daily_stat_list.push(obj)\n      }\n    },\n    sendMessage(c) {\n      this.$socket.emit(\"message_from_web_client\", c)\n    },\n    modifyOpen(c) {\n      this.modifyIs = true\n      this.current.location = c.location\n      this.current.direction = c.direction\n      this.current.text = c.text\n      this.current.checked = c.checked\n      console.log(\"this : \", this)\n    },\n    modifyClose() {\n      this.modifyIs = false\n    },\n    item_date_click: function() {\n      console.log(\"date sort\")\n      let temp10 = []\n      if (this.sort_item.date === false) {\n        console.log(\"date sort1\")\n        this.sort_item.date = true\n        temp10 = _.sortBy(this.daily_stat_list, \"date\")\n        temp10.reverse()\n        return (this.daily_stat_list = temp10)\n      } else {\n        console.log(\"date sort2\")\n        this.sort_item.date = false\n        temp10 = _.sortBy(this.daily_stat_list, \"date\")\n        return (this.daily_stat_list = temp10)\n      }\n    },\n    item_total_vehicle_obj_list_click: function() {\n      console.log(\"total_vehicle_obj_list sort\")\n      let temp10 = []\n      if (this.sort_item.total_vehicle_obj_list === false) {\n        console.log(\"total_vehicle_obj_list sort1\")\n        this.sort_item.total_vehicle_obj_list = true\n        temp10 = _.sortBy(this.daily_stat_list, \"total_vehicle_obj_list\")\n        temp10.reverse()\n        return (this.daily_stat_list = temp10)\n      } else {\n        console.log(\"total_vehicle_obj_list sort2\")\n        this.sort_item.total_vehicle_obj_list = false\n        temp10 = _.sortBy(this.daily_stat_list, \"total_vehicle_obj_list\")\n        return (this.daily_stat_list = temp10)\n      }\n    },\n    item_fee_click: function() {\n      console.log(\"fee sort\")\n      let temp10 = []\n      if (this.sort_item.fee === false) {\n        console.log(\"fee sort1\")\n        this.sort_item.fee = true\n        temp10 = _.sortBy(this.daily_stat_list, \"fee\")\n        temp10.reverse()\n        return (this.daily_stat_list = temp10)\n      } else {\n        console.log(\"fee sort2\")\n        this.sort_item.fee = false\n        temp10 = _.sortBy(this.daily_stat_list, \"fee\")\n        return (this.daily_stat_list = temp10)\n      }\n    },\n    item_discounted_fee_click: function() {\n      console.log(\"discounted_fee sort\")\n      let temp10 = []\n      if (this.sort_item.discounted_fee === false) {\n        console.log(\"discounted_fee sort1\")\n        this.sort_item.discounted_fee = true\n        temp10 = _.sortBy(this.daily_stat_list, \"discounted_fee\")\n        temp10.reverse()\n        return (this.daily_stat_list = temp10)\n      } else {\n        console.log(\"discounted_fee sort2\")\n        this.sort_item.discounted_fee = false\n        temp10 = _.sortBy(this.daily_stat_list, \"discounted_fee\")\n        return (this.daily_stat_list = temp10)\n      }\n    },\n    item_paid_fee_click: function() {\n      console.log(\"paid_fee sort\")\n      let temp10 = []\n      if (this.sort_item.paid_fee === false) {\n        console.log(\"paid_fee sort1\")\n        this.sort_item.paid_fee = true\n        temp10 = _.sortBy(this.daily_stat_list, \"paid_fee\")\n        temp10.reverse()\n        return (this.daily_stat_list = temp10)\n      } else {\n        console.log(\"paid_fee sort2\")\n        this.sort_item.paid_fee = false\n        temp10 = _.sortBy(this.daily_stat_list, \"paid_fee\")\n        return (this.daily_stat_list = temp10)\n      }\n    },\n    item_resident_fee_click: function() {\n      console.log(\"resident_fee sort\")\n      let temp10 = []\n      if (this.sort_item.resident_fee === false) {\n        console.log(\"resident_fee sort1\")\n        this.sort_item.resident_fee = true\n        temp10 = _.sortBy(this.daily_stat_list, \"resident_fee\")\n        temp10.reverse()\n        return (this.daily_stat_list = temp10)\n      } else {\n        console.log(\"resident_fee sort2\")\n        this.sort_item.resident_fee = false\n        temp10 = _.sortBy(this.daily_stat_list, \"resident_fee\")\n        return (this.daily_stat_list = temp10)\n      }\n    },\n    download: function() {\n      let dt = new Date()\n      let year = itoStr(dt.getFullYear())\n      let month = itoStr(dt.getMonth() + 1)\n      let day = itoStr(dt.getDate())\n      let hour = itoStr(dt.getHours())\n      let mins = itoStr(dt.getMinutes())\n      let postfix = year + \"_\" + month + \"_\" + day + \"_\" + hour + \"_\" + mins\n      const data = XLSX.utils.json_to_sheet(this.daily_stat_list)\n      const wb = XLSX.utils.book_new()\n      XLSX.utils.book_append_sheet(wb, data, \"data\")\n      XLSX.writeFile(\n        wb,\n        \"하테크노타운주차장_공지사항_\" + postfix + \".xlsx\"\n      )\n    }\n  }\n}\n/*\nfunction format_time1(dat) {\n  var str = \"\"\n  str += dat.getFullYear()\n  str += \".\" + num_to_str(dat.getMonth() + 1)\n  str += \".\" + num_to_str(dat.getDate())\n  str += \". \" + num_to_str(dat.getHours())\n  str += \":\" + num_to_str(dat.getMinutes())\n  str += \":\" + num_to_str(dat.getSeconds())\n  return str\n}\n// function format_time2(dat) {\n//   var str = \"\"\n//   str += dat.getFullYear()\n//   str += \".\" + num_to_str(dat.getMonth() + 1)\n//   str += \".\" + num_to_str(dat.getDate())\n//   return str\n// }\nfunction num_to_str($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\nfunction get_datetime_month_addone(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(parseInt(res[0]), parseInt(res[1]), 0, 0, 0, 0, 0)\n  return d.getTime()\n}\nfunction get_start_time(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    0,\n    0,\n    0,\n    0\n  )\n  return d.getTime()\n}\n\nfunction get_end_time(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    23,\n    59,\n    59,\n    999\n  )\n  return d.getTime()\n}*/\n// function get_datetime(str) {\n//   var res = str.split(/[-T.:\\s]+/)\n//   var d = new Date(\n//     parseInt(res[0]),\n//     parseInt(res[1]) - 1,\n//     parseInt(res[2]),\n//     parseInt(res[3]),\n//     parseInt(res[4]),\n//     0,\n//     0\n//   )\n//   return d.getTime()\n// }\nfunction itoStr($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\n</script>\n\n<style scoped>\n/* @import \"../assets/css/table.css\"; */\n@import \"../assets/css/divice.css\";\n@import \"../assets/css/setting_electronic_display.css\";\n\n.content_wrap .popup > div {\n  width: 80%;\n}\n</style>\n   \n  </div>\n</template>\n<script>\n//import config from \"../../config.js\"\nimport { mapState } from \"vuex\"\nexport default {\n  data() {\n    return {\n      resistIs:false,\n    //  modifyIs: true,\n      limit_visited_count: \"1\",\n      free_parking_time: \"60\",\n      resident_fee_app_equal: \"Y\",\n      resident_fee_ratio: \"100\",\n      contents: \"\",\n      time:\"\",\n      update_time:\"\",\n      resident_discoun_button_list: [\n        {value: true, text:\"유료 30분\"},\n        {value: true, text:\"유료 60분\"},\n        {value: true, text:\"유료 90분\"},\n        {value: true, text:\"유료 120분\"},\n        {value: true, text:\"유료 150분\"},\n        {value: true, text:\"유료 180분\"},\n        {value: true, text:\"유료 210분\"},\n        {value: true, text:\"유료 240분\"},\n        {value: true, text:\"유료 300분\"},\n        {value: true, text:\"유료 전액\"}\n      ],\n      app_list:[\n        {text: \"Y\"},\n        {text: \"N\"}\n      ],\n      limit_visited_count_list:[\n        {text: \"1\"},\n        {text: \"2\"},\n        {text: \"3\"},\n        {text: \"4\"},\n        {text: \"5\"}\n      ]\n      \n    }\n  },\n  computed:{\n    ...mapState([\"mainTitle\"])    \n  },\n  methods: {    \n    registOpen() {       \n      this.resistIs = true \n    },\n    registClose() {\n      this.resistIs = false\n    },\n    registNew(e) {////\n      this.registClose()\n      e.preventDefault()  \n      let obj = {}    \n      obj.kind = \"create_resident_policy_list\"\n      console.log(\"obj :\", obj)\n      this.sendMessage(obj)\n    },\n    resident_fun(data){\n      //console.log(\"data.docs.length : \", data.docs.length, data)\n      if(data.message === \"none\"){\n        let obj = {}\n        obj.resident_discoun_button_list =[]\n        obj.limit_visited_count = this.limit_visited_count\n        obj.free_parking_time = this.free_parking_time\n        obj.resident_fee_app_equal = this.resident_fee_app_equal\n        obj.resident_fee_ratio = this.resident_fee_ratio\n        obj.resident_discoun_button_list = this.resident_discoun_button_list\n        obj.contents = this.limit_visited_count\n        obj.time = Date.now()\n        obj.update = this.update_time\n        obj.kind = \"create_resident_policy_list\" \n        this.sendMessage(obj)\n      }\n      else{        \n        let obj1 = data.docs[0]\n        this.limit_visited_count = obj1.limit_visited_count\n        this.free_parking_time = obj1.free_parking_time\n        this.resident_fee_app_equal = obj1.resident_fee_app_equal\n        this.resident_fee_ratio = obj1.resident_fee_ratio\n        this.resident_discoun_button_list = obj1.resident_discoun_button_list\n        this.contents= obj1.contents\n        this.time = obj1.time\n        this.update_time = obj1.update_time\n      }\n    },\n    modifyVehicle() {\n      console.log(\"입주사 할인 정책 정보 수정\")\n      //this.modifyClose()\n      let obj = {}\n      obj.limit_visited_count = this.limit_visited_count\n      obj.free_parking_time = this.free_parking_time\n      obj.resident_fee_app_equal = this.resident_fee_app_equal\n      obj.resident_fee_ratio = this.resident_fee_ratio\n      obj.resident_discoun_button_list = this.resident_discoun_button_list\n      obj.contents = this.contents\n      obj.time = this.time\n      obj.update_time = Date.now()\n      obj.admin_id = window.localStorage.getItem(\"admin_id\")\n      obj.kind = \"update_resident_policy_list\"\n      console.log(\"obj :\", obj)\n      console.log(\"시간주차 정책 정보 수정 후 :\", obj)\n      this.sendMessage(obj)\n    },\n    search() {\n      var obj = {}\n      obj.kind = \"get_resident_policy_list\"\n      obj.id = window.localStorage.getItem(\"admin_id\")\n      obj.pw = window.localStorage.getItem(\"admin_pw\")\n      this.sendMessage(obj)\n    },\n    sendMessage(c) {\n      this.$socket.emit(\"message_from_web_client\", c)\n    },\n    start(){\n      this.search()\n    }\n  },\n  created() {\n    this.$socket.on(\"message_from_server\", data => {\n      if(data.kind === \"get_resident_policy_list\"){\n        this.resident_fun(data)\n      }\n      else if(data.kind === \"update__resident_policy_list\" || \n        data.kind === \"create__resident_policy_list\" \n      ){\n          this.search()\n      }     \n    }),\n     this.start()  \n    \n  }\n}\n/*\nfunction get_datetime(str) {\n  var res = str.split(/[-T.:\\s]+/)\n  var d = new Date(\n    parseInt(res[0]),\n    parseInt(res[1]) - 1,\n    parseInt(res[2]),\n    parseInt(res[3]),\n    parseInt(res[4]),\n    0,\n    0\n  )\n  return d.getTime()\n} */\n/*\nfunction format_time1(dat) {\n  var str = \"\"\n  str += dat.getFullYear()\n  str += \".\" + num_to_str(dat.getMonth() + 1)\n  str += \".\" + num_to_str(dat.getDate())\n  str += \". \" + num_to_str(dat.getHours())\n  str += \":\" + num_to_str(dat.getMinutes())\n  str += \":\" + num_to_str(dat.getSeconds())\n  return str\n}\nfunction num_to_str($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n} */\n</script>\n<style>\n</style>\n"]}]}