{"remainingRequest":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\src\\views\\live_vehicle_image.vue?vue&type=style&index=0&id=5229018f&scoped=true&lang=css&","dependencies":[{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\src\\views\\live_vehicle_image.vue","mtime":1592282118000},{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\NaverCloud\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICIuLi9hc3NldHMvY3NzL2xpdmVfdmVoaWNsZV9pbWFnZV9zdHlsZS5jc3MiOw0K"},{"version":3,"sources":["live_vehicle_image.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA","file":"live_vehicle_image.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"sub_wrap\">\r\n    <div class=\"breadcrumbs\">\r\n      <ul>\r\n        <router-link :to=\"{ name: 'sub2_1' }\"> <li>Home</li></router-link>\r\n        <li>운영기능</li>\r\n        <li>이미지촬영</li>\r\n      </ul>\r\n    </div>\r\n    <h1>이미지 촬영</h1>\r\n    <div class=\"contents-wrap\">\r\n      <h2>\r\n        <font-awesome-icon icon=\"camera\" style=\"color:#26a95e\" />※실시간으로\r\n        촬영되고 있는 영상입니다.\r\n      </h2>\r\n      <div class=\"screen-img_wrap\">\r\n        <div class=\"screen-img\">\r\n          <img :src=\"image_name\" alt=\"\" />\r\n        </div>\r\n        <div class=\"img-title\">{{ imageTitle }}</div>\r\n      </div>\r\n      <div class=\"screen-control\">\r\n        <ul>\r\n          <li\r\n            v-for=\"(v, index) in vehiclePicture\"\r\n            :key=\"index\"\r\n            :class=\"{ active: v.active }\"\r\n          >\r\n            <button @click=\"image_capture(v)\">\r\n              {{ v.location + \"_\" + v.direction + v.type }}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport config from \"../config.js\"\r\nexport default {\r\n  data() {\r\n    return {\r\n      vehiclePicture: [],\r\n      image_name: \"\",\r\n      imageTitle: \"\"\r\n    }\r\n  },\r\n  created() {\r\n    this.$socket.on(\"message_from_server\", data => {\r\n    //  console.log(\"data.kind : \", data.kind)\r\n      this.image_response(data)\r\n    }),\r\n      this.name_check()\r\n  },\r\n  methods: {\r\n    image_capture(c) {\r\n      this.vehiclePicture.forEach(imgShow => {\r\n        if (imgShow.active === true) {\r\n          // this.titleImg = imgShow.spot\r\n          imgShow.active = false\r\n        }\r\n      })\r\n      c.active = true\r\n      console.log(\"image_caspture : \", c)\r\n      let obj1 = {}\r\n      let direction = \"out\"\r\n      if (c.direction === \"in\") {\r\n        direction = \"in\"\r\n      }\r\n      obj1.direction = direction\r\n      obj1.kind = \"image_capture\"\r\n      obj1.camera_id = c.type\r\n      obj1.location = c.location\r\n      obj1.loop_event_time = Date.now()\r\n      console.log(\"image_capture req obj :\", obj1)\r\n      this.sendMessage(obj1)\r\n    },\r\n    name_check() {\r\n      this.vehiclePicture = []\r\n      for (let i = 0; i < config.ip_camera_list.length; i++) {\r\n        let obj = config.ip_camera_list[i]\r\n        obj.type = config.ip_camera_list[i].camera_id\r\n        this.vehiclePicture.push(obj)\r\n      }\r\n      // this.bar_policy_fun_all()\r\n    },\r\n    sendMessage(c) {\r\n      this.$socket.emit(\"message_from_web_client\", c)\r\n    },\r\n    image_response(data) {\r\n     \r\n      if (data.kind === \"capture_image\") {\r\n         console.log(\"data : \", data)\r\n        let direction = \"out\"\r\n        if (data.direction === \"in\") {\r\n          direction = \"in\"\r\n        }\r\n        this.image_name = config.image_src + data.folder_name + \"/\" + data.fname\r\n        this.imageTitle = data.location + \"_\" + direction + data.camera_id\r\n        console.log(\"this.imageTitle : \", this.imageTitle)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n@import \"../assets/css/live_vehicle_image_style.css\";\r\n</style>\r\n"]}]}