{"remainingRequest":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\src\\views\\resident_settlement.vue?vue&type=style&index=0&id=1eac3564&scoped=true&lang=css&","dependencies":[{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\src\\views\\resident_settlement.vue","mtime":1597881100000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\manned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICIuLi9hc3NldHMvY3NzL2RpdmljZS5jc3MiOw0KLmNvbnRlbnRfd3JhcCAucG9wdXAgPiBkaXYgew0KICB3aWR0aDogNDQlOw0KfQ0KLmNvbnRlbnRfd3JhcCAucG9wdXAgZGl2IGRpdiB7DQogIHBhZGRpbmc6IDEwcHggMTBweCAxMHB4Ow0KfQ0KLmxpc3QtaXRlbXMgLmxpc3Qtd3JhcCBsaSBzcGFuOmZpcnN0LWNoaWxkLA0KLmNvbnRlbnRfd3JhcCAucG9wdXAgLmNvbnRlbnRfcG9wdXAgdWwgew0KICB3aWR0aDogMTAwJTsNCn0NCi5jb250ZW50X3dyYXAgLnBvcHVwIC5jb250ZW50X3BvcHVwIHVsIGxpIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB3aWR0aDogMzMuMzMzMzMzJTsNCiAgcGFkZGluZzogMiUgMDsNCiAgZmxvYXQ6IGxlZnQ7DQp9DQovKiAuY29udGVudF93cmFwDQogIC5wb3B1cA0KICAuY29udGVudF9wb3B1cA0KICB1bA0KICBsaTpudGgtY2hpbGQobiArIDQpOm50aC1jaGlsZCgtbiArIDgpDQogIHNwYW4gew0KICBjb2xvcjogbWVkaXVtc2xhdGVibHVlOw0KfQ0KLmNvbnRlbnRfd3JhcCAucG9wdXAgLmNvbnRlbnRfcG9wdXAgdWwgbGk6bnRoLWNoaWxkKG4gKyA5KSBzcGFuIHsNCiAgY29sb3I6IGRhcmtvcmFuZ2U7DQp9ICovDQouY29udGVudF93cmFwIC5wb3B1cCAuY29udGVudF9wb3B1cCB1bCBsaS5jbGVhckZpeCB7DQogIGNsZWFyOiBib3RoOw0KfQ0KLmNvbnRlbnRfd3JhcCAucG9wdXAgZGl2IGRpdiBwIHsNCiAgZm9udC1zaXplOiAxNXB4Ow0KICBjb2xvcjogI2ZmZjsNCiAgYmFja2dyb3VuZDogIzc0NzVmZjsNCiAgbWFyZ2luOiA1JSAxJTsNCn0NCi5jb250ZW50X3dyYXAgLm1vZGlmeV9wb3AgYnV0dG9uLm1vZGlmeWJ0biB7DQogIHdpZHRoOiAxMDAlOw0KfQ0KLmNvbnRlbnRfd3JhcCAubWVudV90aXRsZSBidXR0b24uc2F2ZWJ0biB7DQogIG1hcmdpbi1sZWZ0OiBhdXRvOw0KfQ0KLmxpc3QtaXRlbXMgLmxpc3QtdGl0bGUgPiBsaTpmaXJzdC1jaGlsZCB7DQogIHdpZHRoOiAxMDAlOw0KfQ0KLmNvbnRlbnRfd3JhcCAucG9wdXAgYnV0dG9uLm1vZGlmeWJ0biB7DQogIGNvbG9yOiAjZmZmOw0KICBmb250LXNpemU6IDE4cHg7DQogIHdpZHRoOiAxMDAlOw0KICBiYWNrZ3JvdW5kOiAjMjlhOTVjOw0KICBtYXJnaW46IDE1cHggMCA1cHg7DQogIHBhZGRpbmc6IDVweCAwOw0KICBsaW5lLWhlaWdodDogbm9ybWFsOw0KfQ0KLmNvbnRlbnRfd3JhcCAubWVudV90aXRsZSBzcGFuLnNtYWxsX3RpdGxlIHsNCiAgaGVpZ2h0OiAxMDAlOw0KICBwYWRkaW5nOiAwcHggMThweDsNCn0NCi5jb250ZW50X3dyYXAgLm1lbnVfdGl0bGUgc2VsZWN0IHsNCiAgd2lkdGg6IDEwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBtYXJnaW4tbGVmdDogLTFweDsNCn0NCg=="},{"version":3,"sources":["resident_settlement.vue"],"names":[],"mappingswjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"resident_settlement.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"sub_wrap\">\r\n    <div class=\"breadcrumbs\">\r\n      <ul>\r\n        <router-link :to=\"{ name: 'live_vehicle' }\">\r\n          <li>Home</li>\r\n        </router-link>\r\n        <li>통계기능</li>\r\n        <li>입주사 정산</li>\r\n      </ul>\r\n    </div>\r\n    <h1>입주사 정산</h1>\r\n    <div class=\"content_wrap\">\r\n      <div class=\"menu_title\">\r\n        <form>\r\n          <span class=\"small_title\">연도</span>\r\n          <select v-model=\"searchYear\">\r\n            <option v-for=\"(y, index) in dateSelect.year\" v-bind:key=\"index\"\r\n              >{{ y.text }}\r\n            </option></select\r\n          >\r\n          <span class=\"small_title\">월</span>\r\n          <select v-model=\"searchMonth\">\r\n            <option v-for=\"(m, index) in dateSelect.month\" v-bind:key=\"index\"\r\n              >{{ m.text }}\r\n            </option></select\r\n          >\r\n          <button @click.prevent=\"search\" class=\"seach_confirm\">검색</button>\r\n          <button @click.prevent=\"download\" class=\"savebtn\">저장</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- 수정버튼 -->\r\n     <!--  <div class=\"modify_pop popup\" v-show=\"modifyIs\">\r\n        <div>\r\n          <h3>{{ current.date }}월 정산 내용</h3>\r\n          <button @click=\"modifyClose\">\r\n            <font-awesome-icon icon=\"times-circle\" />\r\n          </button>\r\n          <div class=\"content_popup\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  ID\r\n                </p>\r\n                <span>{{ current.residentId | currency }}</span>\r\n              </li>\r\n              <li>\r\n                <p>\r\n                  회사명\r\n                </p>\r\n                <span>{{ current.company | currency }}</span>\r\n              </li>\r\n              <li>\r\n                <p>\r\n                  유료건수\r\n                </p>\r\n                <span>{{ current.pay_length | currency }}건</span>\r\n              </li>\r\n              <li class=\"clearFix\">\r\n                <p>무료건수</p>\r\n                <span>{{ current.free_length | currency }}건</span>\r\n              </li>\r\n              <li>\r\n                <p>입주사 할인주차시간</p>\r\n                <span>{{ current.discounted_time | currency }}분</span>\r\n              </li>\r\n              <li>\r\n                <p>무료시간</p>\r\n                <span>{{ current.free_parking_time | currency }}분</span>\r\n              </li>\r\n            </ul>\r\n\r\n            <button @click.prevent=\"modifyVehicle\" class=\"modifybtn\">\r\n              저장\r\n            </button> \r\n          </div>\r\n        </div>\r\n      </div>-->\r\n      <div class=\"list-items\">\r\n        <div class=\"list-title\">\r\n          <li>\r\n            <span\r\n              >ID<button @click.prevent=\"item_residentId_click\">\r\n                <font-awesome-icon\r\n                  icon=\"caret-down\"\r\n                  v-if=\"sort_item.residentId\"\r\n                /><font-awesome-icon icon=\"caret-up\" v-else /></button\r\n            ></span>\r\n          </li>\r\n          <li>\r\n            <span\r\n              >회사명<button @click.prevent=\"item_company_click\">\r\n                <font-awesome-icon\r\n                  icon=\"caret-down\"\r\n                  v-if=\"sort_item.company\"\r\n                /><font-awesome-icon icon=\"caret-up\" v-else /></button\r\n            ></span>\r\n          </li>\r\n          <li>\r\n            <span\r\n              >유료건수(대)<button @click.prevent=\"item_pay_length_click\">\r\n                <font-awesome-icon\r\n                  icon=\"caret-down\"\r\n                  v-if=\"sort_item.pay_length\"\r\n                /><font-awesome-icon icon=\"caret-up\" v-else /></button\r\n            ></span>\r\n          </li>\r\n          <li>\r\n            <span\r\n              >무료건수(대)<button @click.prevent=\"item_free_length_click\">\r\n                <font-awesome-icon\r\n                  icon=\"caret-down\"\r\n                  v-if=\"sort_item.free_length\"\r\n                /><font-awesome-icon icon=\"caret-up\" v-else /></button\r\n            ></span>\r\n          </li>\r\n            <li>\r\n            <span\r\n              >할인주차시간(분)<button @click.prevent=\"item_discounted_time_length_click\">\r\n                <font-awesome-icon\r\n                  icon=\"caret-down\"\r\n                  v-if=\"sort_item.discounted_time_length\"\r\n                /><font-awesome-icon icon=\"caret-up\" v-else /></button\r\n            ></span>\r\n          </li>\r\n          <li>\r\n            <span\r\n              >무료시간(분)<button @click.prevent=\"item_free_parking_time_click\">\r\n                <font-awesome-icon\r\n                  icon=\"caret-down\"\r\n                  v-if=\"sort_item.free_parking_time\"\r\n                /><font-awesome-icon icon=\"caret-up\" v-else /></button\r\n            ></span>\r\n          </li>\r\n        </div>\r\n        <!-- 리스트 출력부분 -->\r\n        <!-- <spinners v-if=\"isLoading\" /> -->\r\n        <ul class=\"list-wrap\">\r\n          <li\r\n            v-for=\"(ad, index) in monthly_resident_fee_list\"\r\n            :key=\"index\"\r\n            @click=\"modifyOpen(ad)\"\r\n          >\r\n            <span class=\"count_vehicles\">\r\n              {{ ad.id}}\r\n            </span>\r\n            <span class=\"paid_fee\"> {{ ad.company }}</span>\r\n            <span class=\"discount_amount\"\r\n              >{{ ad.fee_vehicle | currency }}\r\n            </span>\r\n            <span class=\"calculate\"> {{ ad.free_vehicle | currency }} </span>\r\n            <span class=\"calculate\"> {{ ad.discounted_time | currency }} </span>\r\n            <span class=\"resident_fee\"> {{ ad.free_parking_time | currency }} </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport config from \"../config.js\"\r\nimport _ from \"underscore\"\r\nimport XLSX from \"xlsx\"\r\n// import spinners from \"../components/spinners\"\r\nexport default {\r\n  data: function() {\r\n    return {\r\n      dateSelect: {\r\n        year: [\r\n          { text: \"2020\" },\r\n          { text: \"2021\" },\r\n          { text: \"2022\" },\r\n          { text: \"2023\" },\r\n          { text: \"2024\" },\r\n          { text: \"2025\" },\r\n          { text: \"2026\" },\r\n          { text: \"2027\" },\r\n          { text: \"2028\" },\r\n          { text: \"2029 \"}\r\n        ],\r\n        month:[\r\n          { text: \"01\" },\r\n          { text: \"02\" },\r\n          { text: \"03\" },\r\n          { text: \"04\" },\r\n          { text: \"05\" },\r\n          { text: \"06\" },\r\n          { text: \"07\" },\r\n          { text: \"08\" },\r\n          { text: \"09\" },\r\n          { text: \"10\" },\r\n          { text: \"11\" },\r\n          { text: \"12\" }\r\n        ]\r\n      },\r\n      isLoading: false,\r\n      searchMonth: \"01\",\r\n      searchYear: \"2020\",\r\n      modifyIs: false,\r\n      resident_list: [],\r\n      monthly_resident_fee_list: [],\r\n      print_monthly_resident_fee_list: [],\r\n      current: {\r\n        date: \"\",\r\n        residentId: \"\",\r\n        fee: \"\",\r\n        discounted_fee: \"\",\r\n        paid_fee: \"\",\r\n        discounted_time: 0,\r\n        resident_fee: \"\"\r\n      },\r\n      sort_item: {\r\n        date: false,\r\n        total_vehicle_obj_list: false,\r\n        company: false,\r\n        pay_length: false,\r\n        free_length: false,\r\n        discounted_length: false,\r\n        discounted_time: false,\r\n        free_parking_time: false,\r\n        charge: false\r\n      }\r\n    }\r\n  },\r\n  filters: {\r\n    currency: function(value) {\r\n      var num = new Number(value)\r\n      return num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\r\n    }\r\n  },\r\n  created() {\r\n    // this.isLoading = true\r\n    this.$socket.on(\"message_from_server\", data => {\r\n      //   console.log(\"data.kind : \", data.kind)\r\n      // this.isLoading = false\r\n      if (data.kind === \"get_monthly_resident_fee_list\") {\r\n        this. monthly_resident_fee_list_query(data)\r\n      }\r\n      else if(data.kind === \"get_resident_list\"){\r\n        this.get_resident_list_query(data)\r\n      }\r\n    }),\r\n    this.start() \r\n  },\r\n  components: {\r\n    // spinners\r\n  },\r\n  methods: {\r\n    search() {\r\n      let month = this.searchYear + \".\" + this.searchMonth\r\n     // month = \"2020.06\"\r\n      let start_time_text = month + \".01.00:00:00\"\r\n      let end_time_text = format_time1(\r\n        new Date(get_datetime_month_addone(month))\r\n      )\r\n      console.log(\r\n        \"start_time_text : \",\r\n        start_time_text,\r\n        \" end_time_text :\",\r\n        end_time_text\r\n      )\r\n      let start_time = get_start_time(start_time_text)\r\n      let end_time = get_end_time(end_time_text)\r\n      console.log(\r\n        start_time,\r\n        end_time,\r\n        format_time1(new Date(start_time)),\r\n        format_time1(new Date(end_time))\r\n      )\r\n      let obj = {}\r\n      obj.kind = \"get_monthly_resident_fee_list\"\r\n      obj.start_time = start_time\r\n      obj.end_time = end_time\r\n      this.sendMessage(obj)\r\n    },\r\n    get_resident_list_query(data){\r\n      this.resident_list = []\r\n      for(let i = 0; i < data.docs.length; i++){\r\n        this.resident_list.push(data.docs[i])\r\n      }      \r\n    },\r\n    monthly_resident_fee_list_query(data) {\r\n      console.log(\"data :\", data)\r\n     // console.log(\"resident : \", data.docs[0].resident[0][0].id)\r\n      this.monthly_resident_fee_list = []\r\n      this.print_monthly_resident_fee_list =[]\r\n      let yy_mm_dd = data.docs[0].yy_mm_dd\r\n     for (let i = 0; i < data.docs[0].discounted_info_list.length; i++) {\r\n        let resident_obj ={};\r\n        let obj = data.docs[0].discounted_info_list[i]        \r\n        resident_obj.yy_mm_dd = yy_mm_dd\r\n        resident_obj.id = obj.id\r\n        resident_obj.company = obj.company\r\n        resident_obj.free_vehicle = obj.free_vehicle\r\n        resident_obj.fee_vehicle = obj.fee_vehicle\r\n\r\n        // obj.date = yy_mm\r\n        if (obj.resident_discounted_time_original) {\r\n          resident_obj.discounted_time = Math.ceil(obj.resident_discounted_time_original /(60 * 1000))\r\n          resident_obj.resident_discounted_time_original = obj.resident_discounted_time_original\r\n        } else {\r\n          resident_obj.discounted_time = 0\r\n          resident_obj.resident_discounted_time_original = 0\r\n        }\r\n        for(let i = 0; i < this.resident_list.length; i++){\r\n          if(this.resident_list[i].id === obj.id){\r\n              resident_obj.free_parking_time = (parseInt(this.resident_list[i].contents, 10)) * 30\r\n             break\r\n          }\r\n        }   \r\n\r\n        console.log(\r\n          \"resident : \",\r\n          resident_obj\r\n        )\r\n        resident_obj.date = format_time3(new Date(yy_mm_dd))\r\n        this.monthly_resident_fee_list.push(resident_obj)        \r\n     }\r\n     \r\n      for(let k = 0; k <  this.monthly_resident_fee_list.length; k++){\r\n        let print ={}\r\n        print.년월 = this.searchYear + \"_\" + this.searchMonth\r\n        print.입주사ID = this.monthly_resident_fee_list[k].id\r\n        print.회사명 = this.monthly_resident_fee_list[k].company\r\n        print.유료건수 = this.monthly_resident_fee_list[k].free_vehicle\r\n        print.무료건수 = this.monthly_resident_fee_list[k].fee_vehicle\r\n        print.할인주차시간 = this.monthly_resident_fee_list[k].discounted_time\r\n        print.무료주차시간 = this.monthly_resident_fee_list[k].free_parking_time\r\n        this.print_monthly_resident_fee_list.push(print)\r\n      }\r\n    },\r\n    sendMessage(c) {\r\n      this.$socket.emit(\"message_from_web_client\", c)\r\n    },\r\n    modifyOpen(c) {\r\n      this.modifyIs = true\r\n      this.current.date = c.date\r\n      this.current.total_vehicle_obj_list = c.total_vehicle_obj_list\r\n      this.current.fee = c.fee\r\n      this.current.discounted_fee = c.discounted_fee\r\n      this.current.paid_fee = c.paid_fee\r\n      this.current.discounted_time = c.discounted_time\r\n      this.current.resident_fee = c.resident_fee\r\n      this.current.in_vehicle_obj_list_length = c.in_vehicle_obj_list_length\r\n      this.current.pay_length = c.pay_length\r\n      this.current.not_recg_vehicle_obj_list_length =\r\n        c.not_recg_vehicle_obj_list_length\r\n      this.current.registered_vehicle_obj_list_length =\r\n        c.registered_vehicle_obj_list_length\r\n      this.current.reserved_visit_vehicle_obj_list_length =\r\n        c.reserved_visit_vehicle_obj_list_length\r\n      this.current.visited_vehicle_obj_list_length =\r\n        c.visited_vehicle_obj_list_length\r\n      this.current.black_vehicle_obj_list_length =\r\n        c.black_vehicle_obj_list_length\r\n      this.current.general_vehicle_obj_list_length =\r\n        c.general_vehicle_obj_list_length\r\n      this.current.kind = c.kind\r\n      console.log(\"c : \", c.lp)\r\n      console.log(\"this : \", this)\r\n    },\r\n    modifyClose() {\r\n      this.modifyIs = false\r\n    },\r\n    item_date_click: function() {\r\n      console.log(\"date sort\")\r\n      let temp10 = []\r\n      if (this.sort_item.date === false) {\r\n        console.log(\"date sort1\")\r\n        this.sort_item.date = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"date\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        console.log(\"date sort2\")\r\n        this.sort_item.date = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"date\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    item_residentId_click: function() {\r\n      console.log(\"total_vehicle_obj_list sort\")\r\n      let temp10 = []\r\n      if (this.sort_item.residentId === false) {\r\n        this.sort_item.residentId = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"id\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        this.sort_item.residentId = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"id\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    item_company_click: function() {\r\n      console.log(\"company_ sort\")\r\n      let temp10 = []\r\n      if (this.sort_item.company === false) {\r\n        this.sort_item.company = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"company\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        this.sort_item.company = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"company\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    item_pay_length_click: function() {\r\n      let temp10 = []\r\n      if (this.sort_item.pay_length === false) {\r\n        this.sort_item.pay_length = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"pay_length\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        this.sort_item.pay_length = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"pay_length\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    item_free_length_click: function() {\r\n      let temp10 = []\r\n      if (this.sort_item.free_length === false) {\r\n        this.sort_item.free_length = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"free_length\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        this.sort_item.free_length = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"free_length\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    item_discounted_time_length_click: function() {\r\n      let temp10 = []\r\n      if (this.sort_item.discounted_time_length === false) {\r\n        this.sort_item.discounted_length = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"discounted_time\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        this.sort_item.discounted_time_length = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"discounted_time\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    item_free_parking_time_click: function() {\r\n      let temp10 = []\r\n      if (this.sort_item.free_parking_time === false) {\r\n        this.sort_item.free_parking_time = true\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"free_parking_time\")\r\n        temp10.reverse()\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      } else {\r\n        this.sort_item.free_parking_time = false\r\n        temp10 = _.sortBy(this.monthly_resident_fee_list, \"free_parking_time\")\r\n        return (this.monthly_resident_fee_list = temp10)\r\n      }\r\n    },\r\n    start(){\r\n      let obj = {}\r\n      obj.kind = \"get_resident_list\"\r\n      this.sendMessage(obj)\r\n    },\r\n    download: function() {\r\n      let dt = new Date()\r\n      let year = itoStr(dt.getFullYear())\r\n      let month = itoStr(dt.getMonth() + 1)\r\n      let day = itoStr(dt.getDate())\r\n      let hour = itoStr(dt.getHours())\r\n      let mins = itoStr(dt.getMinutes())\r\n      let postfix = year + \"_\" + month + \"_\" + day + \"_\" + hour + \"_\" + mins\r\n      const data = XLSX.utils.json_to_sheet(this.print_monthly_resident_fee_list)\r\n      const wb = XLSX.utils.book_new()\r\n      XLSX.utils.book_append_sheet(wb, data, \"data\")\r\n      XLSX.writeFile(\r\n        wb,\r\n        config.parking_name + \"_ 입주사 정산리스트_\" + postfix + \".xlsx\"\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction format_time1(dat) {\r\n  var str = \"\"\r\n  str += dat.getFullYear()\r\n  str += \".\" + num_to_str(dat.getMonth() + 1)\r\n  str += \".\" + num_to_str(dat.getDate())\r\n  str += \". \" + num_to_str(dat.getHours())\r\n  str += \":\" + num_to_str(dat.getMinutes())\r\n  str += \":\" + num_to_str(dat.getSeconds())\r\n  return str\r\n}\r\n/*\r\nfunction format_time2(dat) {\r\n  var str = \"\"\r\n  str += dat.getFullYear()\r\n  str += \".\" + num_to_str(dat.getMonth() + 1)\r\n  str += \".\" + num_to_str(dat.getDate())\r\n  return str\r\n} */\r\nfunction format_time3(dat) {\r\n  var str = \"\"\r\n  str += dat.getFullYear()\r\n  str += \".\" + num_to_str(dat.getMonth() + 1)\r\n  return str\r\n}\r\nfunction num_to_str($num) {\r\n  $num < 10 ? ($num = \"0\" + $num) : $num\r\n  return $num.toString()\r\n}\r\n\r\nfunction get_datetime_month_addone(str) {\r\n  var res = str.split(/[-T.:\\s]+/)\r\n  var d = new Date(parseInt(res[0]), parseInt(res[1]), 0, 0, 0, 0, 0)\r\n  return d.getTime()\r\n}\r\n\r\nfunction get_start_time(str) {\r\n  var res = str.split(/[-T.:\\s]+/)\r\n  var d = new Date(\r\n    parseInt(res[0]),\r\n    parseInt(res[1]) - 1,\r\n    parseInt(res[2]),\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  )\r\n  return d.getTime()\r\n}\r\n\r\nfunction get_end_time(str) {\r\n  var res = str.split(/[-T.:\\s]+/)\r\n  var d = new Date(\r\n    parseInt(res[0]),\r\n    parseInt(res[1]) - 1,\r\n    parseInt(res[2]),\r\n    23,\r\n    59,\r\n    59,\r\n    999\r\n  )\r\n  return d.getTime()\r\n}\r\n// function get_datetime(str) {\r\n//   var res = str.split(/[-T.:\\s]+/)\r\n//   var d = new Date(\r\n//     parseInt(res[0]),\r\n//     parseInt(res[1]) - 1,\r\n//     parseInt(res[2]),\r\n//     parseInt(res[3]),\r\n//     parseInt(res[4]),\r\n//     0,\r\n//     0\r\n//   )\r\n//   return d.getTime()\r\n// }\r\nfunction itoStr($num) {\r\n  $num < 10 ? ($num = \"0\" + $num) : $num\r\n  return $num.toString()\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../assets/css/divice.css\";\r\n.content_wrap .popup > div {\r\n  width: 44%;\r\n}\r\n.content_wrap .popup div div {\r\n  padding: 10px 10px 10px;\r\n}\r\n.list-items .list-wrap li span:first-child,\r\n.content_wrap .popup .content_popup ul {\r\n  width: 100%;\r\n}\r\n.content_wrap .popup .content_popup ul li {\r\n  text-align: center;\r\n  width: 33.333333%;\r\n  padding: 2% 0;\r\n  float: left;\r\n}\r\n/* .content_wrap\r\n  .popup\r\n  .content_popup\r\n  ul\r\n  li:nth-child(n + 4):nth-child(-n + 8)\r\n  span {\r\n  color: mediumslateblue;\r\n}\r\n.content_wrap .popup .content_popup ul li:nth-child(n + 9) span {\r\n  color: darkorange;\r\n} */\r\n.content_wrap .popup .content_popup ul li.clearFix {\r\n  clear: both;\r\n}\r\n.content_wrap .popup div div p {\r\n  font-size: 15px;\r\n  color: #fff;\r\n  background: #7475ff;\r\n  margin: 5% 1%;\r\n}\r\n.content_wrap .modify_pop button.modifybtn {\r\n  width: 100%;\r\n}\r\n.content_wrap .menu_title button.savebtn {\r\n  margin-left: auto;\r\n}\r\n.list-items .list-title > li:first-child {\r\n  width: 100%;\r\n}\r\n.content_wrap .popup button.modifybtn {\r\n  color: #fff;\r\n  font-size: 18px;\r\n  width: 100%;\r\n  background: #29a95c;\r\n  margin: 15px 0 5px;\r\n  padding: 5px 0;\r\n  line-height: normal;\r\n}\r\n.content_wrap .menu_title span.small_title {\r\n  height: 100%;\r\n  padding: 0px 18px;\r\n}\r\n.content_wrap .menu_title select {\r\n  width: 10%;\r\n  height: 100%;\r\n  margin-left: -1px;\r\n}\r\n</style>\r\n"]}]}