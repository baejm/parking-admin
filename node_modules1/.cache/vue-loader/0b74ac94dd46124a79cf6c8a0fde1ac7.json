{"remainingRequest":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\src\\components\\operatingFunc\\noticeCalculationSta.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\src\\components\\operatingFunc\\noticeCalculationSta.vue","mtime":1606463007049},{"path":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\OneDrive\\bae\\unmanned_parking\\02_ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCIKaW1wb3J0IFhMU1ggZnJvbSAieGxzeCIKaW1wb3J0IGNvbmZpZyBmcm9tICIuLi8uLi9jb25maWcuanMiCi8vIGltcG9ydCBzcGlubmVycyBmcm9tICIuLi9jb21wb25lbnRzL3NwaW5uZXJzIgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBjb250ZW50czogW10sCiAgICAgIHJlZzogeyAgICAgCiAgICAgICAgY2hlY2tlZDogZmFsc2UsCiAgICAgICAgbG9jYXRpb246ICIiLAogICAgICAgIHRleHQ6ICIiCiAgICAgIH0sCiAgICAgIGFkbWluOiB7CiAgICAgICAgY2hlY2tlZDogZmFsc2UsCiAgICAgICAgbG9jYXRpb246ICIiLAogICAgICAgIHRleHQ6ICIiCiAgICAgIH0sCiAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgIHNlYXJjaExvY2F0aW9uOiAiIiwKICAgICAgbW9kaWZ5SXM6IGZhbHNlLAogICAgICByZXNpc3RJczogZmFsc2UsCiAgICAgIGxvY2F0aW9uX2xpc3Q6W10sCiAgICAgIGFubm91bmNlX2xpc3Q6IFtdLAogICAgICBjdXJyZW50OiB7CiAgICAgICAKICAgICAgfSwKICAgICAKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIGN1cnJlbmN5OiBmdW5jdGlvbih2YWx1ZSkgewogICAgICB2YXIgbnVtID0gbmV3IE51bWJlcih2YWx1ZSkKICAgICAgcmV0dXJuIG51bS50b0ZpeGVkKDApLnJlcGxhY2UoLyhcZCkoPz0oXGR7M30pKyg/OlwuXGQrKT8kKS9nLCAiJDEsIikKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvLyB0aGlzLmlzTG9hZGluZyA9IHRydWUKICAgIHRoaXMuJHNvY2tldC5vbigibWVzc2FnZV9mcm9tX3NlcnZlciIsIGRhdGEgPT4gewogICAgICAvLyAgIGNvbnNvbGUubG9nKCJkYXRhLmtpbmQgOiAiLCBkYXRhLmtpbmQpCiAgICAgIC8vIHRoaXMuaXNMb2FkaW5nID0gZmFsc2UKICAgICAgaWYgKGRhdGEua2luZCA9PT0gImdldF9hbm5vdW5jZV9saXN0IikgewogICAgICAgIHRoaXMuYW5ub3VuY2VfbGlzdF9xdWVyeShkYXRhKQogICAgICB9IGVsc2UgaWYgKAogICAgICAgIGRhdGEua2luZCA9PT0gImNyZWF0ZV9hbm5vdW5jZV9saXN0IiB8fAogICAgICAgIGRhdGEua2luZCA9PT0gInVwZGF0ZV9hbm5vdW5jZV9saXN0IiB8fAogICAgICAgIGRhdGEua2luZCA9PT0gImRlbGV0ZV9hbm5vdW5jZV9saXN0IgogICAgICApIHsKICAgICAgICB0aGlzLnNlYXJjaDEoKQogICAgICB9CiAgICB9KSwKICAgICAgdGhpcy5sb2MoKSwKICAgICAgdGhpcy5zZWFyY2gxKCkKICAgICAgdGhpcy5jaGFuZ2VUaXRsZSAoKQogIH0sCiAgY29tcHV0ZWQ6ewogICAgLi4ubWFwU3RhdGUoWyJtYWluVGl0bGUiXSkgICAgCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAvLyBzcGlubmVycwogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlVGl0bGUoKXsgICAgICAKICAgICAgdGhpcy5tYWluVGl0bGUuZm9yRWFjaCh0aXRsZSA9PnsKICAgICAgIHRpdGxlLnN1Yk1lbnUuZm9yRWFjaCggYWRkPT4gewogICAgICAgICBpZihhZGQuYWRkPT09J25vdGljZUNhbGN1bGF0aW9uU3RhJykgdGhpcy50aXRsZXMgPSBhZGQudGl0bGUKICAgICAgIH0pCiAgICAgIH0pCiAgICB9LAogICAgcmVnaXN0T3BlbigpIHsKICAgICAgdGhpcy5yZXNpc3RJcyA9IHRydWUKICAgIH0sCiAgICByZWdpc3RDbG9zZSgpIHsKICAgICAgdGhpcy5yZXNpc3RJcyA9IGZhbHNlCiAgICB9LAogICAgcmVnaXN0TmV3KGUpIHsKICAgICAgdGhpcy5yZWdpc3RDbG9zZSgpCiAgICAgIGUucHJldmVudERlZmF1bHQoKQogICAgICBjb25zb2xlLmxvZygidGhpcy5hZG1pbiA6ICIsIHRoaXMpCiAgICAgIGxldCBvYmogPSB7fQogICAgICBvYmoua2luZCA9ICJjcmVhdGVfYW5ub3VuY2VfbGlzdCIKICAgICAgb2JqLnRleHQgPSB0aGlzLnJlZy50ZXh0CiAgICAgIG9iai5sb2NhdGlvbiA9IHRoaXMucmVnLmxvY2F0aW9uCiAgICAgIG9iai50aW1lID0gRGF0ZS5ub3coKQogICAgICBvYmouY2hlY2tlZCA9IHRoaXMucmVnLmNoZWNrZWQKICAgICAgY29uc29sZS5sb2coIuqzteyngOyCrO2VrSDrk7HroZ0gOiAiLCBvYmopCiAgICAgIHRoaXMuc2VuZE1lc3NhZ2Uob2JqKQogICAgfSwKICAgIG1vZGlmeVZlaGljbGUoKSB7CiAgICAgIHRoaXMubW9kaWZ5Q2xvc2UoKQogICAgICBsZXQgb2JqID0ge30KICAgICAgb2JqLmtpbmQgPSAidXBkYXRlX2Fubm91bmNlX2xpc3QiCiAgICAgIG9iai50ZXh0ID0gdGhpcy5jdXJyZW50LnRleHQKICAgICAgb2JqLmxvY2F0aW9uID0gdGhpcy5jdXJyZW50LmxvY2F0aW9uCiAgICAgIG9iai50aW1lID0gRGF0ZS5ub3coKQogICAgICBvYmouY2hlY2tlZCA9IHRoaXMuY3VycmVudC5jaGVja2VkCiAgICAgIGNvbnNvbGUubG9nKCLqs7Xsp4Dsgqztla0g7IiY7KCVIDoiLCBvYmopCiAgICAgIHRoaXMuc2VuZE1lc3NhZ2Uob2JqKQogICAgfSwKICAgIGRlbGV0ZVZlaGljbGUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCLqs7Xsp4Dsgqztla0g7IKt7KCcIikKICAgICAgdGhpcy5tb2RpZnlDbG9zZSgpCiAgICAgIGxldCBvYmogPSB7fSAgICAgIAogICAgICBvYmoudGV4dCA9IHRoaXMuY3VycmVudC50ZXh0CiAgICAgIG9iai5sb2NhdGlvbiA9IHRoaXMuY3VycmVudC5sb2NhdGlvbgogICAgICBvYmoudGltZSA9IERhdGUubm93KCkKICAgICAgb2JqLmNoZWNrZWQgPSB0aGlzLmN1cnJlbnQuY2hlY2tlZAogICAgICBvYmoua2luZCA9ICJkZWxldGVfYW5ub3VuY2VfbGlzdCIKICAgICAgY29uc29sZS5sb2coIuqzteyngOyCrO2VrSDsgq3soJwgOiAiLCBvYmopCiAgICAgIHRoaXMuc2VuZE1lc3NhZ2Uob2JqKQogICAgfSwKICAgIHNlYXJjaDEoKSB7CiAgICAgIGxldCBvYmoxID0ge30KICAgICAgb2JqMS5raW5kID0gImdldF9hbm5vdW5jZV9saXN0IgogICAgICB0aGlzLnNlbmRNZXNzYWdlKG9iajEpCiAgICB9LAogICAgc2VhcmNoKCkgewogICAgICBjb25zb2xlLmxvZygi6rKA7IOJIOuyhO2KvOydhCDriIzroIDsirXri4jri6QuIikKICAgICAgbGV0IG9iaiA9IHt9CiAgICAgIG9iai5raW5kID0gImdldF9hbm5vdW5jZV9saXN0IgogICAgICB0aGlzLnNlbmRNZXNzYWdlKG9iaikKICAgIH0sCiAgICBsb2MoKSB7CiAgICAgIHRoaXMubG9jYXRpb25fbGlzdD0gW10KICAgICAKICAgICAgZm9yKGxldCBpID0gMDsgaSA8ICBjb25maWcubWFubmVkX3BhcmtpbmdfbGlzdC5sZW5ndGg7IGkrKyl7CiAgICAgICAgbGV0IG9iaiA9IHt9CiAgICAgICAgb2JqLmxvY2F0aW9uID0gY29uZmlnLm1hbm5lZF9wYXJraW5nX2xpc3RbaV0ubG9jYXRpb24KICAgICAgICB0aGlzLmxvY2F0aW9uX2xpc3QucHVzaChvYmopCiAgICAgIH0KICAgICAKICAgIH0sCiAgICBhbm5vdW5jZV9saXN0X3F1ZXJ5KGRhdGEpIHsKICAgICAgLy8gdGhpcy5kYWlseV9zdGF0X2xpc3QgPSBbXQogICAgICB0aGlzLmFubm91bmNlX2xpc3QgPSBbXQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEuZG9jcy5sZW5ndGg7IGkrKykgewogICAgICAgIGxldCBvYmogPSB7fQogICAgICAgIG9iai50ZXh0ID0gZGF0YS5kb2NzW2ldLnRleHQKICAgICAgICBvYmoubG9jYXRpb24gPSBkYXRhLmRvY3NbaV0ubG9jYXRpb24KICAgICAgICBvYmoudGltZSA9IGRhdGEuZG9jc1tpXS50aW1lCiAgICAgICAgb2JqLmNoZWNrZWQgPSBkYXRhLmRvY3NbaV0uY2hlY2tlZAogICAgICAgIHRoaXMuYW5ub3VuY2VfbGlzdC5wdXNoKG9iaikKICAgICAgICAvLyBsZXQgb2JqID0gZGF0YS5kb2NzW2ldLmRhaWx5X3N0YXRfbGlzdAogICAgICAgIGNvbnNvbGUubG9nKG9iaikKICAgICAgICAvLyBvYmouZGF0ZSA9IGZvcm1hdF90aW1lMihuZXcgRGF0ZShvYmouZGF5X2xvb3BfZXZlbnRfdGltZSkpCiAgICAgICAgLy8gdGhpcy5kYWlseV9zdGF0X2xpc3QucHVzaChvYmopCiAgICAgIH0KICAgIH0sCiAgICBzZW5kTWVzc2FnZShjKSB7CiAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCJtZXNzYWdlX2Zyb21fd2ViX2NsaWVudCIsIGMpCiAgICB9LAogICAgbW9kaWZ5T3BlbihjKSB7CiAgICAgIHRoaXMubW9kaWZ5SXMgPSB0cnVlCiAgICAgIHRoaXMuY3VycmVudC5sb2NhdGlvbiA9IGMubG9jYXRpb24KICAgICAgdGhpcy5jdXJyZW50LnRleHQgPSBjLnRleHQKICAgICAgdGhpcy5jdXJyZW50LmNoZWNrZWQgPSBjLmNoZWNrZWQKICAgICAgY29uc29sZS5sb2coInRoaXMgOiAiLCB0aGlzKQogICAgfSwKICAgIG1vZGlmeUNsb3NlKCkgewogICAgICB0aGlzLm1vZGlmeUlzID0gZmFsc2UKICAgIH0sCiAgICAKICAgIGRvd25sb2FkOiBmdW5jdGlvbigpIHsKICAgICAgbGV0IGR0ID0gbmV3IERhdGUoKQogICAgICBsZXQgeWVhciA9IGl0b1N0cihkdC5nZXRGdWxsWWVhcigpKQogICAgICBsZXQgbW9udGggPSBpdG9TdHIoZHQuZ2V0TW9udGgoKSArIDEpCiAgICAgIGxldCBkYXkgPSBpdG9TdHIoZHQuZ2V0RGF0ZSgpKQogICAgICBsZXQgaG91ciA9IGl0b1N0cihkdC5nZXRIb3VycygpKQogICAgICBsZXQgbWlucyA9IGl0b1N0cihkdC5nZXRNaW51dGVzKCkpCiAgICAgIGxldCBwb3N0Zml4ID0geWVhciArICJfIiArIG1vbnRoICsgIl8iICsgZGF5ICsgIl8iICsgaG91ciArICJfIiArIG1pbnMKICAgICAgY29uc3QgZGF0YSA9IFhMU1gudXRpbHMuanNvbl90b19zaGVldCh0aGlzLmRhaWx5X3N0YXRfbGlzdCkKICAgICAgY29uc3Qgd2IgPSBYTFNYLnV0aWxzLmJvb2tfbmV3KCkKICAgICAgWExTWC51dGlscy5ib29rX2FwcGVuZF9zaGVldCh3YiwgZGF0YSwgImRhdGEiKQogICAgICBYTFNYLndyaXRlRmlsZSgKICAgICAgICB3YiwKICAgICAgICAi7ZWY7YWM7YGs64W47YOA7Jq07KO87LCo7J6lX+qzteyngOyCrO2VrV8iICsgcG9zdGZpeCArICIueGxzeCIKICAgICAgKQogICAgfQogIH0KfQpmdW5jdGlvbiBpdG9TdHIoJG51bSkgewogICRudW0gPCAxMCA/ICgkbnVtID0gIjAiICsgJG51bSkgOiAkbnVtCiAgcmV0dXJuICRudW0udG9TdHJpbmcoKQp9Cg=="},{"version":3,"sources":["noticeCalculationSta.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"noticeCalculationSta.vue","sourceRoot":"src/components/operatingFunc","sourcesContent":["<template>\n  <div class=\"report_wrap notice\">\n     <!-- 등록내용 -->\n      <div class=\"resist_pop popup notice_text\" v-show=\"resistIs\" :class=\"{column_1:Object.keys(this.reg).length < 8}\">\n        <div>\n          <h3>{{titles}} 등록</h3>\n          <button @click=\"registClose\" class=\"pop_close\">\n            <font-awesome-icon icon=\"window-close\" />\n          </button>\n          <div class=\"form_window\">\n            <form>           \n            <dl>\n              <dt>장소</dt>\n              <dd>\n              <select v-model=\"reg.location\">\n                <option disabled value=\"\">선택해 주세요</option>\n                <option\n                  v-for=\"(location, index) in location_list\"\n                  v-bind:key=\"index\"\n                >\n                  {{ location.location}}\n                </option>\n              </select>\n              </dd>\n            </dl>           \n            <dl>\n              <dt>공지사항 내용\n                <p class=\"tooltip\">\n                    <font-awesome-icon icon=\"exclamation-circle\" /><span\n                      class=\"tooltip-content\"\n                    >                 \n                    </span>\n                  </p> \n                </dt>              \n                <dd>                \n                  <input\n                    type=\"text\"\n                    placeholder=\"문구를 입력하세요.\"\n                    maxlength=\"50\"\n                    v-model=\"reg.text\"\n                  />                                   \n                </dd> \n            </dl>\n             <div class=\"btns\">\n          <button @click.prevent=\"registNew\">등록</button>\n          </div>\n            </form>\n          </div>         \n        </div>\n      </div>\n      <!-- 수정내용 -->\n      <div class=\"modify_pop popup notice_text\" v-show=\"modifyIs\"  :class=\"{column_1:Object.keys(this.current).length < 8}\">\n        <div>\n          <h3>{{titles}} 수정</h3>\n          <button @click=\"modifyClose\" class=\"pop_close\">\n            <font-awesome-icon icon=\"window-close\" />\n          </button>\n          <div class=\"form_window\">\n            <form>\n            <dl>\n              <dt>장소</dt>\n              <dd>\n                {{ current.location }}\n              </dd>\n            </dl>           \n            <dl>\n              <dt>공지사항 내용\n                <p class=\"tooltip\">\n                    <font-awesome-icon icon=\"exclamation-circle\" /><span\n                      class=\"tooltip-content\"\n                    >                 \n                    </span>\n                  </p> \n              </dt>\n                  <dd>\n                  <input\n                    type=\"text\"\n                    placeholder=\"문구를 입력하세요.\"\n                    maxlength=\"50\"\n                    v-model=\"current.text\"\n                  />\n                  </dd>                \n            </dl>\n            </form> \n            <div class=\"btns\">\n          <button @click.prevent=\"modifyVehicle\" class=\"modifybtn\">\n            수정\n          </button>\n          <button @click.prevent=\"deleteVehicle\" class=\"deletebtn\">\n            삭제\n          </button>\n          </div>           \n          </div>          \n        </div>\n      </div>\n    <div class=\"title\">\n      <h2>{{titles}}</h2>\n    </div>\n     \n      <div class=\"list-items content_single\">\n        <div class=\"writeRecord\">\n     <button @click.prevent=\"registOpen\" class=\"register_btn\"> <font-awesome-icon icon=\"file-signature\" />등록\n       </button>\n       <button @click.prevent=\"download\" class=\"save_btn\"><font-awesome-icon icon=\"save\" />저장</button>     \n    </div>\n        <div class=\"list-title\">\n          <li>\n            <span\n              >적용중</span>\n          </li>\n          <li>\n            <span>위치</span>\n          </li>\n          <li>\n            <span>문구</span>\n          </li>\n         \n        </div>\n        <!-- 리스트 출력부분 -->\n        <!-- <spinners v-if=\"isLoading\" /> -->\n        <ul class=\"list-wrap\">\n          <li\n            v-for=\"(c, index) in announce_list\"\n            :key=\"index\"          \n          >\n            <span class=\"index\">\n              <label><input type=\"checkbox\" v-model=\"c.checked\"/></label>\n            </span>\n            <span class=\"count_vehicles\"  @click=\"modifyOpen(c)\">\n              {{ c.location }}\n            </span>            \n            <span class=\"discount_amount\"  @click=\"modifyOpen(c)\">\n              {{ c.text }} \n            </span>           \n          </li>\n        </ul>\n      </div>\n   \n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\"\nimport XLSX from \"xlsx\"\nimport config from \"../../config.js\"\n// import spinners from \"../components/spinners\"\nexport default {\n  data: function() {\n    return {\n      contents: [],\n      reg: {     \n        checked: false,\n        location: \"\",\n        text: \"\"\n      },\n      admin: {\n        checked: false,\n        location: \"\",\n        text: \"\"\n      },\n      isLoading: false,\n      searchLocation: \"\",\n      modifyIs: false,\n      resistIs: false,\n      location_list:[],\n      announce_list: [],\n      current: {\n       \n      },\n     \n    }\n  },\n  filters: {\n    currency: function(value) {\n      var num = new Number(value)\n      return num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\n    }\n  },\n  created() {\n    // this.isLoading = true\n    this.$socket.on(\"message_from_server\", data => {\n      //   console.log(\"data.kind : \", data.kind)\n      // this.isLoading = false\n      if (data.kind === \"get_announce_list\") {\n        this.announce_list_query(data)\n      } else if (\n        data.kind === \"create_announce_list\" ||\n        data.kind === \"update_announce_list\" ||\n        data.kind === \"delete_announce_list\"\n      ) {\n        this.search1()\n      }\n    }),\n      this.loc(),\n      this.search1()\n      this.changeTitle ()\n  },\n  computed:{\n    ...mapState([\"mainTitle\"])    \n  },\n  components: {\n    // spinners\n  },\n  methods: {\n    changeTitle(){      \n      this.mainTitle.forEach(title =>{\n       title.subMenu.forEach( add=> {\n         if(add.add==='noticeCalculationSta') this.titles = add.title\n       })\n      })\n    },\n    registOpen() {\n      this.resistIs = true\n    },\n    registClose() {\n      this.resistIs = false\n    },\n    registNew(e) {\n      this.registClose()\n      e.preventDefault()\n      console.log(\"this.admin : \", this)\n      let obj = {}\n      obj.kind = \"create_announce_list\"\n      obj.text = this.reg.text\n      obj.location = this.reg.location\n      obj.time = Date.now()\n      obj.checked = this.reg.checked\n      console.log(\"공지사항 등록 : \", obj)\n      this.sendMessage(obj)\n    },\n    modifyVehicle() {\n      this.modifyClose()\n      let obj = {}\n      obj.kind = \"update_announce_list\"\n      obj.text = this.current.text\n      obj.location = this.current.location\n      obj.time = Date.now()\n      obj.checked = this.current.checked\n      console.log(\"공지사항 수정 :\", obj)\n      this.sendMessage(obj)\n    },\n    deleteVehicle() {\n      console.log(\"공지사항 삭제\")\n      this.modifyClose()\n      let obj = {}      \n      obj.text = this.current.text\n      obj.location = this.current.location\n      obj.time = Date.now()\n      obj.checked = this.current.checked\n      obj.kind = \"delete_announce_list\"\n      console.log(\"공지사항 삭제 : \", obj)\n      this.sendMessage(obj)\n    },\n    search1() {\n      let obj1 = {}\n      obj1.kind = \"get_announce_list\"\n      this.sendMessage(obj1)\n    },\n    search() {\n      console.log(\"검색 버튼을 눌렀습니다.\")\n      let obj = {}\n      obj.kind = \"get_announce_list\"\n      this.sendMessage(obj)\n    },\n    loc() {\n      this.location_list= []\n     \n      for(let i = 0; i <  config.manned_parking_list.length; i++){\n        let obj = {}\n        obj.location = config.manned_parking_list[i].location\n        this.location_list.push(obj)\n      }\n     \n    },\n    announce_list_query(data) {\n      // this.daily_stat_list = []\n      this.announce_list = []\n      for (let i = 0; i < data.docs.length; i++) {\n        let obj = {}\n        obj.text = data.docs[i].text\n        obj.location = data.docs[i].location\n        obj.time = data.docs[i].time\n        obj.checked = data.docs[i].checked\n        this.announce_list.push(obj)\n        // let obj = data.docs[i].daily_stat_list\n        console.log(obj)\n        // obj.date = format_time2(new Date(obj.day_loop_event_time))\n        // this.daily_stat_list.push(obj)\n      }\n    },\n    sendMessage(c) {\n      this.$socket.emit(\"message_from_web_client\", c)\n    },\n    modifyOpen(c) {\n      this.modifyIs = true\n      this.current.location = c.location\n      this.current.text = c.text\n      this.current.checked = c.checked\n      console.log(\"this : \", this)\n    },\n    modifyClose() {\n      this.modifyIs = false\n    },\n    \n    download: function() {\n      let dt = new Date()\n      let year = itoStr(dt.getFullYear())\n      let month = itoStr(dt.getMonth() + 1)\n      let day = itoStr(dt.getDate())\n      let hour = itoStr(dt.getHours())\n      let mins = itoStr(dt.getMinutes())\n      let postfix = year + \"_\" + month + \"_\" + day + \"_\" + hour + \"_\" + mins\n      const data = XLSX.utils.json_to_sheet(this.daily_stat_list)\n      const wb = XLSX.utils.book_new()\n      XLSX.utils.book_append_sheet(wb, data, \"data\")\n      XLSX.writeFile(\n        wb,\n        \"하테크노타운주차장_공지사항_\" + postfix + \".xlsx\"\n      )\n    }\n  }\n}\nfunction itoStr($num) {\n  $num < 10 ? ($num = \"0\" + $num) : $num\n  return $num.toString()\n}\n</script>\n<style>\n</style>\n"]}]}